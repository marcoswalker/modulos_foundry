{"mappings":"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","sources":["<anon>","tokenmagic/module/tokenmagic.js","tokenmagic/fx/filters/FilterAdjustment.js","tokenmagic/fx/Anime.js","tokenmagic/fx/filters/proto/FilterProto.js","tokenmagic/module/proto/PlaceableObjectProto.js","tokenmagic/module/constants.js","tokenmagic/fx/filters/FilterAscii.js","tokenmagic/fx/filters/FilterAdvancedBloom.js","tokenmagic/fx/filters/FilterDot.js","tokenmagic/fx/filters/FilterDistortion.js","tokenmagic/fx/filters/FilterOldFilm.js","tokenmagic/fx/filters/FilterGlow.js","tokenmagic/fx/filters/FilterOutline.js","tokenmagic/fx/filters/FilterBevel.js","tokenmagic/fx/filters/FilterDropShadow.js","tokenmagic/fx/filters/FilterDropShadowEx.js","tokenmagic/fx/filters/CustomFilter.js","tokenmagic/fx/glsl/fragmentshaders/dropshadow.js","tokenmagic/fx/glsl/vertexshaders/customvertex2D.js","tokenmagic/fx/filters/FilterTwist.js","tokenmagic/fx/filters/FilterZoomBlur.js","tokenmagic/fx/filters/FilterBlur.js","tokenmagic/fx/filters/FilterBlurEx.js","tokenmagic/fx/filters/FilterShockWave.js","tokenmagic/fx/filters/FilterBulgePinch.js","tokenmagic/fx/filters/FilterRemoveShadow.js","tokenmagic/fx/glsl/fragmentshaders/removeshadow.js","tokenmagic/fx/filters/FilterRays.js","tokenmagic/fx/glsl/fragmentshaders/cosmicray.js","tokenmagic/fx/filters/FilterFog.js","tokenmagic/fx/glsl/fragmentshaders/fog.js","tokenmagic/fx/filters/FilterXFog.js","tokenmagic/fx/glsl/fragmentshaders/xfog.js","tokenmagic/fx/filters/FilterElectric.js","tokenmagic/fx/glsl/fragmentshaders/electricity.js","tokenmagic/fx/filters/FilterWaves.js","tokenmagic/fx/glsl/fragmentshaders/waves.js","tokenmagic/fx/filters/FilterFire.js","tokenmagic/fx/glsl/fragmentshaders/fire.js","tokenmagic/fx/filters/FilterFumes.js","tokenmagic/fx/glsl/fragmentshaders/fumes.js","tokenmagic/fx/filters/FilterFlood.js","tokenmagic/fx/glsl/fragmentshaders/flood.js","tokenmagic/fx/filters/FilterSmoke.js","tokenmagic/fx/glsl/fragmentshaders/smoke.js","tokenmagic/fx/filters/FilterForceField.js","tokenmagic/fx/glsl/fragmentshaders/forcefield.js","tokenmagic/fx/filters/FilterMirrorImages.js","tokenmagic/fx/glsl/fragmentshaders/mirrorimages.js","tokenmagic/fx/filters/FilterXRays.js","tokenmagic/fx/glsl/fragmentshaders/xray.js","tokenmagic/fx/filters/FilterLiquid.js","tokenmagic/fx/glsl/fragmentshaders/liquid.js","tokenmagic/fx/filters/FilterGleamingGlow.js","tokenmagic/fx/glsl/fragmentshaders/magicglow.js","tokenmagic/fx/filters/FilterPixelate.js","tokenmagic/fx/filters/FilterSpiderWeb.js","tokenmagic/fx/glsl/fragmentshaders/spiderweb.js","tokenmagic/fx/filters/FilterSolarRipples.js","tokenmagic/fx/glsl/fragmentshaders/ripples.js","tokenmagic/fx/filters/FilterGlobes.js","tokenmagic/fx/glsl/fragmentshaders/globes.js","tokenmagic/fx/filters/FilterTransform.js","tokenmagic/fx/glsl/fragmentshaders/matrix.js","tokenmagic/fx/filters/FilterSplash.js","tokenmagic/fx/glsl/fragmentshaders/splash.js","tokenmagic/fx/filters/FilterPolymorph.js","tokenmagic/fx/glsl/fragmentshaders/polymorph.js","tokenmagic/fx/glsl/vertexshaders/customvertex2DSampler.js","tokenmagic/fx/filters/FilterXFire.js","tokenmagic/fx/glsl/fragmentshaders/xfire.js","tokenmagic/fx/filters/FilterSprite.js","tokenmagic/fx/glsl/fragmentshaders/sprite.js","tokenmagic/fx/filters/FilterSpriteMask.js","tokenmagic/fx/glsl/fragmentshaders/spritemask.js","tokenmagic/fx/filters/FilterReplaceColor.js","tokenmagic/fx/filters/FilterDDTint.js","tokenmagic/fx/glsl/fragmentshaders/ddtint.js","tokenmagic/fx/presets/defaultpresets.js","tokenmagic/migration/migration.js","tokenmagic/fx/filters/FilterCRT.js","tokenmagic/fx/filters/FilterRGBSplit.js","tokenmagic/module/settings.js","tokenmagic/module/autoTemplate/dnd5e.js","tokenmagic/module/autoTemplate/pf2e.js","tokenmagic/module/autoTemplate/TheWitcherTRPG.js"],"sourcesContent":["\nclass $c1844ae22deae2c0$export$b229f242afc35ae9 {\n    constructor(puppet){\n        const self = this;\n        this.puppet = puppet;\n        this.animated = null;\n        this.animeId = randomID();\n        // Time/synchronization related variables\n        this.frameTime = {};\n        this.elapsedTime = {};\n        this.loopElapsedTime = {};\n        this.loops = {};\n        this.internalLoops = {};\n        this.ping = {};\n        this.pauseBetweenElapsedTime = {};\n        this.pauseBetween = {};\n        this.shutdown = {};\n        if (!(this.puppet == null)) {\n            if (this.puppet.hasOwnProperty(\"animated\") && !(this.puppet.animated == null) && typeof this.puppet.animated === \"object\" && Object.keys(this.puppet.animated).length > 0) {\n                this.initAnimatedInternals(this.puppet.animated);\n                this.animated = this.puppet.animated; // easy access to the puppet's animodes\n            }\n            $c1844ae22deae2c0$export$b229f242afc35ae9.addAnimation(self); // ready to tick\n        }\n    }\n    static rgbToValue(r, g, b) {\n        return r << 16 | g << 8 | b;\n    }\n    static valueToRgb(bin) {\n        const r = bin >> 16;\n        const g = bin >> 8 & 0xff;\n        const b = bin & 0xff;\n        return [\n            r,\n            g,\n            b\n        ];\n    }\n    static oscillation(elapsed, loopDuration, syncShift, val1, val2, func, isSync, xpi = $c1844ae22deae2c0$export$b229f242afc35ae9.twoPi) {\n        return (val1 - val2) * (func(xpi * (isSync ? $c1844ae22deae2c0$export$b229f242afc35ae9.getSynchronizedTime(loopDuration, syncShift) : elapsed / loopDuration + syncShift)) + 1) / 2 + val2;\n    }\n    static colOscillation(elapsed, loopDuration, syncShift, val1, val2, isSync, xpi = $c1844ae22deae2c0$export$b229f242afc35ae9.twoPi) {\n        const rgbValue1 = $c1844ae22deae2c0$export$b229f242afc35ae9.valueToRgb(val1);\n        const rgbValue2 = $c1844ae22deae2c0$export$b229f242afc35ae9.valueToRgb(val2);\n        return $c1844ae22deae2c0$export$b229f242afc35ae9.rgbToValue(Math.floor($c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(elapsed, loopDuration, syncShift, rgbValue1[0], rgbValue2[0], Math.cos, isSync, xpi)), Math.floor($c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(elapsed, loopDuration, syncShift, rgbValue1[1], rgbValue2[1], Math.cos, isSync, xpi)), Math.floor($c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(elapsed, loopDuration, syncShift, rgbValue1[2], rgbValue2[2], Math.cos, isSync, xpi)));\n    }\n    static getSynchronizedTime(loopDuration, syncShift) {\n        return $c1844ae22deae2c0$export$b229f242afc35ae9._lastTime / loopDuration + syncShift;\n    }\n    static getSynchronizedRotation(loopDuration, syncShift) {\n        return 360 * (($c1844ae22deae2c0$export$b229f242afc35ae9._lastTime + syncShift) % loopDuration) / loopDuration;\n    }\n    static getPuppetsByParams(params) {\n        let puppetArray = [];\n        $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.forEach((anime, id)=>{\n            if (anime.puppet.placeableId === params.placeableId && anime.puppet.filterId === params.filterId && (!anime.puppet.hasOwnProperty(\"filterInternalId\") || anime.puppet.filterInternalId === params.filterInternalId)) puppetArray.push(anime.puppet);\n        });\n        return puppetArray;\n    }\n    static addAnimation(anime) {\n        $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.set(anime.animeId, anime);\n        $c1844ae22deae2c0$export$b229f242afc35ae9._resumeAnimation();\n    }\n    static removeAnimation(placeableId) {\n        $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.forEach((anime, id)=>{\n            if (anime.puppet.placeableId === placeableId) $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.delete(id);\n        });\n        if ($c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.size === 0) $c1844ae22deae2c0$export$b229f242afc35ae9._suspendAnimation();\n    }\n    static removeAnimationByFilterId(placeableId, filterId) {\n        $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.forEach((anime, id)=>{\n            if (anime.puppet.placeableId === placeableId && anime.puppet.filterId === filterId) $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.delete(id);\n        });\n        if ($c1844ae22deae2c0$export$b229f242afc35ae9._animeMap.size === 0) $c1844ae22deae2c0$export$b229f242afc35ae9._suspendAnimation();\n    }\n    static resetAnimation() {\n        $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap = new Map();\n        $c1844ae22deae2c0$export$b229f242afc35ae9._suspended = true;\n    }\n    static tick() {\n        $c1844ae22deae2c0$export$b229f242afc35ae9._lastTime = canvas.app.ticker.lastTime;\n        $c1844ae22deae2c0$export$b229f242afc35ae9._frameTime = $c1844ae22deae2c0$export$b229f242afc35ae9._lastTime - $c1844ae22deae2c0$export$b229f242afc35ae9._prevTime;\n        for (const [id, anime] of $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap)if (anime.puppet.enabled) {\n            if (anime.puppet.hasOwnProperty(\"preComputation\") && anime.puppet.placeableImg != null) anime.puppet.preComputation();\n            if (anime.puppet.hasOwnProperty(\"animated\") && !(anime.puppet.animated == null)) anime.animate($c1844ae22deae2c0$export$b229f242afc35ae9._frameTime);\n        }\n        $c1844ae22deae2c0$export$b229f242afc35ae9._prevTime = $c1844ae22deae2c0$export$b229f242afc35ae9._lastTime;\n    }\n    static _suspendAnimation() {\n        if ($c1844ae22deae2c0$export$b229f242afc35ae9._activated && !$c1844ae22deae2c0$export$b229f242afc35ae9._suspended && !(0, $97b1237a45b106ea$export$4876a704e2bf90fb)()) $c1844ae22deae2c0$export$b229f242afc35ae9._detachFromTicker();\n        $c1844ae22deae2c0$export$b229f242afc35ae9._suspended = true;\n    }\n    static _resumeAnimation() {\n        if ($c1844ae22deae2c0$export$b229f242afc35ae9._activated && $c1844ae22deae2c0$export$b229f242afc35ae9._suspended && !(0, $97b1237a45b106ea$export$4876a704e2bf90fb)()) $c1844ae22deae2c0$export$b229f242afc35ae9._attachToTicker();\n        $c1844ae22deae2c0$export$b229f242afc35ae9._suspended = false;\n    }\n    static activateAnimation() {\n        if (!$c1844ae22deae2c0$export$b229f242afc35ae9._activated && !$c1844ae22deae2c0$export$b229f242afc35ae9._suspended && !(0, $97b1237a45b106ea$export$4876a704e2bf90fb)()) $c1844ae22deae2c0$export$b229f242afc35ae9._attachToTicker();\n        $c1844ae22deae2c0$export$b229f242afc35ae9._activated = true;\n    }\n    static deactivateAnimation() {\n        if ($c1844ae22deae2c0$export$b229f242afc35ae9._activated && !$c1844ae22deae2c0$export$b229f242afc35ae9._suspended && !(0, $97b1237a45b106ea$export$4876a704e2bf90fb)()) $c1844ae22deae2c0$export$b229f242afc35ae9._detachFromTicker();\n        $c1844ae22deae2c0$export$b229f242afc35ae9._activated = false;\n    }\n    static _attachToTicker() {\n        canvas.app.ticker.add($c1844ae22deae2c0$export$b229f242afc35ae9.tick, this, PIXI.UPDATE_PRIORITY.LOW + 1);\n        $c1844ae22deae2c0$export$b229f242afc35ae9._lastTime = canvas.app.ticker.lastTime;\n        $c1844ae22deae2c0$export$b229f242afc35ae9._prevTime = $c1844ae22deae2c0$export$b229f242afc35ae9._lastTime;\n    }\n    static _detachFromTicker() {\n        canvas.app.ticker.remove($c1844ae22deae2c0$export$b229f242afc35ae9.tick, this);\n        $c1844ae22deae2c0$export$b229f242afc35ae9._lastTime = 0;\n        $c1844ae22deae2c0$export$b229f242afc35ae9._prevTime = 0;\n    }\n    static getAnimeMap() {\n        return $c1844ae22deae2c0$export$b229f242afc35ae9._animeMap;\n    }\n    initAnimatedInternals(animated) {\n        Object.keys(animated).forEach((effect)=>{\n            // Internals init\n            this.initInternals(effect);\n        });\n    }\n    initInternals(effect) {\n        this.elapsedTime[effect] = 0;\n        this.loopElapsedTime[effect] = 0;\n        this.pauseBetweenElapsedTime[effect] = 0;\n        this.loops[effect] = 0;\n        this.internalLoops[effect] = 0;\n        this.frameTime[effect] = 0;\n        this.pauseBetween[effect] = false;\n        this.ping[effect] = false;\n        this.shutdown[effect] = false;\n    }\n    hasInternals(effect) {\n        return this.elapsedTime.hasOwnProperty(effect);\n    }\n    animate(frameTime) {\n        for (const effect of Object.keys(this.puppet.animated))if (this.animated[effect].active && this.cycleCheck(effect, frameTime)) {\n            if (this[this.animated[effect].animType] != null) this[this.animated[effect].animType](effect);\n            if (this.shutdown[effect]) {\n                this.animated[effect].active = false;\n                this.shutdown[effect] = false;\n                // persists the value of an effect which is terminated.\n                this.persistTerminatedEffect(effect);\n            } else {\n                this.loopElapsedTime[effect] += frameTime;\n                this.elapsedTime[effect] += frameTime;\n            }\n        }\n        this.autoDisableCheck();\n    }\n    cycleCheck(effect, frameTime) {\n        this.frameTime[effect] = frameTime;\n        if (this.isPauseBetweenLoop(effect, frameTime)) return false;\n        if (this.loopElapsedTime[effect] > this.animated[effect].loopDuration) {\n            this.loopElapsedTime[effect] -= this.animated[effect].loopDuration;\n            this.ping[effect] = true;\n            if (this.animated[effect].loops !== Infinity) {\n                this.loops[effect]++;\n                this.internalLoops[effect]++;\n            }\n            if (this.loops[effect] >= this.animated[effect].loops) {\n                // correction to stop exactly on the target value when the last loop end.\n                this.elapsedTime[effect] = this.internalLoops[effect] * this.animated[effect].loopDuration;\n                this.loops[effect] = 0;\n                this.loopElapsedTime[effect] = 0;\n                this.shutdown[effect] = true;\n            } else if (this.animated[effect].pauseBetweenDuration > 0) {\n                this.elapsedTime[effect] = this.animated[effect].loopDuration;\n                this.pauseBetween[effect] = true;\n            }\n        }\n        return true;\n    }\n    async persistTerminatedEffect(effect) {\n        if (!(this.puppet.filterOwner === game.data.userId)) return;\n        let animeInfo;\n        let doInit = true;\n        let flag = this.puppet.targetPlaceable.document.getFlag(\"tokenmagic\", \"animeInfo\");\n        if (flag) // fastest than array.find\n        for (const animeinfo of flag.values()){\n            if (animeinfo.tmFilterId === this.puppet.filterId && animeinfo.tmFilterInternalId === this.puppet.filterInternalId && animeinfo.tmFilterEffect === effect) {\n                if (animeinfo && animeinfo instanceof Object) {\n                    animeinfo.tmFilterEffectValue = this.puppet[effect];\n                    doInit = false;\n                    break;\n                }\n            }\n        }\n        if (doInit) {\n            animeInfo = [\n                {\n                    tmFilterId: this.puppet.filterId,\n                    tmFilterInternalId: this.puppet.filterInternalId,\n                    tmFilterEffect: effect,\n                    tmFilterEffectValue: this.puppet[effect]\n                }\n            ];\n            if (flag) flag = flag.concat(animeInfo);\n            else flag = animeInfo;\n        }\n        flag = duplicate(flag);\n        await this.puppet.targetPlaceable._TMFXsetAnimeFlag(flag);\n    }\n    autoDisableCheck() {\n        if (!(this.puppet.autoDisable || this.puppet.autoDestroy)) return;\n        if (!(this.puppet.filterOwner === game.data.userId)) return;\n        if (this.puppet.enabled === false && !this.puppet.autoDestroy) return;\n        if (Object.values(this.animated).every((animeEffect)=>animeEffect.active === false)) this.disableOrDestroy();\n    }\n    async disableOrDestroy() {\n        if (this.puppet == null) return;\n        const placeable = this.puppet.targetPlaceable;\n        if (placeable == null) return;\n        if (this.puppet.autoDestroy) await window.TokenMagic.deleteFilters(placeable, this.puppet.filterId);\n        else {\n            let params = {};\n            params.filterType = this.puppet.filterType;\n            params.filterId = this.puppet.filterId;\n            params.enabled = false;\n            await window.TokenMagic.updateFiltersByPlaceable(placeable, [\n                params\n            ]);\n        }\n    }\n    isPauseBetweenLoop(effect, frametime) {\n        if (this.pauseBetween[effect] && this.animated[effect].pauseBetweenDuration > 0) {\n            this.pauseBetweenElapsedTime[effect] += frametime;\n            if (this.pauseBetweenElapsedTime[effect] < this.animated[effect].pauseBetweenDuration) return true;\n            else {\n                this.pauseBetweenElapsedTime[effect] = 0;\n                return this.pauseBetween[effect] = false;\n            }\n        }\n        return false;\n    }\n    pauseBetweenCheck(effect, frametime) {\n        if (this.pauseStart[effect] && this.animated[effect].pauseStartDuration > 0) {\n            this.pauseStartElapsedTime[effect] += frametime;\n            if (this.pauseStartElapsedTime[effect] < this.animated[effect].pauseStartDuration) return false;\n            else {\n                this.pauseStart[effect] = false;\n                return true;\n            }\n        }\n    }\n    moveToward(effect) {\n        this.puppet[effect] = (this.animated[effect].val1 - this.animated[effect].val2) / this.animated[effect].loopDuration * this.elapsedTime[effect];\n    }\n    colorOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.colOscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, false);\n    }\n    halfColorOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.colOscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, false, Math.PI);\n    }\n    syncColorOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.colOscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, true);\n    }\n    cosOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.cos, false);\n    }\n    halfCosOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.cos, false, Math.PI);\n    }\n    sinOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.sin, false);\n    }\n    halfSinOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.sin, false, Math.PI);\n    }\n    chaoticOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor, this.animated[effect].val1, this.animated[effect].val2, Math.cos, false);\n    }\n    syncCosOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.cos, true);\n    }\n    syncSinOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.sin, true);\n    }\n    syncChaoticOscillation(effect) {\n        this.puppet[effect] = $c1844ae22deae2c0$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor, this.animated[effect].val1, this.animated[effect].val2, Math.cos, true);\n    }\n    rotation(effect) {\n        const computedRotation = 360 * this.elapsedTime[effect] / this.animated[effect].loopDuration;\n        this.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\n    }\n    syncRotation(effect) {\n        const computedRotation = $c1844ae22deae2c0$export$b229f242afc35ae9.getSynchronizedRotation(this.animated[effect].loopDuration, this.animated[effect].syncShift);\n        this.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\n    }\n    randomNumber(effect) {\n        const randomNumber = Math.random() * (this.animated[effect].val2 - this.animated[effect].val1) + this.animated[effect].val1;\n        if (this.animated[effect].wantInteger) this.puppet[effect] = Math.floor(randomNumber);\n        else this.puppet[effect] = randomNumber;\n    }\n    randomNumberPerLoop(effect) {\n        if (this._ringing(effect)) this.randomNumber(effect);\n    }\n    randomColor(effect) {\n        this.puppet[effect] = Math.floor(Math.random() * 16777215);\n    }\n    randomColorPerLoop(effect) {\n        if (this._ringing(effect)) this.randomColor(effect);\n    }\n    move(effect) {\n        this.puppet[effect] += this.animated[effect].speed * this.frameTime[effect];\n    }\n    _ringing(effect) {\n        if (this.ping[effect]) {\n            this.ping[effect] = false;\n            return true;\n        }\n        return false;\n    }\n}\n$c1844ae22deae2c0$export$b229f242afc35ae9._lastTime = 0;\n$c1844ae22deae2c0$export$b229f242afc35ae9._prevTime = 0;\n$c1844ae22deae2c0$export$b229f242afc35ae9._frameTime = 0;\n$c1844ae22deae2c0$export$b229f242afc35ae9._animeMap = new Map();\n$c1844ae22deae2c0$export$b229f242afc35ae9.twoPi = Math.PI * 2;\n$c1844ae22deae2c0$export$b229f242afc35ae9._activated = false;\n$c1844ae22deae2c0$export$b229f242afc35ae9._suspended = true;\n\n\n\n\nconst $165cdb672a404ae7$export$7395e4cb572e863b = 0.5;\nconst $165cdb672a404ae7$export$680af52575be3523 = \"NOFX\";\nconst $165cdb672a404ae7$export$2f8ff78910784c41 = 10000;\n\n\nvar $df3c2368c99a47ef$export$5b94be486bc63144 = (0, $165cdb672a404ae7$export$2f8ff78910784c41);\nPlaceableObject.prototype.TMFXaddFilters = async function(paramsArray, replace = false) {\n    await (0, $97b1237a45b106ea$export$480e4c19201e4e74).addFilters(this, paramsArray, replace);\n};\nPlaceableObject.prototype.TMFXupdateFilters = async function(paramsArray) {\n    await (0, $97b1237a45b106ea$export$480e4c19201e4e74).updateFiltersByPlaceable(this, paramsArray);\n};\nPlaceableObject.prototype.TMFXaddUpdateFilters = async function(paramsArray) {\n    await (0, $97b1237a45b106ea$export$480e4c19201e4e74).addUpdateFilters(this, paramsArray);\n};\nPlaceableObject.prototype.TMFXdeleteFilters = async function(filterId = null) {\n    await (0, $97b1237a45b106ea$export$480e4c19201e4e74).deleteFilters(this, filterId);\n};\nPlaceableObject.prototype.TMFXhasFilterType = function(filterType) {\n    return (0, $97b1237a45b106ea$export$480e4c19201e4e74).hasFilterType(this, filterType);\n};\nPlaceableObject.prototype.TMFXhasFilterId = function(filterId) {\n    return (0, $97b1237a45b106ea$export$480e4c19201e4e74).hasFilterId(this, filterId);\n};\nPlaceableObject.prototype._TMFXsetFlag = async function(flag) {\n    if ((0, $97b1237a45b106ea$export$ae4b89d79d01bd2b)()) (0, $97b1237a45b106ea$export$24d33a6f4bffea69)(this, flag, (0, $97b1237a45b106ea$export$157d7b8c087faa7b).SET_FLAG);\n    else await this.document.setFlag(\"tokenmagic\", \"filters\", flag);\n};\nPlaceableObject.prototype._TMFXsetAnimeFlag = async function(flag) {\n    if ((0, $97b1237a45b106ea$export$ae4b89d79d01bd2b)()) (0, $97b1237a45b106ea$export$24d33a6f4bffea69)(this, flag, (0, $97b1237a45b106ea$export$157d7b8c087faa7b).SET_ANIME_FLAG);\n    else await this.document.setFlag(\"tokenmagic\", \"animeInfo\", flag);\n};\nPlaceableObject.prototype._TMFXunsetFlag = async function() {\n    if ((0, $97b1237a45b106ea$export$ae4b89d79d01bd2b)()) (0, $97b1237a45b106ea$export$24d33a6f4bffea69)(this, null, (0, $97b1237a45b106ea$export$157d7b8c087faa7b).SET_FLAG);\n    else await this.document.unsetFlag(\"tokenmagic\", \"filters\");\n};\nPlaceableObject.prototype._TMFXunsetAnimeFlag = async function() {\n    if ((0, $97b1237a45b106ea$export$ae4b89d79d01bd2b)()) (0, $97b1237a45b106ea$export$24d33a6f4bffea69)(this, null, (0, $97b1237a45b106ea$export$157d7b8c087faa7b).SET_ANIME_FLAG);\n    else await this.document.unsetFlag(\"tokenmagic\", \"animeInfo\");\n};\nPlaceableObject.prototype._TMFXgetSprite = function() {\n    const type = this._TMFXgetPlaceableType();\n    switch(type){\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TOKEN:\n            return this.mesh;\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TILE:\n            return this.mesh ?? this.bg;\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TEMPLATE:\n            return this.template;\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).DRAWING:\n            return this.hasText ? this.text : this.shape;\n        default:\n            return null;\n    }\n};\nPlaceableObject.prototype._TMFXgetPlaceablePadding = function() {\n    // get the placeable padding, by taking into account all filters and options\n    let accPadding = 0;\n    const filters = this._TMFXgetSprite().filters;\n    if (filters instanceof Array) for (const filter of filters){\n        if (!filter.enabled) continue;\n        if (canvas.app.renderer.filter.useMaxPadding) accPadding = Math.max(accPadding, filter.padding);\n        else accPadding += filter.padding;\n    }\n    return accPadding;\n};\nPlaceableObject.prototype._TMFXcheckSprite = function() {\n    const type = this._TMFXgetPlaceableType();\n    switch(type){\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TOKEN:\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TILE:\n            return !(this.mesh == null);\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TEMPLATE:\n            return !(this.template == null);\n        case (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).DRAWING:\n            return !(this.shape == null);\n        default:\n            return null;\n    }\n};\nPlaceableObject.prototype._TMFXgetMaxFilterRank = function() {\n    const sprite = this._TMFXgetSprite();\n    if (sprite == null) return $df3c2368c99a47ef$export$5b94be486bc63144++;\n    if (sprite.filters == null) return $df3c2368c99a47ef$export$5b94be486bc63144++;\n    else {\n        let maxRank = Math.max(...sprite.filters.map((f)=>f.rank), (0, $165cdb672a404ae7$export$2f8ff78910784c41));\n        $df3c2368c99a47ef$export$5b94be486bc63144 = Math.max(maxRank, $df3c2368c99a47ef$export$5b94be486bc63144) + 1;\n        return $df3c2368c99a47ef$export$5b94be486bc63144;\n    }\n};\nPlaceableObject.prototype._TMFXsetRawFilters = function(filters) {\n    function insertFilter(filters) {\n        function filterZOrderCompare(a, b) {\n            if (a.zOrder < b.zOrder) return -1;\n            if (a.zOrder > b.zOrder) return 1;\n            return 0;\n        }\n        function filterRankCompare(a, b) {\n            if (a.rank < b.rank) return -1;\n            if (a.rank > b.rank) return 1;\n            return 0;\n        }\n        if (!isZOrder) {\n            if (!filters.hasOwnProperty(\"rank\")) {\n                let maxRank = Math.max(...sprite.filters.map((f)=>f.rank), (0, $165cdb672a404ae7$export$2f8ff78910784c41));\n                filters.rank = maxRank + 1;\n            }\n        }\n        sprite.filters.push(filters);\n        isZOrder ? sprite.filters.sort(filterZOrderCompare) : sprite.filters.sort(filterRankCompare);\n    }\n    function addFilter(filters) {\n        if (!isZOrder && !filters.hasOwnProperty(\"rank\")) filters.rank = (0, $165cdb672a404ae7$export$2f8ff78910784c41);\n        sprite.filters = [\n            filters\n        ];\n    }\n    const isZOrder = (0, $97b1237a45b106ea$export$222530a21fa4a417)();\n    const sprite = this._TMFXgetSprite();\n    if (sprite == null) return false;\n    if (filters == null) sprite.filters = null;\n    else sprite.filters == null ? addFilter(filters) : insertFilter(filters);\n    return true;\n};\nPlaceableObject.prototype._TMFXunsetRawFilters = function() {\n    return this._TMFXsetRawFilters(null);\n};\nPlaceableObject.prototype._TMFXgetPlaceableType = function() {\n    if ([\n        (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TOKEN,\n        (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TEMPLATE,\n        (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TILE,\n        (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).DRAWING\n    ].includes(this.constructor.embeddedName)) return this.constructor.embeddedName;\n    return (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).NOT_SUPPORTED;\n};\n\n\nPIXI.Filter.prototype.setTMParams = function(params) {\n    this.autoDisable = false;\n    this.autoDestroy = false;\n    this.gridPadding = 0;\n    this.boundsPadding = new PIXI.Point(0, 0);\n    this.currentPadding = 0;\n    this.recalculatePadding = true;\n    this.dummy = false;\n    foundry.utils.mergeObject(this, params);\n    if (!this.dummy) {\n        this.rawPadding = this.rawPadding ?? this.padding ?? 0;\n        this.originalPadding = Math.max(this.rawPadding, (0, $97b1237a45b106ea$export$a3e1d0865041c250)());\n        this.assignPlaceable();\n        this.activateTransform();\n        Object.defineProperty(this, \"padding\", {\n            get: function() {\n                if (this.recalculatePadding) this.calculatePadding();\n                return this.currentPadding;\n            },\n            set: function(padding) {\n                this.rawPadding = padding;\n                this.originalPadding = Math.max(padding, (0, $97b1237a45b106ea$export$a3e1d0865041c250)());\n            }\n        });\n    } else this.apply = function(filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n};\nPIXI.Filter.prototype.getPlaceable = function() {\n    return (0, $97b1237a45b106ea$export$5008448b4c27fa2b)(this.placeableId, this.placeableType);\n};\nPIXI.Filter.prototype.getPlaceableType = function() {\n    return this.placeableType;\n};\nPIXI.Filter.prototype.calculatePadding = function() {\n    const target = this.placeableImg;\n    let width;\n    let height;\n    {\n        const ang = !this.sticky && this.placeableType !== (0, $97b1237a45b106ea$export$f2f6f02affe07ab5).TOKEN ? target.rotation : 0;\n        const sin = Math.sin(ang);\n        const cos = Math.cos(ang);\n        width = Math.abs(target.width * cos) + Math.abs(target.height * sin);\n        height = Math.abs(target.width * sin) + Math.abs(target.height * cos);\n    }\n    if (this.gridPadding > 0) {\n        const gridSize = canvas.dimensions.size;\n        this.boundsPadding.x = this.boundsPadding.y = (this.gridPadding - 1) * gridSize;\n        this.boundsPadding.x += (gridSize - 1 - (width + gridSize - 1) % gridSize) / 2;\n        this.boundsPadding.y += (gridSize - 1 - (height + gridSize - 1) % gridSize) / 2;\n    } else this.boundsPadding.x = this.boundsPadding.y = this.rawPadding;\n    {\n        const ang = this.sticky ? target.rotation : 0;\n        const sin = Math.sin(ang);\n        const cos = Math.cos(ang);\n        this.currentPadding = Math.max(Math.abs(this.boundsPadding.x * cos) + Math.abs(this.boundsPadding.y * sin), Math.abs(this.boundsPadding.x * sin) + Math.abs(this.boundsPadding.y * cos)) + (this.originalPadding - this.rawPadding);\n    }\n    this.boundsPadding.x += (width - target.width) / 2;\n    this.boundsPadding.y += (height - target.height) / 2;\n    const scale = this.targetPlaceable.worldTransform.a;\n    this.boundsPadding.x *= scale;\n    this.boundsPadding.y *= scale;\n    this.currentPadding *= scale;\n};\nPIXI.Filter.prototype.assignPlaceable = function() {\n    this.targetPlaceable = this.getPlaceable();\n    this.targetPlaceable != null ? this.placeableImg = this.targetPlaceable._TMFXgetSprite() : this.placeableImg = null;\n};\nPIXI.Filter.prototype.activateTransform = function() {\n    this.preComputation = this.filterTransform;\n    this.filterTransform();\n    const apply = this.apply;\n    this.apply = function(filterManager, input, output, clear, state) {\n        if (\"handleTransform\" in this) this.handleTransform(state);\n        return apply.apply(this, arguments);\n    };\n};\nPIXI.Filter.prototype.filterTransform = function() {\n    if (this.hasOwnProperty(\"zIndex\")) this.targetPlaceable.zIndex = this.zIndex;\n};\nPIXI.Filter.prototype.normalizeTMParams = function() {\n    if (this.hasOwnProperty(\"animated\") && !(this.animated == null)) // Normalize animations properties\n    Object.keys(this.animated).forEach((effect)=>{\n        if (this.animated[effect].active == null || typeof this.animated[effect].active != \"boolean\") this.animated[effect].active = true;\n        if (this.animated[effect].loops == null || typeof this.animated[effect].loops != \"number\" || this.animated[effect].loops <= 0) this.animated[effect].loops = Infinity;\n        if (this.animated[effect].loopDuration == null || typeof this.animated[effect].loopDuration != \"number\" || this.animated[effect].loopDuration <= 0) this.animated[effect].loopDuration = 3000;\n        if (this.animated[effect].clockWise == null || typeof this.animated[effect].clockWise != \"boolean\") this.animated[effect].clockWise = true;\n        if (this.animated[effect].pauseBetweenDuration == null || typeof this.animated[effect].pauseBetweenDuration != \"number\" || this.animated[effect].pauseBetweenDuration <= 0) this.animated[effect].pauseBetweenDuration = 0;\n        if (this.animated[effect].syncShift == null || typeof this.animated[effect].syncShift != \"number\" || this.animated[effect].syncShift < 0) this.animated[effect].syncShift = 0;\n        if (this.animated[effect].val1 == null || typeof this.animated[effect].val1 != \"number\") this.animated[effect].val1 = 0;\n        if (this.animated[effect].val2 == null || typeof this.animated[effect].val2 != \"number\") this.animated[effect].val2 = 0;\n        if (this.anime[this.animated[effect].animType] === undefined) this.animated[effect].animType = null;\n        if (this.animated[effect].speed == null || typeof this.animated[effect].speed != \"number\") this.animated[effect].speed = 0;\n        if (this.animated[effect].chaosFactor == null || typeof this.animated[effect].chaosFactor != \"number\") this.animated[effect].chaosFactor = 0.25;\n        if (this.animated[effect].wantInteger == null || typeof this.animated[effect].wantInteger != \"boolean\") this.animated[effect].wantInteger = false;\n        if (!this.anime.hasInternals(effect)) this.anime.initInternals(effect);\n        this.anime.animated = this.animated;\n    });\n};\n\n\nclass $2fe05231a5671b9f$export$1545cd3bbac349ce extends PIXI.filters.AdjustmentFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.gamma = 1;\n        this.saturation = 1;\n        this.contrast = 1;\n        this.brightness = 1;\n        this.red = 1;\n        this.green = 1;\n        this.blue = 1;\n        this.alpha = 1;\n        this.zOrder = 30;\n        this.animating = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $f1f93c519987627d$export$1efdcfd4cb16ac29 extends PIXI.filters.AsciiFilter {\n    constructor(params){\n        super();\n        this.size = 8;\n        this.zOrder = 310;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $4d02ab9fc92d64ef$export$e7bbc116d34f17bc extends PIXI.filters.AdvancedBloomFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.threshold = 0.5;\n        this.bloomScale = 1.0;\n        this.brightness = 1.0;\n        this.blur = 4.0;\n        this.quality = 4.0;\n        this.zOrder = 40;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $a0121c7d42a6541e$export$d75528d01a211954 extends PIXI.filters.DotFilter {\n    constructor(params){\n        super();\n        this.scale = 1;\n        this.angle = 5;\n        this.grayscale = true;\n        this.zOrder = 330;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\n\nclass $463c3c68cacec30e$export$2d59c37be5e749a7 extends PIXI.filters.DisplacementFilter {\n    constructor(params){\n        // Loading distortion sprite\n        var displacementSpriteMask;\n        var spriteMaskPath;\n        spriteMaskPath = params.hasOwnProperty(\"maskPath\") ? (0, $97b1237a45b106ea$export$3bebb302ab08af33)(params.maskPath) : \"modules/tokenmagic/fx/assets/distortion-1.png\";\n        displacementSpriteMask = PIXI.Sprite.from(spriteMaskPath);\n        super(displacementSpriteMask);\n        // Configuring distortion sprite\n        this.sprite = displacementSpriteMask;\n        this.wrapMode = PIXI.WRAP_MODES.REPEAT;\n        this.position = new PIXI.Point();\n        this.skew = new PIXI.Point();\n        this.pivot = new PIXI.Point();\n        this.anchorSet = 0.5;\n        this.transition = null;\n        this.padding = 15; // conf\n        this.enabled = false;\n        this.maskSpriteX = 0;\n        this.maskSpriteY = 0;\n        this.maskSpriteScaleX = 4;\n        this.maskSpriteScaleY = 4;\n        this.maskSpriteSkewX = 0;\n        this.maskSpriteSkewY = 0;\n        this.maskSpriteRotation = 0;\n        this.zOrder = 4000;\n        this.sticky = true;\n        this.animated = {};\n        this.setTMParams(params);\n        this.maskPath = spriteMaskPath;\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n            this.sprite.anchor.set(this.anchorSet);\n            this.sprite.texture.baseTexture.wrapMode = this.wrapMode;\n        }\n    }\n    set maskSpriteX(value) {\n        this.position.x = value;\n    }\n    set maskSpriteY(value) {\n        this.position.y = value;\n    }\n    get maskSpriteX() {\n        return this.position.x;\n    }\n    get maskSpriteY() {\n        return this.position.y;\n    }\n    set maskSpriteScaleX(value) {\n        this.scale.x = value;\n    }\n    set maskSpriteScaleY(value) {\n        this.scale.y = value;\n    }\n    get maskSpriteScaleX() {\n        return this.scale.x;\n    }\n    get maskSpriteScaleY() {\n        return this.scale.y;\n    }\n    set maskSpriteRotation(value) {\n        this.rotation = value;\n    }\n    get maskSpriteRotation() {\n        return this.rotation;\n    }\n    set maskSpriteSkewX(value) {\n        this.skew.x = value;\n    }\n    get maskSpriteSkewX() {\n        return this.skew.x;\n    }\n    set maskSpriteSkewY(value) {\n        this.skew.y = value;\n    }\n    get maskSpriteSkewY() {\n        return this.skew.y;\n    }\n    set maskSpritePivotX(value) {\n        this.pivot.x = value;\n    }\n    get maskSpritePivotX() {\n        return this.pivot.x;\n    }\n    set maskSpritePivotY(value) {\n        this.pivot.y = value;\n    }\n    get maskSpritePivotY() {\n        return this.pivot.y;\n    }\n    handleTransform() {\n        this.sprite.position.x = this.targetPlaceable.x + this.placeableImg.x + this.position.x;\n        this.sprite.position.y = this.targetPlaceable.y + this.placeableImg.y + this.position.y;\n        this.sprite.skew.x = this.skew.x;\n        this.sprite.skew.x = this.skew.y;\n        this.sprite.rotation = this.rotation;\n        this.sprite.pivot.x = this.pivot.x;\n        this.sprite.pivot.y = this.pivot.y;\n        if (this.sticky) this.sprite.rotation += this.placeableImg.rotation;\n        this.sprite.transform.updateTransform(canvas.stage.transform);\n    }\n    apply(filterManager, input, output, clear) {\n        this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, this.maskSprite);\n        this.uniforms.scale.x = this.scale.x;\n        this.uniforms.scale.y = this.scale.y;\n        const wt = this.maskSprite.worldTransform;\n        this.uniforms.rotation[0] = wt.a;\n        this.uniforms.rotation[1] = wt.b;\n        this.uniforms.rotation[2] = wt.c;\n        this.uniforms.rotation[3] = wt.d;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n}\n\n\n\n\nclass $11a39396e5d8589b$export$2094be6cc744d7bc extends PIXI.filters.OldFilmFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.vignetting = 0;\n        this.noise = 0.08;\n        this.scratch = 0.1;\n        this.scratchDensity = 0.1;\n        this.seed = 0;\n        this.zOrder = 60;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $8224c68d08cc6843$export$3ea2d657d9f1c2fe extends PIXI.filters.GlowFilter {\n    constructor(params){\n        super();\n        this.padding = 15;\n        this.enabled = false;\n        this.innerStrength = 0;\n        this.outerStrength = 6.5;\n        this.color = 0x0020ff;\n        this.quality = 1;\n        this.alpha = 1;\n        this.zOrder = 70;\n        this.animated = {};\n        this.setTMParams(params);\n        // Imposed value. Should not be a shader uniform\n        this.distance = 10;\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $5b47cd38a348aa0c$export$c04494508d798797 extends PIXI.filters.OutlineFilter {\n    constructor(params){\n        super();\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n        this.padding = 5;\n        this.enabled = false;\n        this.thickness = 3;\n        this.color = 0x000000;\n        this.quality = 1;\n        this.zOrder = 50;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $e609518cea3498ff$export$bcacf43f99a4009b extends PIXI.filters.BevelFilter {\n    constructor(params){\n        super();\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n        this.padding = 10;\n        this.enabled = false;\n        this.rotation = 0;\n        this.thickness = 5;\n        this.lightColor = 0xffffff;\n        this.lightAlpha = 0.95;\n        this.shadowColor = 0x000000;\n        this.shadowAlpha = 0.95;\n        this.zOrder = 90;\n        this.quality = 1;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nconst $44fa44dcb802915a$var$_tempRect = new PIXI.Rectangle();\nclass $44fa44dcb802915a$export$c042bd0ff4d3251b extends PIXI.Filter {\n    constructor(...args){\n        super(...args);\n        if (!this.uniforms.filterMatrix || !this.uniforms.filterMatrixInverse) this.uniforms.filterMatrix = new PIXI.Matrix();\n        if (!this.uniforms.filterMatrixInverse) this.uniforms.filterMatrixInverse = new PIXI.Matrix();\n    }\n    apply(filterManager, input, output, clear) {\n        const filterMatrix = this.uniforms.filterMatrix;\n        if (filterMatrix) {\n            const { sourceFrame: sourceFrame, destinationFrame: destinationFrame, target: target } = filterManager.activeState;\n            filterMatrix.set(destinationFrame.width, 0, 0, destinationFrame.height, sourceFrame.x, sourceFrame.y);\n            const worldTransform = PIXI.Matrix.TEMP_MATRIX;\n            const localBounds = target.getLocalBounds($44fa44dcb802915a$var$_tempRect);\n            if (this.sticky) {\n                worldTransform.copyFrom(target.transform.worldTransform);\n                worldTransform.invert();\n                const rotation = target.transform.rotation;\n                const sin = Math.sin(rotation);\n                const cos = Math.cos(rotation);\n                const scaleX = Math.hypot(cos * worldTransform.a + sin * worldTransform.c, cos * worldTransform.b + sin * worldTransform.d);\n                const scaleY = Math.hypot(-sin * worldTransform.a + cos * worldTransform.c, -sin * worldTransform.b + cos * worldTransform.d);\n                localBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\n            } else {\n                const transform = target.transform;\n                worldTransform.a = transform.scale.x;\n                worldTransform.b = 0;\n                worldTransform.c = 0;\n                worldTransform.d = transform.scale.y;\n                worldTransform.tx = transform.position.x - transform.pivot.x * transform.scale.x;\n                worldTransform.ty = transform.position.y - transform.pivot.y * transform.scale.y;\n                worldTransform.prepend(target.parent.transform.worldTransform);\n                worldTransform.invert();\n                const scaleX = Math.hypot(worldTransform.a, worldTransform.b);\n                const scaleY = Math.hypot(worldTransform.c, worldTransform.d);\n                localBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\n            }\n            filterMatrix.prepend(worldTransform);\n            filterMatrix.translate(-localBounds.x, -localBounds.y);\n            filterMatrix.scale(1.0 / localBounds.width, 1.0 / localBounds.height);\n            const filterMatrixInverse = this.uniforms.filterMatrixInverse;\n            if (filterMatrixInverse) {\n                filterMatrixInverse.copyFrom(filterMatrix);\n                filterMatrixInverse.invert();\n            }\n        }\n        filterManager.applyFilter(this, input, output, clear);\n    }\n}\n\n\nconst $af3e207060dec559$export$93b7586d956c930e = `\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float alpha;\nuniform vec3 color;\n\nuniform vec2 shift;\nuniform vec4 inputSize;\n\nvoid main(void){\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\n\n    // Premultiply alpha\n    sample.rgb = color.rgb * sample.a;\n\n    // alpha user alpha\n    sample *= alpha;\n\n    gl_FragColor = sample;\n}\n`;\n\n\n// Custom vertex shader with filterLocalCoord()\nconst $15c633ba44c21f75$export$c6eb01d07cc2e1e8 = `\nprecision mediump float;\n\nattribute vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\nuniform mat3 filterMatrix;\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0., 1.);\n}\n\nvec2 filterTextureCoord( void )\n{\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void)\n{\n    gl_Position = filterVertexPosition();\n    vTextureCoord = filterTextureCoord();\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\n}\n`;\n\n\n\nclass $23cf46a81404e9ef$export$f371526a665ed48 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    shadowOnly;\n    angle = 45;\n    _distance = 5;\n    _resolution = PIXI.settings.FILTER_RESOLUTION;\n    _tintFilter;\n    _blurFilter;\n    constructor(options = {}){\n        super();\n        const opt = options ? {\n            ...$23cf46a81404e9ef$export$f371526a665ed48.defaults,\n            ...options\n        } : $23cf46a81404e9ef$export$f371526a665ed48.defaults;\n        const { kernels: kernels, blur: blur, quality: quality, resolution: resolution } = opt;\n        this._tintFilter = new PIXI.Filter((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $af3e207060dec559$export$93b7586d956c930e));\n        this._tintFilter.uniforms.color = new Float32Array(4);\n        this._tintFilter.uniforms.shift = new PIXI.Point();\n        this._tintFilter.resolution = resolution;\n        this._blurFilter = kernels ? new PIXI.filters.KawaseBlurFilter(kernels) : new PIXI.filters.KawaseBlurFilter(blur, quality);\n        this._pixelSize = 1.0;\n        this.resolution = resolution;\n        const { shadowOnly: shadowOnly, rotation: rotation, distance: distance, alpha: alpha, color: color } = opt;\n        this.shadowOnly = shadowOnly;\n        this.rotation = rotation;\n        this.distance = distance;\n        this.alpha = alpha;\n        this.color = color;\n    }\n    apply(filterManager, input, output, clear) {\n        this._updateShiftAndScale();\n        const target = filterManager.getFilterTexture();\n        this._tintFilter.apply(filterManager, input, target, 1);\n        this._blurFilter.apply(filterManager, target, output, clear);\n        if (this.shadowOnly !== true) filterManager.applyFilter(this, input, output, 0);\n        filterManager.returnFilterTexture(target);\n    }\n    _updateShiftAndScale() {\n        const scale = this.targetPlaceable?.worldTransform.a ?? 1.0;\n        this._tintFilter.uniforms.shift.set(this.distance * Math.cos(this.angle) * scale, this.distance * Math.sin(this.angle) * scale);\n        this._pixelSize = Math.max(1.0, 1.0 * scale);\n    }\n    get resolution() {\n        return this._resolution;\n    }\n    set resolution(value) {\n        this._resolution = value;\n        if (this._tintFilter) this._tintFilter.resolution = value;\n        if (this._blurFilter) this._blurFilter.resolution = value;\n    }\n    get distance() {\n        return this._distance;\n    }\n    set distance(value) {\n        this._distance = value;\n    }\n    get rotation() {\n        return this.angle / PIXI.DEG_TO_RAD;\n    }\n    set rotation(value) {\n        this.angle = value * PIXI.DEG_TO_RAD;\n    }\n    get alpha() {\n        return this._tintFilter.uniforms.alpha;\n    }\n    set alpha(value) {\n        this._tintFilter.uniforms.alpha = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this._tintFilter.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this._tintFilter.uniforms.color);\n    }\n    get kernels() {\n        return this._blurFilter.kernels;\n    }\n    set kernels(value) {\n        this._blurFilter.kernels = value;\n    }\n    get blur() {\n        return this._blurFilter.blur;\n    }\n    set blur(value) {\n        this._blurFilter.blur = value;\n    }\n    get quality() {\n        return this._blurFilter.quality;\n    }\n    set quality(value) {\n        this._blurFilter.quality = value;\n    }\n    get _pixelSize() {\n        return this._blurFilter.pixelSize;\n    }\n    set _pixelSize(value) {\n        this._blurFilter.pixelSize = value;\n    }\n}\n$23cf46a81404e9ef$export$f371526a665ed48.defaults = {\n    rotation: 45,\n    distance: 5,\n    color: 0x000000,\n    alpha: 0.5,\n    shadowOnly: false,\n    kernels: null,\n    blur: 2,\n    quality: 3,\n    resolution: PIXI.settings.FILTER_RESOLUTION\n};\n\n\nclass $5ba7aae303e84dac$export$3fa21fd22495d321 extends (0, $23cf46a81404e9ef$export$f371526a665ed48) {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.rotation = 45;\n        this.distance = 5;\n        this.color = 0x000000;\n        this.alpha = 0.5;\n        this.shadowOnly = false;\n        this.blur = 2;\n        this.quality = 3;\n        this.padding = 10;\n        this.zOrder = 110;\n        this.animated = {};\n        this.resolution = game.settings.get(\"core\", \"pixelRatioResolutionScaling\") ? window.devicePixelRatio : PIXI.settings.FILTER_RESOLUTION;\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n        this.autoFit = false;\n    }\n}\n\n\n\n\nclass $0643f21646f7ec8f$export$f4e603bceef0312b extends PIXI.filters.TwistFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.radiusPercent = 50;\n        this.angle = 4;\n        this.zOrder = 240;\n        this.animated = {};\n        this.offset = [\n            0,\n            0\n        ];\n        this.autoFit = false;\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform() {\n        this.offset[0] = this.placeableImg.worldTransform.tx;\n        this.offset[1] = this.placeableImg.worldTransform.ty;\n        this.radius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.radiusPercent / 200;\n    }\n}\n\n\n\n\nclass $cb3547a2fc8518c6$export$767afdf6d9357594 extends PIXI.filters.ZoomBlurFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.strength = 0.1;\n        this.radiusPercent = 50;\n        this.innerRadiusPercent = 10;\n        this.zOrder = 300;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform(state) {\n        this.center[0] = 0.5 * state.sourceFrame.width;\n        this.center[1] = 0.5 * state.sourceFrame.height;\n        this.radius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.radiusPercent / 200;\n        this.innerRadius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.innerRadiusPercent / 200;\n    }\n}\n\n\n\n\n\nclass $c669851898d451b5$export$680aca7df3d87905 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    blurXFilter;\n    blurYFilter;\n    _repeatEdgePixels;\n    constructor(strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5){\n        super();\n        this.blurXFilter = new $c669851898d451b5$export$7c9ef492c949f871(true, strength, quality, resolution, kernelSize);\n        this.blurYFilter = new $c669851898d451b5$export$7c9ef492c949f871(false, strength, quality, resolution, kernelSize);\n        this.resolution = resolution;\n        this.quality = quality;\n        this.blur = strength;\n        this.repeatEdgePixels = false;\n    }\n    apply(filterManager, input, output, clearMode) {\n        const xStrength = Math.abs(this.blurXFilter.strength);\n        const yStrength = Math.abs(this.blurYFilter.strength);\n        if (xStrength && yStrength) {\n            const renderTarget = filterManager.getFilterTexture();\n            this.blurXFilter.apply(filterManager, input, renderTarget, PIXI.CLEAR_MODES.CLEAR);\n            this.blurYFilter.apply(filterManager, renderTarget, output, clearMode);\n            filterManager.returnFilterTexture(renderTarget);\n        } else if (yStrength) this.blurYFilter.apply(filterManager, input, output, clearMode);\n        else this.blurXFilter.apply(filterManager, input, output, clearMode);\n    }\n    updatePadding() {\n        if (this._repeatEdgePixels) this.padding = 0;\n        else this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n    get blur() {\n        return this.blurXFilter.blur;\n    }\n    set blur(value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n        this.updatePadding();\n    }\n    get quality() {\n        return this.blurXFilter.quality;\n    }\n    set quality(value) {\n        this.blurXFilter.quality = this.blurYFilter.quality = value;\n    }\n    get blurX() {\n        return this.blurXFilter.blur;\n    }\n    set blurX(value) {\n        this.blurXFilter.blur = value;\n        this.updatePadding();\n    }\n    get blurY() {\n        return this.blurYFilter.blur;\n    }\n    set blurY(value) {\n        this.blurYFilter.blur = value;\n        this.updatePadding();\n    }\n    get blendMode() {\n        return this.blurYFilter.blendMode;\n    }\n    set blendMode(value) {\n        this.blurYFilter.blendMode = value;\n    }\n    get repeatEdgePixels() {\n        return this._repeatEdgePixels;\n    }\n    set repeatEdgePixels(value) {\n        this._repeatEdgePixels = value;\n        this.updatePadding();\n    }\n}\nclass $c669851898d451b5$export$7c9ef492c949f871 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    horizontal;\n    strength;\n    passes;\n    _quality;\n    constructor(horizontal, strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5){\n        const vertSrc = $c669851898d451b5$export$7a7fb9d9d09c33af(kernelSize, horizontal);\n        const fragSrc = $c669851898d451b5$export$1b0dcf101eb6a1c9(kernelSize);\n        super(// vertex shader\n        vertSrc, // fragment shader\n        fragSrc);\n        this.horizontal = horizontal;\n        this.resolution = resolution;\n        this._quality = 0;\n        this.quality = quality;\n        this.blur = strength;\n    }\n    apply(filterManager, input, output, clearMode) {\n        if (output) {\n            if (this.horizontal) this.uniforms.strength = 1 / output.width * (output.width / input.width);\n            else this.uniforms.strength = 1 / output.height * (output.height / input.height);\n        } else if (this.horizontal) this.uniforms.strength = 1 / filterManager.renderer.width * (filterManager.renderer.width / input.width);\n        else this.uniforms.strength = 1 / filterManager.renderer.height * (filterManager.renderer.height / input.height);\n        // screen space!\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes;\n        if (this.passes === 1) filterManager.applyFilter(this, input, output, clearMode);\n        else {\n            const renderTarget = filterManager.getFilterTexture();\n            const renderer = filterManager.renderer;\n            let flip = input;\n            let flop = renderTarget;\n            this.state.blend = false;\n            filterManager.applyFilter(this, flip, flop, PIXI.CLEAR_MODES.CLEAR);\n            for(let i = 1; i < this.passes - 1; i++){\n                filterManager.bindAndClear(flip, PIXI.CLEAR_MODES.BLIT);\n                this.uniforms.uSampler = flop;\n                const temp = flop;\n                flop = flip;\n                flip = temp;\n                renderer.shader.bind(this);\n                renderer.geometry.draw(5);\n            }\n            this.state.blend = true;\n            filterManager.applyFilter(this, flop, output, clearMode);\n            filterManager.returnFilterTexture(renderTarget);\n        }\n    }\n    get blur() {\n        return this.strength;\n    }\n    set blur(value) {\n        this.padding = 1 + Math.abs(value) * 2;\n        this.strength = value;\n    }\n    get quality() {\n        return this._quality;\n    }\n    set quality(value) {\n        this._quality = value;\n        this.passes = value;\n    }\n}\nconst $c669851898d451b5$var$GAUSSIAN_VALUES = {\n    5: [\n        0.153388,\n        0.221461,\n        0.250301\n    ],\n    7: [\n        0.071303,\n        0.131514,\n        0.189879,\n        0.214607\n    ],\n    9: [\n        0.028532,\n        0.067234,\n        0.124009,\n        0.179044,\n        0.20236\n    ],\n    11: [\n        0.0093,\n        0.028002,\n        0.065984,\n        0.121703,\n        0.175713,\n        0.198596\n    ],\n    13: [\n        0.002406,\n        0.009255,\n        0.027867,\n        0.065666,\n        0.121117,\n        0.174868,\n        0.197641\n    ],\n    15: [\n        0.000489,\n        0.002403,\n        0.009246,\n        0.02784,\n        0.065602,\n        0.120999,\n        0.174697,\n        0.197448\n    ]\n};\nconst $c669851898d451b5$var$fragTemplate = [\n    \"varying vec2 vBlurTexCoords[%size%];\",\n    \"uniform sampler2D uSampler;\",\n    \"void main(void)\",\n    \"{\",\n    \"    gl_FragColor = vec4(0.0);\",\n    \"    %blur%\",\n    \"}\"\n].join(\"\\n\");\nfunction $c669851898d451b5$export$1b0dcf101eb6a1c9(kernelSize) {\n    const kernel = $c669851898d451b5$var$GAUSSIAN_VALUES[kernelSize];\n    const halfLength = kernel.length;\n    let fragSource = $c669851898d451b5$var$fragTemplate;\n    let blurLoop = \"\";\n    const template = \"gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;\";\n    let value;\n    for(let i = 0; i < kernelSize; i++){\n        let blur = template.replace(\"%index%\", i.toString());\n        value = i;\n        if (i >= halfLength) value = kernelSize - i - 1;\n        blur = blur.replace(\"%value%\", kernel[value].toString());\n        blurLoop += blur;\n        blurLoop += \"\\n\";\n    }\n    fragSource = fragSource.replace(\"%blur%\", blurLoop);\n    fragSource = fragSource.replace(\"%size%\", kernelSize.toString());\n    return fragSource;\n}\nconst $c669851898d451b5$var$vertTemplate = `\n    attribute vec2 aVertexPosition;\n    uniform mat3 projectionMatrix;\n    uniform float strength;\n    varying vec2 vBlurTexCoords[%size%];\n    uniform vec4 inputSize;\n    uniform vec4 outputFrame;\n    vec4 filterVertexPosition( void )\n    {\n        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n    }\n    vec2 filterTextureCoord( void )\n    {\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\n    }\n    void main(void)\n    {\n        gl_Position = filterVertexPosition();\n        vec2 textureCoord = filterTextureCoord();\n        %blur%\n    }`;\nfunction $c669851898d451b5$export$7a7fb9d9d09c33af(kernelSize, x) {\n    const halfLength = Math.ceil(kernelSize / 2);\n    let vertSource = $c669851898d451b5$var$vertTemplate;\n    let blurLoop = \"\";\n    let template;\n    if (x) template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);\";\n    else template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);\";\n    for(let i = 0; i < kernelSize; i++){\n        let blur = template.replace(\"%index%\", i.toString());\n        blur = blur.replace(\"%sampleIndex%\", `${i - (halfLength - 1)}.0`);\n        blurLoop += blur;\n        blurLoop += \"\\n\";\n    }\n    vertSource = vertSource.replace(\"%blur%\", blurLoop);\n    vertSource = vertSource.replace(\"%size%\", kernelSize.toString());\n    return vertSource;\n}\nfunction $c669851898d451b5$export$5a54b7935b71e7fb(gl) {\n    const maxVaryings = PIXI.gl.getParameter(PIXI.gl.MAX_VARYING_VECTORS);\n    let kernelSize = 15;\n    while(kernelSize > maxVaryings)kernelSize -= 2;\n    return kernelSize;\n}\n\n\nclass $b8712d076a565747$export$efc74ab3983784c5 extends (0, $c669851898d451b5$export$680aca7df3d87905) {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.blur = 2;\n        this.quality = 4;\n        this.zOrder = 290;\n        this.repeatEdgePixels = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get blur() {\n        return this.strengthX;\n    }\n    set blur(value) {\n        this.strengthX = this.strengthY = value;\n    }\n    get blurX() {\n        return this.strengthX;\n    }\n    set blurX(value) {\n        this.strengthX = value;\n    }\n    get blurY() {\n        return this.strengthY;\n    }\n    set blurY(value) {\n        this.strengthY = value;\n    }\n    calculatePadding() {\n        const scale = this.targetPlaceable.worldTransform.a;\n        this.blurXFilter.blur = scale * this.strengthX;\n        this.blurYFilter.blur = scale * this.strengthY;\n        this.updatePadding();\n        super.calculatePadding();\n    }\n}\n\n\n\n\nclass $207c96b47058a247$export$985076e41ccfd508 extends PIXI.filters.ShockwaveFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.time = 0;\n        this.amplitude = 5;\n        this.wavelength = 100;\n        this.speed = 50.0;\n        this.brightness = 1.5;\n        this.radius = 200;\n        this.zOrder = 220;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform(state) {\n        this.center[0] = 0.5 * state.sourceFrame.width;\n        this.center[1] = 0.5 * state.sourceFrame.height;\n    }\n}\n\n\n\n\nclass $cde275935cddb40a$export$c1f4d37fd591fb01 extends PIXI.filters.BulgePinchFilter {\n    constructor(params){\n        super();\n        this.strength = 0;\n        this.radiusPercent = 100;\n        this.zOrder = 140;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n        // Anchor point\n        this.center = [\n            0.5,\n            0.5\n        ];\n    }\n    handleTransform() {\n        this.radius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.radiusPercent / 200;\n    }\n}\n\n\nconst $95883fdd65c72900$export$1cb17df05ce7da23 = `\nprecision mediump float;\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float alphaTolerance;\n\nvoid main(void) {\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a <= alphaTolerance) {\n        pixel = vec4(0.);\n    } \n    gl_FragColor = pixel;\n}\n`;\n\n\n\n\n\nclass $d6a2679398073147$export$228231731d6adde3 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { alphaTolerance: alphaTolerance } = Object.assign({}, $d6a2679398073147$export$228231731d6adde3.defaults, params);\n        // using the default vertex shader and the specific fragment shader\n        super(undefined, (0, $95883fdd65c72900$export$1cb17df05ce7da23));\n        Object.assign(this, {\n            alphaTolerance: alphaTolerance\n        });\n        this.zOrder = 10;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get alphaTolerance() {\n        return this.uniforms.alphaTolerance;\n    }\n    set alphaTolerance(value) {\n        this.uniforms.alphaTolerance = value;\n    }\n}\n$d6a2679398073147$export$228231731d6adde3.defaults = {\n    alphaTolerance: 0.8\n};\n\n\nconst $bede2880f372c574$export$9d94b322741e1813 = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uSampler;\nuniform float time;\nuniform vec2 dimensions;\nuniform vec2 anchor;\nuniform vec4 color;\nuniform float divisor;\nuniform bool alphaDiscard;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nfloat PI = 3.14159265359;\nfloat speed = 1.2;\nfloat width = 0.5;\nfloat subdivide = 512.0;\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec2 uv = (vFilterCoord - anchor) / dimensions;    \n    float len = length(uv *0.5),\n   \t\tangle = ( atan(uv.x, uv.y) / ( 2. * PI) ) + 1.5,\n    \twobble = 48. + 24. * cos(time/5.),\n    \twhite = fract((angle) * divisor + sin((sqrt(len) * wobble) - time * speed));\n    \n    white  = 2.* cos(white / (PI * 0.1));\n    white *= floor(fract(angle * divisor + sin(time / speed - (len * 1.2) * wobble)) *subdivide) / subdivide;\n    \n    vec4 color1 = smoothstep(0., 1., white * color);\n    vec4 result = mix(pixel, color1, color1.a);\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.05)))) discard;\n    gl_FragColor = result*pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $56e6cd37bbebe026$export$1992e0dceaf7be8 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, divisor: divisor, alpha: alpha, anchorX: anchorX, anchorY: anchorY, dimX: dimX, dimY: dimY, alphaDiscard: alphaDiscard } = Object.assign({}, $56e6cd37bbebe026$export$1992e0dceaf7be8.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $bede2880f372c574$export$9d94b322741e1813));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            0.55\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            0.5\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            divisor: divisor,\n            alpha: alpha,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            dimX: dimX,\n            dimY: dimY,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 120;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get divisor() {\n        return this.uniforms.divisor;\n    }\n    set divisor(value) {\n        this.uniforms.divisor = value;\n    }\n    get alpha() {\n        return this.uniforms.color[3];\n    }\n    set alpha(value) {\n        if (value >= 0 && value <= 1) this.uniforms.color[3] = value;\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$56e6cd37bbebe026$export$1992e0dceaf7be8.defaults = {\n    time: 0.0,\n    color: 0xff8010,\n    divisor: 16,\n    alpha: 0.55,\n    anchorX: 0.5,\n    anchorY: 0.5,\n    dimX: 100,\n    dimY: 100,\n    alphaDiscard: false\n};\n\n\nconst $18eb4ad38bd7a0da$export$cfdade87b894d58e = `\nprecision mediump float;\n\nuniform float time;\nuniform vec3 color;\nuniform float density;\nuniform vec2 dimensions;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n// generates pseudo-random based on screen position\nfloat random(vec2 pos) \n{\n\treturn fract(sin(dot(pos.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\n// perlin noise\nfloat noise(vec2 pos) \n{\n\tvec2 i = floor(pos);\n\tvec2 f = fract(pos);\n\tfloat a = random(i + vec2(0.0, 0.0));\n\tfloat b = random(i + vec2(1.0, 0.0));\n\tfloat c = random(i + vec2(0.0, 1.0));\n\tfloat d = random(i + vec2(1.0, 1.0));\n\tvec2 u = f * f * (3.0 - 2.0 * f);\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n// fractional brownian motion\nfloat fbm(vec2 pos) \n{\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100.);\n\tmat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.5));\n\tfor (int i=0; i<16; i++) \n\t{\n\t\tv = (sin(v*1.07)) + ( a * noise(pos) );\n\t\tpos = rot * pos * 1.9 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\nmat4 contrastMatrix(float contrast)\n{\n\tfloat t = ( 1.0 - contrast ) * 0.5;\n    \n    return mat4( contrast, 0, 0, 0,\n                 0, contrast, 0, 0,\n                 0, 0, contrast, 0,\n                 t, t, t, 1 );\n}\n\nvec4 fog()\n{\n\tvec2 p = (vFilterCoord.xy * 8. - vFilterCoord.xy) * dimensions;\n\t\n\tfloat time2 = time * 0.0025;\n\t\n\tvec2 q = vec2(0.0);\n\tq.x = fbm(p);\n\tq.y = fbm(p);\n\tvec2 r = vec2(-1.0);\n\tr.x = fbm(p * q + vec2(1.7, 9.2) + .15 * time2);\n\tr.y = fbm(p * q + vec2(9.3, 2.8) + .35 * time2);\n\tfloat f = fbm(p*.2 + r*3.102);\n\n\tvec4 fogPixel = mix(\n\t\tvec4(color,1.0),\n\t\tvec4(1.5, 1.5, 1.5, 1.5),\n\t\tclamp(length(r.x), 0.4, 1.)\n\t);\n\n\treturn (f *f * f + 0.6 * f * f + 0.5 * f) * fogPixel;\n}\n\nvoid main(void) \n{\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n\n    // to avoid computation on an invisible pixel.\n    if (pixel.a == 0.) {\n\t\tgl_FragColor = pixel;\n\t\treturn;\n    }\n\n\tvec4 fogPixel = contrastMatrix(3.0)*fog();\n    gl_FragColor = mix(pixel, fogPixel, 1.*density) * pixel.a;\n}\n`;\n\n\n\n\n\nclass $2a5c150fd96450c6$export$f17580ed76af4408 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, density: density, dimX: dimX, dimY: dimY } = Object.assign({}, $2a5c150fd96450c6$export$f17580ed76af4408.defaults, params);\n        // specific vertex and fragment shaders\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $18eb4ad38bd7a0da$export$cfdade87b894d58e));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            0.55\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            density: density,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 190;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get density() {\n        return this.uniforms.density;\n    }\n    set density(value) {\n        this.uniforms.density = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n}\n$2a5c150fd96450c6$export$f17580ed76af4408.defaults = {\n    time: 0.0,\n    color: 0xffffff,\n    density: 0.5,\n    dimX: 1.0,\n    dimY: 1.0\n};\n\n\nconst $0ce59d28206e7914$export$562c6f8151c36426 = `\nprecision mediump float;\n\nuniform float time;\nuniform vec3 color;\nuniform bool alphaDiscard;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265;\nconst mat3 rotationMatrix = mat3(1.0,0.0,0.0,0.0,0.47,-0.88,0.0,0.88,0.47);\n\t\nfloat hash(float p)\n{\n    return fract(sin(dot(vec2(p*0.00010,0.),vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise( vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n    return mix(mix(mix( hash(n+0.0  ), hash(n+1.0),f.x),mix( hash(n+57.0 ), hash(n+58.0 ),f.x),f.y),\n           mix(mix( hash(n+113.0), hash(n+114.0),f.x),mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n} \n\nvec4 map( vec3 p )\n{\n\tfloat d = 0.2 - p.y;\t\n\tvec3 q = p  - vec3(0.0,1.0,0.0)*time;\n\tfloat f  = 0.5*noise( q ); q = q*2.02 - vec3(0.25,0.25,0.25)*time*0.4;\n\tf += 0.25*noise( q ); \n    q = q*2.03 - vec3(0.0,1.0,0.0)*time*0.2;\n\tf += 0.125*noise( q ); \n\td = clamp( d + 4.5*f, 0.0, 1.0 );\n\tvec3 col = mix( vec3(0.9,0.9,0.9), vec3(0.1,0.1,0.1), d ) + 0.05*sin(p);\n\treturn vec4( col, d );\n}\n\nvec3 cloudify( vec3 ro, vec3 rd )\n{\n\tvec4 s = vec4(0.);\n\tfloat t = 0.0;\n    vec3 col = color*0.75;\n    vec3 p;\n    vec4 k;\n\n\tfor( int i=0; i<90; i++ )\n\t{\n\t\tif( s.a > 0.97 ) break;\n\t\tp = ro + t*rd;\n\t\tk = map( p );\n\t\tk.rgb *= mix( col, color, clamp( (p.y-0.2)*0.5, 0.0, 1.0 ) );\n\t\tk.a *= 0.5;\n\t\tk.rgb *= k.a;\n\t\ts = s + k*(1.0-s.a);\t\n\t\tt += 0.05;\n\t}\n\treturn clamp( s.xyz, 0.0, 1.0 );\n}\n\nvec4 xfog()\n{\n\tvec3 vo = vec3(0.0,4.9,-40.);\n\tvec3 vd = normalize(vec3(vFilterCoord.xy, 1.)) * rotationMatrix * 2.25;\n\tvec3 volume = cloudify( vo, vd );\n\tvolume *= volume;\n\treturn vec4( volume, 1.0 );\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a == 0.) discard;\n    vec4 result = max( xfog(), pixel) * pixel.a;\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.15)))) discard;\n    gl_FragColor = result;\n}\n`;\n\n\n\n\n\nclass $6ca08fc9db20c2ac$export$da3eec8748131849 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, alphaDiscard: alphaDiscard } = Object.assign({}, $6ca08fc9db20c2ac$export$da3eec8748131849.defaults, params);\n        // specific vertex and fragment shaders\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $0ce59d28206e7914$export$562c6f8151c36426));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            0.55\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 230;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$6ca08fc9db20c2ac$export$da3eec8748131849.defaults = {\n    time: 0.0,\n    color: 0xffffff,\n    alphaDiscard: false\n};\n\n\nconst $9d3851927d6e6827$export$196e9e3d20e4131 = `\nprecision mediump float;\nprecision mediump int;\n\n#define INTENSITY 5\n\nconst float PI = 3.14159265358979323846264;\n\nuniform sampler2D uSampler;\nuniform vec4 color;\nvarying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\nuniform float time;\nuniform int blend;\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nfloat Perlin(vec3 P)\n{\n    vec3 Pi = floor(P);\n    vec3 Pf = P - Pi;\n    vec3 Pf_min1 = Pf - 1.0;\n\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;\n    vec3 Pi_inc1 = step(Pi, vec3(69.0 - 1.5)) * (Pi + 1.0);\n\n    vec4 Pt = vec4(Pi.xy, Pi_inc1.xy) + vec2(50.0, 161.0).xyxy;\n    Pt *= Pt;\n    Pt = Pt.xzxz * Pt.yyww;\n    const vec3 SOMELARGEFLOATS = vec3(635.298681, 682.357502, 668.926525);\n    const vec3 ZINC = vec3(48.500388, 65.294118, 63.934599);\n    vec3 lowz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi.zzz * ZINC));\n    vec3 highz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi_inc1.zzz * ZINC));\n    vec4 hashx0 = fract(Pt * lowz_mod.xxxx);\n    vec4 hashx1 = fract(Pt * highz_mod.xxxx);\n    vec4 hashy0 = fract(Pt * lowz_mod.yyyy);\n    vec4 hashy1 = fract(Pt * highz_mod.yyyy);\n    vec4 hashz0 = fract(Pt * lowz_mod.zzzz);\n    vec4 hashz1 = fract(Pt * highz_mod.zzzz);\n\n    vec4 grad_x0 = hashx0 - 0.49999;\n    vec4 grad_y0 = hashy0 - 0.49999;\n    vec4 grad_z0 = hashz0 - 0.49999;\n    vec4 grad_x1 = hashx1 - 0.49999;\n    vec4 grad_y1 = hashy1 - 0.49999;\n    vec4 grad_z1 = hashz1 - 0.49999;\n    vec4 grad_results_0 = inversesqrt(grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x0 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y0 + Pf.zzzz * grad_z0);\n    vec4 grad_results_1 = inversesqrt(grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x1 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1);\n\n    vec3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);\n    vec4 res0 = mix(grad_results_0, grad_results_1, blend.z);\n    vec4 blend2 = vec4(blend.xy, vec2(1.0 - blend.xy));\n    float final = dot(res0, blend2.zxzx * blend2.wwyy);\n    return (final * 1.1547005383792515290182975610039);  // scale things to a strict -1.0->1.0 range  *= 1.0/sqrt(0.75)\n}\n\nfloat fbm(vec3 p)\n{\n    float v = 0.0;\n    v += Perlin(p * 0.9) * 1.5 * cos(PI * time * 0.48);\n    v += Perlin(p * 3.99) * 0.5 * sin(PI * time * 0.4);\n    v += Perlin(p * 8.01) * 0.4 * cos(PI * time * 0.4);\n    v += Perlin(p * 15.05) * 0.05 * sin(PI * time * 0.8);\n\n    return v;\n}\n\nvec4 electric() {\n    vec3 noiseVec = vec3(vFilterCoord, 1.);\n    vec3 color = vec3(0.0);\n    for (int i = 0; i < INTENSITY; ++i ) {\n        noiseVec = noiseVec.yxz;\n        float t = abs(2.0 / (fbm(noiseVec + vec3(0.0, time / float(i + 4), 0.0)) * 120.0));\n        color += t * vec3(float(i + 1) * 0.1 + 0.1, 0.5, 2.0);\n    }\n    return vec4(color, 1.);\n}\n\nvoid main() {\n \n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    \n    // to avoid computation of invisible pixels\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n    \n    vec4 electric = electric();\n    electric *= color;\n\n    gl_FragColor = blenderVec3(blend,pixel,electric)*pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $5a0c0cac6edacb2c$export$22f86bc7a100befc extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, blend: blend, color: color } = Object.assign({}, $5a0c0cac6edacb2c$export$22f86bc7a100befc.defaults, params);\n        var shaderFragment;\n        if (params.hasOwnProperty(\"intensity\") && typeof params.intensity === \"number\") {\n            var intensityVal = Math.floor(params.intensity);\n            shaderFragment = (0, $9d3851927d6e6827$export$196e9e3d20e4131).replace(\"#define INTENSITY 5\", \"#define INTENSITY \" + intensityVal);\n        } else shaderFragment = (0, $9d3851927d6e6827$export$196e9e3d20e4131);\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), shaderFragment);\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.blend = 2;\n        Object.assign(this, {\n            time: time,\n            blend: blend,\n            color: color\n        });\n        this.zOrder = 160;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n        this.quality = 0.5;\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n}\n$5a0c0cac6edacb2c$export$22f86bc7a100befc.defaults = {\n    time: 0.0,\n    blend: 1,\n    color: 0xffffff\n};\n\n\nconst $79b15a82cea589ba$export$9f7639465b88ec7f = `\nprecision mediump float;\nprecision mediump int;\n\nuniform vec3 color;\nuniform vec2 anchor;\nuniform float time;\nuniform bool inward;\nuniform float frequency;\nuniform float strength;\nuniform float minIntensity;\nuniform float maxIntensity;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\nuniform sampler2D uSampler;\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    float speed = inward ? 1.0 : -1.0;\n\n    vec2 centeredUVs = vFilterCoord - anchor;\n    float dist = length(centeredUVs);\n    float sinVal = sin((time * speed) + (dist * frequency));\n    \n    float sinValNormalized = sinVal * 0.5 + 0.5;\n    float lerp = ((maxIntensity - minIntensity) * sinValNormalized) + minIntensity;\n    \n    float rotationAmount = strength * sinVal;\n\n    float sinX = sin ( rotationAmount );\n    float cosX = cos ( rotationAmount );\n    mat2 rotationMatrix = mat2( cosX, -sinX, sinX, cosX);\n    vec2 newTextureCoord = vTextureCoord - vec2(0.5,0.5);\n\n    newTextureCoord = vec2(newTextureCoord * rotationMatrix ); \n    newTextureCoord = newTextureCoord + vec2(0.5, 0.5);     \n    vec4 col = texture2D(uSampler, newTextureCoord);\n    \n    col.rgb = col.rgb * color * lerp;\n    if (col.r != 0. && col.g != 0. && col.b != 0.) {\n       col.a = pixel.a;\n    }\n\n    gl_FragColor = col * pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $6c6b7c04c1d5fa2e$export$4eeb783ef7c17da8 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, inward: inward, frequency: frequency, strength: strength, minIntensity: minIntensity, maxIntensity: maxIntensity, anchorX: anchorX, anchorY: anchorY } = Object.assign({}, $6c6b7c04c1d5fa2e$export$4eeb783ef7c17da8.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $79b15a82cea589ba$export$9f7639465b88ec7f));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            0.5\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            inward: inward,\n            frequency: frequency,\n            strength: strength,\n            minIntensity: minIntensity,\n            maxIntensity: maxIntensity,\n            anchorX: anchorX,\n            anchorY: anchorY\n        });\n        this.zOrder = 280;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get inward() {\n        return this.uniforms.inward;\n    }\n    set inward(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.inward = value;\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get frequency() {\n        return this.uniforms.frequency;\n    }\n    set frequency(value) {\n        this.uniforms.frequency = value;\n    }\n    get strength() {\n        return this.uniforms.strength;\n    }\n    set strength(value) {\n        this.uniforms.strength = value;\n    }\n    get minIntensity() {\n        return this.uniforms.minIntensity;\n    }\n    set minIntensity(value) {\n        this.uniforms.minIntensity = value;\n    }\n    get maxIntensity() {\n        return this.uniforms.maxIntensity;\n    }\n    set maxIntensity(value) {\n        this.uniforms.maxIntensity = value;\n    }\n}\n$6c6b7c04c1d5fa2e$export$4eeb783ef7c17da8.defaults = {\n    time: 0,\n    color: 0xffffff,\n    inward: false,\n    frequency: 35,\n    strength: 0.01,\n    minIntensity: 1.2,\n    maxIntensity: 3.5,\n    anchorX: 0.5,\n    anchorY: 0.5\n};\n\n\nconst $a6aa0c1b3663277e$export$a47a7c04f1bc8ac = `\nprecision mediump float;\n\nuniform float time;\nuniform float amplitude;\nuniform float intensity;\nuniform int fireBlend;\nuniform int blend;\nuniform bool alphaDiscard;\nuniform vec2 anchor;\nuniform vec3 color;\n\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nfloat rand(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < 7; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 fire() \n{\n    const vec3 c1 = vec3(0.1, 0.0, 0.);\n\tconst vec3 c2 = vec3(0.7, 0.0, 0.);\n\tconst vec3 c3 = vec3(0.2, 0.0, 0.);\n\tconst vec3 c4 = vec3(1.0, 0.9, 0.);\n\tconst vec3 c5 = vec3(0.1);\n\tconst vec3 c6 = vec3(0.9);\n    vec2 uv = vFilterCoord - anchor;\n\tvec2 p = uv.xy * 8.0;\n\tfloat q = fbm(p - time * 0.1);\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n\treturn vec4(c * cos(1.57/(intensity-0.03) * uv.y), 1.0);\n}\n\nvec4 fireBlending()\n{\n    vec4 fire = fire();\n    vec4 tint = vec4(color,1.0);\n    return blenderVec3(fireBlend,fire,tint);\n}\n\nvec4 resultBlending(vec4 pixel, vec4 fire)\n{\n    vec4 result = blenderVec3(blend,pixel,fire);\n    return result;\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec4 result = resultBlending(pixel, fireBlending())*pixel.a;\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.50)))) discard;\n\tgl_FragColor = result;\n}\n`;\n\n\n\n\n\n\nclass $f77ec43cfcb845eb$export$fd0af22b8dd4eb46 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, amplitude: amplitude, intensity: intensity, fireBlend: fireBlend, blend: blend, anchorX: anchorX, anchorY: anchorY, alphaDiscard: alphaDiscard } = Object.assign({}, $f77ec43cfcb845eb$export$fd0af22b8dd4eb46.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $a6aa0c1b3663277e$export$a47a7c04f1bc8ac));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            amplitude: amplitude,\n            intensity: intensity,\n            fireBlend: fireBlend,\n            blend: blend,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 150;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get fireBlend() {\n        return this.uniforms.fireBlend;\n    }\n    set fireBlend(value) {\n        this.uniforms.fireBlend = Math.floor(value);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$f77ec43cfcb845eb$export$fd0af22b8dd4eb46.defaults = {\n    time: 0,\n    color: 0xffffff,\n    amplitude: 1,\n    intensity: 1,\n    fireBlend: 1,\n    blend: 2,\n    anchorX: 1,\n    anchorY: 1,\n    alphaDiscard: false\n};\n\n\nconst $a8a639be76f4582e$export$73c22863fbcd15d3 = `\nprecision mediump float;\nprecision mediump int;\n\nuniform float time;\nuniform vec2 dimensions;\nuniform int blend;\nuniform vec3 color;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n#define TWOPI 6.28318530718\n\nvec4 toGray(in vec4 color)\n{\n  float average = (color.r + color.g + color.b) * 0.33333334;\n  return vec4(average, average, average, 1.0);\n}\n\nvec4 colorize(in vec4 grayscale, in vec4 color)\n{\n    return (grayscale * color);\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nvec4 fog(vec2 fragCoord)\n{\n    float t = time * 0.26 + 23.0;\n    vec2 uv = fragCoord.xy * dimensions.xy;\n\n    vec2 p = mod(uv * TWOPI, TWOPI) - 250.0;\n    vec2 i = vec2(p);\n    float c = 0.75;\n    float intensity = 0.014;\n\n    for (int n = 0; n < 4; n++) {\n        float t = t * (1.0 - (3.5 / float(n + 1)));\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n        c += 1.0 / length(vec2(.5 * p.x / (sin(0.40 * i.x + t) / intensity), p.y / (cos(i.y + t) / intensity)));\n    }\n\n    c *= 0.16666667;\n    c = 1.17 - pow(c, 1.4);\n    vec3 colour = vec3(pow(abs(c), 8.0));\n\n    return vec4(colour * colour, 1.);\n}\n\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    // to avoid computation on an invisible pixel.\n    if (pixel.a==0.) {\n        gl_FragColor = pixel;\n        return;\n    }\n\n    // fog generation.\n    vec4 fog = colorize(\n               toGray(\n                 fog(vFilterCoord.xy) \n               + fog(-vFilterCoord.xy * 0.65))\n                    ,vec4(color/3., 1.)) * 0.9;\n\n    // we put the fog and the pixel into the blender, and we serve, adjusted by the pixel alpha.\n\tgl_FragColor = blenderVec3(blend, fog, pixel) * pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $223f1247ddebb00e$export$60b593b6124d1ebc extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, blend: blend, dimX: dimX, dimY: dimY } = Object.assign({}, $223f1247ddebb00e$export$60b593b6124d1ebc.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $a8a639be76f4582e$export$73c22863fbcd15d3));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            blend: blend,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 210;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n}\n$223f1247ddebb00e$export$60b593b6124d1ebc.defaults = {\n    time: 0,\n    color: 0xffffff,\n    blend: 2,\n    dimX: 1,\n    dimY: 1\n};\n\n\nconst $0e44befc9eaab3bf$export$9fa5c76e40adf3ca = `\nprecision mediump float;\n\nuniform float time;\nuniform float scale;\nuniform float glint;\nuniform float billowy;\nuniform float tintIntensity;\nuniform vec2 shift;\nuniform vec3 waterColor;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\nuniform sampler2D uSampler;\nuniform mat3 filterMatrixInverse;\n\nconst float timeSpeed = 3.;\n\n#define TWOPI 6.28318531\n\nfloat randomVal (float inVal)\n{\n    return fract(sin(mod(dot(vec2(inVal, 2523.2361) , vec2(12.9898,78.233)), TWOPI)) * 43758.5453)-0.5;\n}\n\nvec2 randomVec2 (float inVal)\n{\n    return normalize(vec2(randomVal(inVal), randomVal(inVal+151.523)));\n}\n\nfloat makeWaves(vec2 uv, float theTime, float offset)\n{\n    float result = 0.0;\n    float direction = 0.0;\n    float sineWave = 0.0;\n    vec2 randVec = vec2(0.0,0.0);\n    float i;\n    for(int n = 0; n < 16; n++)\n    {\n        i = float(n)+offset;\n        randVec = randomVec2(float(i));\n  \t\tdirection = (uv.x*randVec.x+uv.y*randVec.y);\n        sineWave = sin(mod(direction*randomVal(i+1.6516)+theTime*timeSpeed, TWOPI));\n        sineWave = smoothstep(0.2,1.,sineWave);\n    \tresult += randomVal(i+123.0)*sineWave;\n    }\n    return result;\n}\n\nvec4 water( vec2 fragCoord )\n{\n    vec4 fragColor;\n\tvec2 uv = fragCoord.xy * 0.5;\n    \n    vec2 uv2 = uv * scale;\n    \n    uv *= 2.0;\n\n    float result = 0.0;\n    float result2 = 0.0;\n    \n    result = makeWaves( uv2+vec2(time*timeSpeed,0.0), time, 0.1);\n    result2 = makeWaves( uv2-vec2(time*0.8*timeSpeed,0.0), time*0.8+1.06, 0.26);\n    \n    result *= 0.2;\n    \n    result = smoothstep(0.35,1.1,1.0-abs(result));\n    result2 = smoothstep(0.35,1.1,1.0-abs(result2));\n    \n    result = 2.0*smoothstep(0.35,1.8,(result+result2)*glint);\n\n    vec2 p = vec2(result, result2)*0.019 + (cos( mod(  uv*1.1 - sin(mod(uv.yx + time*timeSpeed/20., TWOPI)), TWOPI) )*0.012);\n    uv.x -= shift.x;\n    uv.y -= shift.y;\n    uv += p * billowy;\n    vec4 pixel = texture2D( uSampler , (filterMatrixInverse * vec3(uv, 1.0)).xy );\n\treturn (vec4(result)*0.9 + pixel)*pixel.a;\n}\n\nvoid main() {\n    vec4 water = water(vFilterCoord);\n    vec4 result = mix(vec4(waterColor,1.0),water,1./(tintIntensity+1.000000001))*water.a;\n    gl_FragColor = result;\n}\n`;\n\n\n\n\n\n\nclass $a0aac33c68ab6b34$export$bf2c97ada2c2b329 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, scale: scale, glint: glint, billowy: billowy, color: color, shiftX: shiftX, shiftY: shiftY, tintIntensity: tintIntensity } = Object.assign({}, $a0aac33c68ab6b34$export$bf2c97ada2c2b329.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $0e44befc9eaab3bf$export$9fa5c76e40adf3ca));\n        this.uniforms.waterColor = new Float32Array([\n            0.0,\n            0.18,\n            0.54\n        ]);\n        this.uniforms.shift = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            scale: scale,\n            glint: glint,\n            billowy: billowy,\n            color: color,\n            shiftX: shiftX,\n            shiftY: shiftY,\n            tintIntensity: tintIntensity\n        });\n        this.zOrder = 170;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.waterColor);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.waterColor);\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get glint() {\n        return this.uniforms.glint;\n    }\n    set glint(value) {\n        this.uniforms.glint = value;\n    }\n    get billowy() {\n        return this.uniforms.billowy;\n    }\n    set billowy(value) {\n        this.uniforms.billowy = value;\n    }\n    get tintIntensity() {\n        return this.uniforms.tintIntensity;\n    }\n    set tintIntensity(value) {\n        this.uniforms.tintIntensity = value;\n    }\n    get shiftX() {\n        return this.uniforms.shift[0];\n    }\n    set shiftX(value) {\n        this.uniforms.shift[0] = value;\n    }\n    get shiftY() {\n        this.uniforms.shift[1];\n    }\n    set shiftY(value) {\n        this.uniforms.shift[1] = value;\n    }\n}\n$a0aac33c68ab6b34$export$bf2c97ada2c2b329.defaults = {\n    time: 0,\n    glint: 0.5,\n    scale: 70,\n    billowy: 0.5,\n    color: 0x0020a9,\n    shiftX: 0,\n    shiftY: 0,\n    tintIntensity: 0.2\n};\n\n\nconst $c90d8ed2baf3fb09$export$cc1bb59c1623a9ed = `\nprecision mediump float;\nprecision mediump int;\n\nuniform float time;\nuniform vec2 scale;\nuniform vec3 color;\nuniform int blend;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n#define F4 0.309016994374947451\n#define PI 3.14159\n#define SPEED 0.01\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nvec4 mod289(vec4 x) \n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat mod289(float x) \n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4(float j, vec4 ip) \n{\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n    return p;\n}\n\nfloat snoise(vec4 v) \n{\n    const vec4  C = vec4( 0.138196601125011,\n                          0.276393202250021,\n                          0.414589803375032,\n                         -0.447213595499958);\n\n    vec4 i  = floor(v + dot(v, vec4(F4)) );\n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n      \n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n      \n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n    \n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n    m0 = m0 * m0;\n    m1 = m1 * m1;\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\nfloat surface( vec4 coord ) \n{\n\tfloat n = 0.0;\n\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\n\t\n\treturn n;\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    // to avoid computation on an invisible pixel\n    if (pixel.a == 0.) {\n        gl_FragColor = pixel;\n        return;\n    }\n\n    vec2 uv = vFilterCoord - vec2(0.375*scale.x,0.375*scale.y);\n    float s = uv.x * scale.x;\n    float t = uv.y * scale.y;\n    \n    float multiplier = 1.0 / ( 2.0 * PI );\n    float nx = cos( s * 2.0 * PI ) * multiplier;\n    float ny = cos( t * 2.0 * PI ) * multiplier;\n    float nz = sin( s * 2.0 * PI ) * multiplier;\n    float nw = sin( t * 2.0 * PI ) * multiplier;\n\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * SPEED );\n    vec4 result = vec4( color * vec3( surf ), 1.0 );\n    \n    gl_FragColor = blenderVec3(blend,pixel,result) * pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $a08c1e6a648373ca$export$2ba7369b7ae4551b extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, blend: blend, dimX: dimX, dimY: dimY } = Object.assign({}, $a08c1e6a648373ca$export$2ba7369b7ae4551b.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $c90d8ed2baf3fb09$export$cc1bb59c1623a9ed));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            blend: blend,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 200;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get dimX() {\n        return this.uniforms.scale[0];\n    }\n    set dimX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.scale[1];\n    }\n    set dimY(value) {\n        this.uniforms.scale[1] = value;\n    }\n}\n$a08c1e6a648373ca$export$2ba7369b7ae4551b.defaults = {\n    time: 0,\n    color: 0xffffff,\n    blend: 13,\n    dimX: 1,\n    dimY: 1\n};\n\n\nconst $98647ce0a9afc699$export$74eae7f690aa2952 = `\nprecision mediump float;\n\nuniform float time;\nuniform int blend;\nuniform int shieldType;\nuniform vec3 color;\nuniform vec2 posLight;\nuniform vec3 ambientColor;\nuniform float intensity;\nuniform float lightColorAlpha;\nuniform float lightSize;\nuniform float scale;\nuniform float radius;\nuniform float hideRadius;\nuniform float discardThreshold;\nuniform bool chromatic;\nuniform bool alphaDiscard;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n#define SQRT5B20 0.30901699\n#define PI 3.14159265\n#define TWOPI 6.28318531\n#define SPEED 0.01\n#define MU_TWOPI 0.15915494309\n#define MU_289 0.00346020761\n#define MU_3 0.33333333334\n#define MU_1_5 0.66666666667\n\nvec3 hsvToRgb(vec3 hsVcolor)\n{\n    vec4 K = vec4(1., 2.0 * MU_3, 1.0 * MU_3, 3.0);\n    vec3 p = abs(fract(hsVcolor.xxx + K.xyz) \n             * 6.0 - K.www);\n    return hsVcolor.z \n           * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsVcolor.y);\n}\n\nvec3 multihue(vec2 uv) \n{\n    float h = 0.5 + atan(uv.y, uv.x) * MU_TWOPI;\n    vec3 hsv = vec3(h, 1., 1.);\n    return hsvToRgb(hsv);\n}\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec2 random2(vec2 p) \n{\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat bornedCos(float minimum, float maximum)\n{\n    return (maximum-minimum)*(cos(PI*time*0.10 + 1.)*0.5)+minimum;\n}\n\nfloat bornedSin(float minimum, float maximum)\n{\n    return (maximum-minimum)*(sin(PI*time*0.10 + 1.)*0.5)+minimum;\n}\n\nvec4 mod289(vec4 x) \n{\n    return x - floor(x * MU_289) * 289.0;\n}\n\nfloat mod289(float x) \n{\n    return x - floor(x * MU_289) * 289.0;\n}\n\nvec4 permute(vec4 x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4(float j, vec4 ip) \n{\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n    return p;\n}\n\nfloat snoise(vec4 v) \n{\n    const vec4  C = vec4( 0.138196601125011,\n                          0.276393202250021,\n                          0.414589803375032,\n                         -0.447213595499958);\n\n    vec4 i  = floor(v + dot(v, vec4(SQRT5B20)) );\n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n      \n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n      \n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n    \n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n    m0 = m0 * m0;\n    m1 = m1 * m1;\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\nfloat surface( vec4 coord ) \n{\n\tfloat n = 0.0;\n\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\n\t\n\treturn n;\n}\n\nvec4 ambientLight(vec4 pixel, vec2 fragCoord, vec2 posLg) \n{\n  vec3 lightColor = (color+vec3(2.)) * MU_3;\n  vec2 position = posLg;\n  \n  float maxDistance = lightSize;\n  float distance = distance(fragCoord-posLg, position);\n  float value = 1.0 - smoothstep(-0.2, maxDistance, distance);\n  \n  vec3 ambient = pixel.rgb * color * intensity;\n  vec3 light = (lightColor*lightColorAlpha) * clamp(value, 0.0, 1.0);\n  vec3 intensity = ambient + light;\n  vec3 final = pixel.rgb * intensity;\n\n  return vec4(final, 1.0);\n}\n\nvec3 toGray(vec3 color)\n{\n  float average = (color.r + color.g + color.b)*0.3333333;\n  return vec3(average, average, average);\n}\n\nvec3 colorize(vec3 grayscale, vec3 color)\n{\n    return (grayscale * color);\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\n    else if (blend == 13) { fCol = fCol + sCol; return vec4(fCol,0.6); }\n    else if (blend == 14) { return mix(fColv4,sColv4,1.-fColv4.a); }\n    else if (blend == 15) { return mix(fColv4,sColv4,fColv4.a); }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,(fColv4.a+sColv4.a)*0.5);\n}\n\nfloat hexDist(vec2 p) \n{\n\tp = abs(p);\n\t\n    float c = dot(p, normalize(vec2(1,1.73)));\n    c = max(c, p.x);\n    \n    return c;\n}\n\nvec4 hexCoords(vec2 uv) \n{\n\tconst vec2 r = vec2(1, 1.73);\n    const vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    vec2 gv = dot(a, a) < dot(b,b) ? a : b;\n    \n    float x = atan(gv.x, gv.y);\n    float y = .65-hexDist(gv);\n    vec2 id = uv-gv;\n    return vec4(x, y, id.x,id.y);\n}\n\nvec4 hexa(vec2 fragCoord)\n{\n    float t = time;\n    \n    vec2 uv = fragCoord;\n    vec2 uv1 = uv + vec2(0, sin(uv.x*1. +t)*.25);\n    \n    vec2 uv2 = .5*uv1 + .5*uv + vec2(sin(uv.y*5. + t)*.05, 0);\n    float a = 1. + t*0.1;\n    float c = cos(a);\n    float s = sin(a);\n    uv2 *= mat2(c, -s, s, c);\n    \n    vec3 col = color;\n    col += (smoothstep(abs(uv2.y)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(sin(t)+1.));\n    col += (smoothstep(abs(uv2.x)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(cos(t)+1.));\n\n    return vec4(colorize(toGray(clamp(col,0.,2.)),color),1.);\n}\n\nvec4 voronoi( in vec2 x, float step1, float step2 ) \n{\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n    vec2 mg, mr;\n    float md = 8.0;\n    for (int j= -1; j <= 1; j++) {\n        for (int i= -1; i <= 1; i++) {\n            vec2 g = vec2(float(i),float(j));\n            vec2 o = random2( n + g );\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\n\n            vec2 r = g + o - f;\n            float d = dot(r,r);\n\n            if( d<md ) {\n                md = d;\n                mr = r;\n                mg = g;\n            }\n        }\n    }\n\n    md = 8.0;\n    for (int j= -2; j <= 1; j++) {\n        for (int i= -2; i <= 1; i++) {\n            vec2 g = mg + vec2(float(i),float(j));\n            vec2 o = random2( n + g );\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\n\n            vec2 r = g + o - f;\n\n            if ( dot(mr-r,mr-r)>0.000001 ) {\n                md = min(md, dot( 0.6*(mr+r), normalize(r-mr) ));\n            }\n        }\n    }\n    vec3 intermediate = vec3(md, mr);\n    vec3 final = (intermediate.x*(0.4 + .5*sin(64.0*intermediate.x))*color);\n    final = mix( color, final, smoothstep( step1, step2, intermediate.x*18. ) );\n    return vec4(final,1.);\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = 1.;\n\tfor (int i = 0; i < 7; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nfloat fbm2(vec2 n) \n{\n\tfloat total = 0.0, amp = 1.;\n\tfor (int i = 0; i < 2; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 ripples(vec2 suv) \n{\n    suv.x += time*0.5;\n    vec3 c1 = vec3(0.);\n    vec3 c2 = vec3(c1);\n    vec3 c3 = vec3(c1);\n    vec3 c4 = vec3(color.r*5., color.g*3.333, color.b*2.);\n    vec3 c5 = vec3(c3);\n    vec3 c6 = vec3(c1);\n    vec2 p = suv;\n    float q = 2.*fbm2(p + time*2.);\n    vec2 r = vec2(fbm2(p + q + ( time  ) - p.x - p.y), fbm2(p + p + ( time )));\n    r.x += bornedCos(-0.3,-0.2);\n    r.y += 200.*bornedSin(-1.9,1.9);\n    \n    vec3 c = color * (\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\n    );\n    return vec4(c,1.);\n}\n\nvec4 fire(vec2 suv) \n{\n    vec3 c1 = color+vec3(0.1, 0.0, 0.)*0.666667;\n\tvec3 c2 = color+vec3(0.7, 0.0, 0.)*0.666667;\n\tvec3 c3 = color+vec3(0.2, 0.0, 0.)*0.666667;\n\tvec3 c4 = color+vec3(1.0, 0.9, 0.)*0.666667;\n\tvec3 c5 = vec3(0.1);\n\tvec3 c6 = vec3(0.9);\n    vec2 uv = suv - vec2(0.92,0.26);\n\tvec2 p = uv.xy * 8.0;\n\tfloat q = fbm(p - time * 0.1);\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n\treturn vec4(c * cos(1.57/(1.-0.03) * uv.y), 1.0);\n}\n\nvec4 surface4d(vec2 suv)\n{\n    float s = suv.x + 0.61;\n    float t = suv.y + 0.5;\n    float nx = cos( s * TWOPI ) * MU_TWOPI;\n    float ny = cos( t * TWOPI ) * MU_TWOPI;\n    float nz = sin( s * TWOPI ) * MU_TWOPI;\n    float nw = sin( t * TWOPI ) * MU_TWOPI;\n\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * 0.03 );\n    return vec4( color * vec3( surf ), 1.0 );\n}\n\nvec4 noisy(vec2 suv)\n{\n    vec4 noiseColor;\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time*0.5));\n    noiseColor.a = 1.;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec2 circuit(vec2 p) {\n\tp = fract(p);\n\tfloat r = 0.3;\n\tfloat v = 0.0, g = 1.0;\n\tfloat d;\n\t\n\tconst int iter = 7;\n\tfor(int i = 0; i < iter; i ++)\n\t{\n\t\td = p.x - r;\n\t\tg += pow(clamp(1.0 - abs(d), 0.0, 1.0), 200.0);\n\t\t\n\t\tif(d > 0.0) {\n\t\t\tp.x = (p.x - r) / (1.8 - r);\n\t\t}\n\t\telse {\n\t\t\tp.x = p.x;\n\t\t}\n\t\tp = p.yx;\n\t}\n\tv /= float(iter);\n\treturn vec2(g, v);\n}\n\nvec4 denseSmoke(vec2 suv)\n{\n    vec4 noiseColor;\n    vec2 uv;\n    uv.x = (fbm(suv*2.)-suv.x);\n    uv.y = (suv.y+fbm(suv*2.));\n    noiseColor.rgb = (color.rgb * min(fbm(uv - time*0.5),fbm(uv)*1.5));\n    noiseColor.a = 1.0;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec4 dancingFume(vec2 suv)\n{\n    vec4 noiseColor;\n    vec2 uv;\n    uv.x += noise(suv)+fbm(suv);\n    uv.y += noise(suv)+fbm(suv);\n    uv *= 0.5;\n    noiseColor.rgb = (color.rgb * fbm((uv + suv*0.15) - time));\n    noiseColor.a = 1.0;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec4 hugeSmoke(vec2 suv)\n{\n    vec4 noiseColor;\n    vec2 uv;\n    uv.x += sin(suv.y)+fbm(suv);\n    uv.y += cos(suv.x)+fbm(suv);\n    uv *= 0.5;\n    noiseColor.rgb = (color.rgb * fbm((uv + suv) - time));\n    noiseColor.a = 1.0;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec4 grid(vec2 suv)\n{\n    vec2 uv = suv + vec2(0.,-1.5);\n\tvec2 cid2 = floor(uv);\n\tfloat cid = (cid2.y + cid2.x);\n\n\tvec2 dg = circuit(uv);\n\tfloat d = dg.x;\n\tvec3 col1 = (0.5-vec3(max(min(d, 2.0) - 1., 0.))) * color * 2.;\n    col1.rgb = sqrt(col1.rgb*0.5);\n\tvec3 col2 = vec3(max(d - 1.0, 0.0)) * color * 30. ;\n\n\tfloat f = max(0.7 - mod(sin(-uv.y) - cos(-uv.x) + (time * 1.) + (dg.y * 0.2), 0.9), 0.0) * 1.;\n\tcol2 *= f;\n\n    return vec4(col1 + col2, 1.0);\n}\n\nvec4 galaxy(vec2 suv)\n{\n    vec2 uv = suv*0.166666667 \n        + vec2(bornedCos(0.0,0.7),\n               bornedSin(0.0,0.7));\n\n    float t = 0.44 * time \n            + (( 0.25 + 0.05 * sin( time * 0.44 )) \n            / ( length( uv.xy ) + 0.2 )) * 2.2;\n    \n    float si = sin( t * 1.5 );\n    float co = cos( t * 0.66666667 );\n    mat2 matrix = mat2( -co, si, si, co );\n    \n    float c;\n    float v1 = 0.0;\n    float v2 = 0.0;\n    vec3 uv2 = vec3( uv, 0.0 );\n    \n    for( int i = 0; i < 50; i++ ) {\n        float s = float( i ) * 0.035;\n        vec3 p = s * uv2;\n        p.xy *= matrix;\n        p += vec3( .22,.3, s - 1.5 - sin( t * 0.13 ) * 0.1 );\n\n        for( int i = 0; i < 6; i++ ) {\n            p = abs( p ) / dot( p, p ) - 0.659;\n        }\n\n        v1 += dot( p,p ) * 0.0045 * ( 1.8 + sin( length( uv.xy * 13.0 ) + 0.5 - t * 0.2 ) );\n        v2 += dot( p,p ) * 0.0045 * ( 1.5 + sin( length( uv.xy * 13.5 ) + 2.2 - t * 0.3 ) );\n        c = length( p.xy * 0.5 ) * 1.05;\n    }\n    \n    float len = length( uv );\n    v1 *= smoothstep( 0.7, 0.0, len );\n    v2 *= smoothstep( 0.6, 0.0, len );\n    \n    float r = clamp( c, 0.0, 1.0 );\n    float g = clamp( ( v1 + c ) * 0.25, 0.0, 1.0 );\n    float b = clamp( v2, 0.0, 1.0 );\n    vec3 col = color * vec3( r, g, b ) + smoothstep( 0.15, 0.0, len ) * 0.9;\n\n    return clamp(vec4( col, 1.0 ),0.,1.);\n}\n\nvec2 getSphere(out float alpha, out float r)\n{\n  vec2 tc = vFilterCoord.xy;\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / radius);\n  r = dot(p,p);\n  r > 0.943 ? alpha = max(min(40.*log(1./r),1.),0.) : alpha = 1.;\n  float f = (1.0-sqrt(1.0-r))/(r);\n  vec2 uv;\n  uv.x = p.x*f;\n  uv.y = p.y*f;\n  return uv;\n}\n\nvoid computeHideAlpha(out float alpha)\n{\n  vec2 tc = vFilterCoord.xy;\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / hideRadius);\n  float r = dot(p,p);\n  r > 0.9 ? alpha = 1.-max(min(40.*log(1./r),1.),0.) : alpha = 0.;\n}\n\nvoid main()\n{\n    float a, r, hideAlpha;\n    vec4 result;\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n\n    if (hideRadius > 0.) computeHideAlpha(hideAlpha);\n    else hideAlpha = 1.;\n\n    if (pixel.a == 0. && hideAlpha == 0.) {\n        discard;\n    }\n\n    vec2 uv = getSphere(a, r);\n\n    if (shieldType <= 1) {\n        result = ripples(15.*uv*scale);\n    } else if (shieldType == 2) {\n        result = hexa(uv*scale);\n    } else if (shieldType == 3) {\n        result = fire(uv/1.5*scale);\n    } else if (shieldType == 4) {\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.29,0.0);\n    } else if (shieldType == 5) {\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.0019,1.);\n    } else if (shieldType == 6) {\n        result = 3.*surface4d(uv*scale);\n    } else if (shieldType == 7) {\n        result = noisy(uv*20.*scale);\n    } else if (shieldType == 8) {\n        result = denseSmoke(uv*10.*scale);\n    } else if (shieldType == 9) {\n        result = dancingFume(uv*20.*scale);\n    } else if (shieldType == 10) {\n        result = hugeSmoke(uv*5.*scale);\n    } else if (shieldType == 11) {\n        result = grid(uv*5.*scale);\n    } else if (shieldType == 12) {\n        result = galaxy(uv*5.*scale);\n    } else if (shieldType != 1) {\n        result = vec4(color,1.);\n    }\n\n    vec4 colorized;\n    vec3 chromaOption;\n    if (chromatic) {\n        vec2 vHue = uv;\n        vHue.x -= bornedCos(-0.,+2.2);\n        vHue.y -= bornedSin(-0.,+2.2);\n        chromaOption = multihue(vHue);\n    } else {\n        chromaOption = color;\n    }\n    colorized = (vec4(\n                    colorize(\n                        toGray(result.rgb), chromaOption), result.a) + result)*0.5;\n    vec4 preRenderedResult = clamp(ambientLight(clamp(colorized, 0., 1.)*intensity, uv, posLight-vec2(0.5,0.5)),0.,1.);\n    vec4 final = vec4(preRenderedResult.rgb * hideAlpha, 1.);\n\n    if (alphaDiscard && all(lessThanEqual(final.rgb,vec3(discardThreshold)))) {\n        if (pixel.a == 0.) discard;\n        else {\n            gl_FragColor = pixel;\n            return;\n        }\n    }\n\n    gl_FragColor =\n            r > 1.0\n                ? pixel*(1.-a)\n                : (pixel.a < 1. \n                        ? mix( blenderVec3(13, pixel, final), blenderVec3(blend, pixel, final), pixel.a)\n                        : blenderVec3(blend, pixel, final) * a);\n}\n`;\n\n\n\n\n\n\nclass $7eae9962e69f7347$export$8353bd967bf6b04d extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, lightAlpha: lightAlpha, blend: blend, shieldType: shieldType, posLightX: posLightX, posLightY: posLightY, lightSize: lightSize, scale: scale, intensity: intensity, radius: radius, hideRadius: hideRadius, chromatic: chromatic, discardThreshold: discardThreshold, alphaDiscard: alphaDiscard } = Object.assign({}, $7eae9962e69f7347$export$8353bd967bf6b04d.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $98647ce0a9afc699$export$74eae7f690aa2952));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.posLight = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            lightAlpha: lightAlpha,\n            blend: blend,\n            shieldType: shieldType,\n            posLightX: posLightX,\n            posLightY: posLightY,\n            lightSize: lightSize,\n            scale: scale,\n            intensity: intensity,\n            radius: radius,\n            hideRadius: hideRadius,\n            chromatic: chromatic,\n            discardThreshold: discardThreshold,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 2000;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get lightAlpha() {\n        return this.uniforms.lightColorAlpha;\n    }\n    set lightAlpha(value) {\n        this.uniforms.lightColorAlpha = value;\n    }\n    get shieldType() {\n        return this.uniforms.shieldType;\n    }\n    set shieldType(value) {\n        this.uniforms.shieldType = Math.floor(value);\n    }\n    get posLightX() {\n        return this.uniforms.posLight[0];\n    }\n    set posLightX(value) {\n        this.uniforms.posLight[0] = value;\n    }\n    get posLightY() {\n        return this.uniforms.posLight[1];\n    }\n    set posLightY(value) {\n        this.uniforms.posLight[1] = value;\n    }\n    get lightSize() {\n        return this.uniforms.lightSize;\n    }\n    set lightSize(value) {\n        this.uniforms.lightSize = value;\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get radius() {\n        return this.uniforms.radius;\n    }\n    set radius(value) {\n        this.uniforms.radius = value;\n    }\n    get hideRadius() {\n        return this.uniforms.hideRadius;\n    }\n    set hideRadius(value) {\n        this.uniforms.hideRadius = value;\n    }\n    get discardThreshold() {\n        return this.uniforms.discardThreshold;\n    }\n    set discardThreshold(value) {\n        this.uniforms.discardThreshold = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n    get chromatic() {\n        return this.uniforms.chromatic;\n    }\n    set chromatic(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.chromatic = value;\n    }\n}\n$7eae9962e69f7347$export$8353bd967bf6b04d.defaults = {\n    time: 0,\n    color: 0xbbbbbb,\n    lightAlpha: 1.0,\n    blend: 2,\n    shieldType: 1,\n    posLightX: 0.65,\n    posLightY: 0.25,\n    lightSize: 0.483,\n    scale: 1,\n    intensity: 1,\n    radius: 1,\n    hideRadius: 0,\n    chromatic: false,\n    discardThreshold: 0.25,\n    alphaDiscard: false\n};\n\n\nconst $1896fe3fb3382f00$export$29635fcc44af7f32 = `\nprecision mediump float;\n\nuniform float time;\nuniform float alphaImg;\nuniform float alphaChr;\nuniform float ampX;\nuniform float ampY;\nuniform int blend;\nuniform int nbImage;\nuniform sampler2D uSampler;\nuniform vec4 inputClamp;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265;\n\nfloat bornedCos(float mi, float ma) {\n    return (ma-mi)*(cos(2.*PI*time*0.2+1.)*0.5)+mi;\n}\n\nfloat bornedSin(float mi, float ma) {\n    return (ma-mi)*(sin(2.*PI*time*0.2+1.)*0.5)+mi;\n}\n\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\n{\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\n\n    fCol.a = max(fCol.a,sCol.a);\n    return fCol;\n}\n\nvec4 renderMirror(vec2 translation, vec4 prevpix)\n{\n    vec2 displaced = vTextureCoord + translation;\n    return blender(blend, prevpix, \n                   texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw)));\n}\n\nvoid main() \n{\n    float x = ampX * bornedCos(0.,1.);\n    float y = ampY * bornedSin(0.,1.);\n    vec4 renderedPixel;\n    vec2 translation;\n\n    if (nbImage >= 1) {\n        translation = vec2(x,y);\n        renderedPixel = texture2D(uSampler, clamp(vTextureCoord + translation, inputClamp.xy, inputClamp.zw));\n    }\n    if (nbImage >= 2) {\n        translation = 0.90*vec2(-x,y*0.5);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 3) {\n        translation = 0.70*vec2(x,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 4) {\n        translation = 0.80*vec2(-x*0.6,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 5) {\n        translation = 1.20*vec2(-x,y*0.4);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 6) {\n        translation = 1.10*vec2(x,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 7) {\n        translation = 0.6*vec2(-x*0.4,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 8) {\n        translation = 1.3*vec2(-x,y*0.70);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 9) {\n        translation = vec2(x*0.5,y*0.85);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    renderedPixel = renderedPixel*alphaImg;\n    gl_FragColor = blender(blend,texture2D(uSampler, vTextureCoord)*alphaChr , renderedPixel);\n}\n`;\n\n\n\n\n\n\nclass $8d8f4cc819ce08c5$export$7f3e808c6a96411c extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, blend: blend, alphaImg: alphaImg, alphaChr: alphaChr, nbImage: nbImage, ampX: ampX, ampY: ampY } = Object.assign({}, $8d8f4cc819ce08c5$export$7f3e808c6a96411c.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $1896fe3fb3382f00$export$29635fcc44af7f32));\n        Object.assign(this, {\n            time: time,\n            blend: blend,\n            alphaImg: alphaImg,\n            alphaChr: alphaChr,\n            nbImage: nbImage,\n            ampX: ampX,\n            ampY: ampY\n        });\n        this.zOrder = 100;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get alphaImg() {\n        return this.uniforms.alphaImg;\n    }\n    set alphaImg(value) {\n        this.uniforms.alphaImg = value;\n    }\n    get alphaChr() {\n        return this.uniforms.alphaChr;\n    }\n    set alphaChr(value) {\n        this.uniforms.alphaChr = value;\n    }\n    get nbImage() {\n        return this.uniforms.nbImage;\n    }\n    set nbImage(value) {\n        this.uniforms.nbImage = Math.floor(value);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get ampX() {\n        return this.uniforms.ampX;\n    }\n    set ampX(value) {\n        this.uniforms.ampX = value;\n    }\n    get ampY() {\n        return this.uniforms.ampY;\n    }\n    set ampY(value) {\n        this.uniforms.ampY = value;\n    }\n}\n$8d8f4cc819ce08c5$export$7f3e808c6a96411c.defaults = {\n    time: 0,\n    blend: 4,\n    alphaImg: 0.5,\n    alphaChr: 1.0,\n    nbImage: 4,\n    ampX: 0.15,\n    ampY: 0.15\n};\n\n\nconst $cf403162ff153641$export$b460b340f858a038 = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uSampler;\nuniform float time;\nuniform float intensity;\nuniform float divisor;\nuniform int blend;\nuniform vec2 dimensions;\nuniform vec2 anchor;\nuniform vec3 color;\n\nvarying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\n\nconst float MU_TWOPI = 0.15915494309;\nconst float MU_PI5 = 1.59154943092;\nconst float MU_256 = 0.00390625;\n\nvec4 blender(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n\n    if ( blend <= 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\n    else if (blend >= 14) { fCol = fCol + sCol; }\n\n    return vec4(fCol,fColv4.a);\n}\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec2 uv = (vFilterCoord - anchor) / dimensions;\n\n    float len = length(uv * 0.5);\n   \tfloat angle = atan(uv.x, uv.y) * MU_TWOPI;\n    float beam = fract((angle) * divisor + sin((sqrt(len) * 0.2) - (time*0.5)));\n    \n    beam  = 2.* cos(beam * MU_PI5);\n    beam *= floor(fract(angle * divisor + sin(time - (len * 1.2) * 0.2)) *256.) * MU_256;\n    \n    float fractburn = fract(beam);\n\n    vec4 color1 = smoothstep(0.0, 1., (beam*(intensity*0.1) + pixel * vec4(color,1.)) / (fractburn == 0. ? fractburn+0.1 : fractburn) * 0.3 );\n    vec4 result = blender(blend, pixel, color1);\n\n    gl_FragColor = result*pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $5b05583cddbffe38$export$a909c602e4f39889 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, divisor: divisor, intensity: intensity, blend: blend, anchorX: anchorX, anchorY: anchorY, dimX: dimX, dimY: dimY } = Object.assign({}, $5b05583cddbffe38$export$a909c602e4f39889.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $cf403162ff153641$export$b460b340f858a038));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            -1\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            divisor: divisor,\n            intensity: intensity,\n            blend: blend,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 130;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get divisor() {\n        return this.uniforms.divisor;\n    }\n    set divisor(value) {\n        this.uniforms.divisor = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n}\n$5b05583cddbffe38$export$a909c602e4f39889.defaults = {\n    time: 0.0,\n    color: 0xff8010,\n    divisor: 40,\n    intensity: 0.1,\n    blend: 8,\n    anchorX: 0.5,\n    anchorY: -1,\n    dimX: 1,\n    dimY: 1\n};\n\n\nconst $aa280a975796e7bf$export$28b3a3501a7f949 = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uSampler;\nuniform mat3 filterMatrixInverse;\nuniform float time;\nuniform float intensity;\nuniform float scale;\nuniform int blend;\nuniform bool spectral;\nuniform bool alphaDiscard;\nuniform vec3 color;\n\nvarying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\n\n#define PI 3.14159265359\n\n#define NUM_OCTAVES 3\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec3 sCol)\n{\n    vec3 fCol = vec3(fColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\n    else if (blend >= 14) { fCol = fCol + sCol; }\n    \n    return vec4(fCol,fColv4.a);\n}\n\nvoid main() {\n    \n    float distortion1 = fbm( \n        vec2( fbm(  vFilterCoord * 2.5 * scale + time*0.5),\n              fbm( (-vFilterCoord - vec2(0.01)) * 5. * scale + time*0.3333334) )\n                    );\n    \n    float distortion2 = fbm( \n        vec2( fbm( -vFilterCoord * 5. * scale + time*0.5),\n              fbm(  (vFilterCoord + vec2(0.01)) * 2.5 * scale + time*0.3333334) )\n                    );\n    \n    vec2 uv = vFilterCoord;\n    \n    uv.x += 0.8*sin(min(distortion1*0.25,distortion2*0.25));\n    uv.y += 0.8*cos(min(distortion1*0.25,distortion2*0.25));\n    uv *= 1. + 0.11*(cos(sqrt(max(distortion1, distortion2))+1.)*0.5);\n    uv -= vec2(0.036,0.81); \n\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\n    \n    vec4 pixel = texture2D(uSampler, mappedCoord);\n    vec3 aColor = color;\n    if (alphaDiscard) aColor.rgb *= mix(distortion1,distortion2,0.5);\n    else aColor.rgb *= min(distortion1,distortion2);\n    pixel.rgb += aColor*intensity;\n\n    float a = pixel.a;\n\n    if (spectral) pixel.a = max(distortion1,distortion2)*3.75;\n    if (alphaDiscard && all(lessThanEqual(pixel.rgb,vec3(0.50)))) discard;\n\n    gl_FragColor = blenderVec3(blend,pixel,color*0.3333334) * min(pixel.a,a);\n}\n`;\n\n\n\n\n\n\nclass $34c9aecbf210823d$export$76689802e4398e92 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, scale: scale, intensity: intensity, blend: blend, spectral: spectral, alphaDiscard: alphaDiscard } = Object.assign({}, $34c9aecbf210823d$export$76689802e4398e92.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $aa280a975796e7bf$export$28b3a3501a7f949));\n        this.uniforms.color = new Float32Array([\n            0.1,\n            0.45,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            scale: scale,\n            intensity: intensity,\n            blend: blend,\n            spectral: spectral,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 180;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get spectral() {\n        return this.uniforms.spectral;\n    }\n    set spectral(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.spectral = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$34c9aecbf210823d$export$76689802e4398e92.defaults = {\n    time: 0.0,\n    color: 0x0595ff,\n    scale: 1,\n    intensity: 5,\n    blend: 4,\n    spectral: false,\n    alphaDiscard: false\n};\n\n\nconst $c1ccb9766e079f8c$export$7d6ef12f70fa5332 = `\nprecision mediump float;\n\nuniform sampler2D uSampler;\nuniform float time;\nuniform float scale;\nuniform float auraIntensity;\nuniform float subAuraIntensity;\nuniform float threshold;\nuniform int auraType;\nuniform bool holes;\nuniform vec2 thickness;\nuniform vec4 color;\nuniform vec4 inputSize;\nuniform vec4 inputClamp;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst int NUM_OCTAVES = 4;\nconst float PI = 3.14159265358;\nconst float TWOPI = 6.28318530717;\nconst float MAX_TOTAL_ALPHA = 17.2787595915;\n\nfloat rand(vec2 uv)\n{\n    return fract(sin(dot(uv.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p)\n{\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat fbm(vec2 x) \n{\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\nvec4 outlining() \n{\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\n    vec4 curColor;\n    float maxAlpha = 0.;\n    vec2 displaced;\n    for (float angle = 0.; angle <= TWOPI; angle += 0.3141592653) {\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\n        curColor = texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw));\n        maxAlpha = max(maxAlpha, curColor.a);\n    }\n    float resultAlpha = max(maxAlpha, ownColor.a);\n    return vec4((ownColor.rgb + color.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\n\n}\n\nvec4 glowing() \n{\n\tvec2 px = inputSize.zw;\n\n    float totalAlpha = 0.0;\n    float outerStrength = 6.;\n\n    vec2 direction;\n    vec2 displaced;\n    vec4 curColor;\n\n    for (float angle = 0.0; angle < TWOPI; angle += 0.3141592653) {\n       direction = vec2(cos(angle), sin(angle)) * px;\n\n       for (float curDistance = 0.0; curDistance < 10.; curDistance++) {\n           displaced = clamp(vTextureCoord + direction * \n                   (curDistance + 1.0), inputClamp.xy, inputClamp.zw);\n\n           curColor = texture2D(uSampler, displaced);\n           totalAlpha += (10. - curDistance) * curColor.a;\n       }\n    }\n    \n    curColor = texture2D(uSampler, vTextureCoord);\n\n    float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\n    float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\n    float outerGlowStrength = min(1.0 - curColor.a, outerGlowAlpha);\n\n    vec4 outerGlowColor = (outerGlowStrength * (color.rgba*0.1) );\n\n    float resultAlpha = outerGlowAlpha;\n    return vec4(color.rgb * resultAlpha, resultAlpha);\n}\n\nvec4 ripples(vec2 suv) \n{\n    suv.x += time/2.;\n    vec3 c1 = ( 0.0 ) * (color.rgb*10.);\n    vec3 c2 = vec3(c1);\n    vec3 c3 = vec3(c1);\n    vec3 c4 = vec3( color.r*5., color.g*3.3333, color.b*2. );\n    vec3 c5 = vec3(c3);\n    vec3 c6 = vec3(c1);\n    vec2 p = suv;\n    float q = 2.*fbm(p + time*0.2);\n    vec2 r = vec2(fbm(p + q + ( time*0.1  ) - p.x - p.y), fbm(p + p + ( time*0.1 )));\n    vec3 c = color.rgb * (\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\n    );\n    return vec4(c,1.);\n}\n\nvec4 noisy(vec2 suv)\n{\n    vec4 noiseColor;\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time));\n    noiseColor.a = 1.;\n    return clamp(noiseColor,0.,1.);\n}\n\nvoid main(void) \n{\n\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    if (pixel.a == 1.) {\n        gl_FragColor =  pixel;\n    } else {\n        vec4 glowlevel = glowing();\n        vec4 outlinelevel = outlining();\n        vec4 aura;\n        \n        if (auraType <= 1) {\n            aura = ripples(vFilterCoord*20.*scale);\n        } else {\n            aura = noisy(vFilterCoord*20.*scale);\n        }\n\n        vec4 effect;\n        effect = ((glowlevel*subAuraIntensity)*0.1) + ((outlinelevel*auraIntensity)*0.8);\n\n        if (effect.a >= 0.) {effect.rgb = aura.rgb*(max(effect.a,0.));}\n\n        float intensity = effect.r + effect.g + effect.b;\n\t    if(intensity < threshold && effect.a != 0.) {\n            if (holes) {discard;}\n            effect.rgb = (color.rgb)*(effect.a*0.5);\n        } \n\n        gl_FragColor =  pixel + effect * (1.-pixel.a);\n    }\n}\n`;\n\n\n\n\n\n\nclass $4130c396ef8a0d82$export$dbf4d88a9f2fd9e6 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, thickness: thickness, scale: scale, auraIntensity: auraIntensity, subAuraIntensity: subAuraIntensity, discard: discard, threshold: threshold, auraType: auraType } = Object.assign({}, $4130c396ef8a0d82$export$dbf4d88a9f2fd9e6.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $c1ccb9766e079f8c$export$7d6ef12f70fa5332));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            1.0\n        ]);\n        this.uniforms.thickness = new Float32Array([\n            0.01,\n            0.01\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            thickness: thickness,\n            scale: scale,\n            auraIntensity: auraIntensity,\n            subAuraIntensity: subAuraIntensity,\n            discard: discard,\n            threshold: threshold,\n            auraType: auraType\n        });\n        this.zOrder = 80;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get auraIntensity() {\n        return this.uniforms.auraIntensity;\n    }\n    set auraIntensity(value) {\n        this.uniforms.auraIntensity = value;\n    }\n    get subAuraIntensity() {\n        return this.uniforms.subAuraIntensity;\n    }\n    set subAuraIntensity(value) {\n        this.uniforms.subAuraIntensity = value;\n    }\n    get threshold() {\n        return this.uniforms.threshold;\n    }\n    set threshold(value) {\n        this.uniforms.threshold = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get discard() {\n        return this.uniforms.holes;\n    }\n    set discard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.holes = value;\n    }\n    get auraType() {\n        return this.uniforms.auraType;\n    }\n    set auraType(value) {\n        this.uniforms.auraType = Math.floor(value);\n    }\n    apply(filterManager, input, output, clear) {\n        this.uniforms.thickness[0] = this.thickness * this.targetPlaceable.worldTransform.a / input._frame.width;\n        this.uniforms.thickness[1] = this.thickness * this.targetPlaceable.worldTransform.a / input._frame.height;\n        super.apply(filterManager, input, output, clear);\n    }\n}\n$4130c396ef8a0d82$export$dbf4d88a9f2fd9e6.defaults = {\n    time: 0,\n    color: 0xff8010,\n    thickness: 5,\n    scale: 1,\n    auraIntensity: 1,\n    subAuraIntensity: 1,\n    discard: false,\n    threshold: 0.5,\n    auraType: 1\n};\n\n\n\n\nclass $9d7a67912a650eb7$export$26c3bdb8b50816cc extends PIXI.filters.PixelateFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.animated = {};\n        this.sizeX = 5;\n        this.sizeY = 5;\n        this.zOrder = 20;\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform() {\n        this.size.x = this.sizeX * this.targetPlaceable.worldTransform.a;\n        this.size.y = this.sizeY * this.targetPlaceable.worldTransform.a;\n    }\n}\n\n\nconst $98979de687ff2ca3$export$ee64fcda6bb0a01b = `\nprecision mediump float;\n\nuniform float time;\nuniform float thickness;\nuniform float div1;\nuniform float div2;\nuniform float tear;\nuniform float amplitude;\nuniform bool alphaDiscard;\nuniform vec2 anchor;\nuniform vec3 color;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265358;\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0., 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < 2; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 spiderweb()\n{\n    vec2 coord = vFilterCoord.xy + anchor;\n\n    float t = floor(time * 0.01) * 7.3962;\n\n    vec2 sc = (coord.xy - 1.) * 0.5;\n    float phi = atan(sc.y, sc.x + 1e-6);\n    vec2 pc = vec2(fract(phi / (PI * 2.)), length(sc));\n    \n    float h_divnum = div1;\n    float s_divnum = div2;\n    \n    float ddth = fbm(vec2(pc.x*h_divnum,pc.x*20.*pow(length(sc*0.5),2.))*3.);\n    \n    float h_rand = 0.3+0.0895*(0.1*cos(time)+010.9)*tear;\n    float s_rand = .355*(0.2*cos(time)+1.);\n    \n    float l = pc.y+ cos(ddth*0.5) * (h_rand - 0.4) + ddth*(s_rand - 0.5)*0.2;\n    \n    float ts = 0.05;\n    float a = smoothstep(abs(sin(( pc.x*PI*2.  )  * s_divnum) ),-.1,thickness * ts );\n    float b = smoothstep(abs(sin(( pc.y*PI*2. + h_rand + l)  * h_divnum ) ),-.1,thickness * ts );\n    float s = a*b*2.;\n    float m = alphaDiscard ? 1. : 2.25;\n    return vec4(color.rgb*m,2.)-vec4(s,s,s,1.);\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n    vec4 result = max(spiderweb(),pixel)*pixel.a;\n    if (alphaDiscard && result.rgb == vec3(0.)) discard;\n    gl_FragColor = result;\n}\n`;\n\n\n\n\n\n\nclass $30e3cacecefea03b$export$be2f10404718dbad extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, anchorX: anchorX, anchorY: anchorY, color: color, thickness: thickness, div1: div1, div2: div2, tear: tear, amplitude: amplitude, alphaDiscard: alphaDiscard } = Object.assign({}, $30e3cacecefea03b$export$be2f10404718dbad.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $98979de687ff2ca3$export$ee64fcda6bb0a01b));\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            -1\n        ]);\n        this.uniforms.color = new Float32Array([\n            0.75,\n            0.75,\n            0.75\n        ]);\n        Object.assign(this, {\n            time: time,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            color: color,\n            thickness: thickness,\n            div1: div1,\n            div2: div2,\n            tear: tear,\n            amplitude: amplitude,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 260;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = 0.5;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = 0.5;\n    }\n    get thickness() {\n        return this.uniforms.thickness;\n    }\n    set thickness(value) {\n        this.uniforms.thickness = value;\n    }\n    get tear() {\n        return this.uniforms.tear;\n    }\n    set tear(value) {\n        this.uniforms.tear = value;\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get div1() {\n        return this.uniforms.div1;\n    }\n    set div1(value) {\n        this.uniforms.div1 = value;\n    }\n    get div2() {\n        return this.uniforms.div2;\n    }\n    set div2(value) {\n        this.uniforms.div2 = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$30e3cacecefea03b$export$be2f10404718dbad.defaults = {\n    time: 0.0,\n    anchorX: 0.5,\n    anchorY: 0.5,\n    color: 0xbbbbbb,\n    thickness: 1,\n    div1: 10,\n    div2: 10,\n    tear: 0.54,\n    amplitude: 0.8,\n    alphaDiscard: false\n};\n\n\nconst $2f78c4e175cbc874$export$ddb966d307e896d5 = `\nprecision mediump float;\nprecision mediump int;\n\nuniform vec3 color;\nuniform float time;\nuniform float amplitude;\nuniform float intensity;\nuniform bool alphaDiscard;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\nuniform sampler2D uSampler;\n\n#define PI 3.14159265\n#define OCTAVES 3\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat bornedCos(float minimum, float maximum)\n{\n    return (maximum-minimum)*(cos(2.*PI*time*0.05 + 1.)*0.5)+minimum;\n}\n\nfloat bornedSin(float minimum, float maximum)\n{\n    return (maximum-minimum)*(sin(2.*PI*time*0.05 + 1.)*0.5)+minimum;\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < OCTAVES; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 ripples(vec2 suv) \n{\n    suv.x += time*0.5;\n    vec3 c1 = color*intensity;\n    vec3 c2 = vec3(0.);\n    vec3 c3 = vec3(c1);\n    vec3 c4 = vec3(color.r*3.333, color.g*3.333, color.b*3.333);\n    vec3 c5 = vec3(c3);\n    vec3 c6 = vec3(c1);\n    vec2 p = suv;\n    float q = 2. * fbm(p + time * 2.);\n    vec2 r = vec2(fbm(p + q + ( time  ) - p.x - p.y), fbm(p + p + ( time )));\n    r.x += bornedCos(-0.3,-0.2);\n    r.y += 200.*bornedSin(-1.9,1.9);\n    \n    vec3 c = color * (\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\n    );\n    return vec4(c,1.);\n}\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec4 result = max(ripples(15.* vFilterCoord),pixel);\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.40)))) discard;\n    gl_FragColor = result*pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $5c475373f35e120f$export$3f7eb987d91438a2 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, amplitude: amplitude, intensity: intensity, alphaDiscard: alphaDiscard, _octaves: _octaves } = Object.assign({}, $5c475373f35e120f$export$3f7eb987d91438a2.defaults, params);\n        if (typeof _octaves !== \"number\") _octaves = $5c475373f35e120f$export$3f7eb987d91438a2.defaults._octave;\n        let fragment = (0, $2f78c4e175cbc874$export$ddb966d307e896d5).replace(`#define OCTAVES 3`, `#define OCTAVES ${_octaves}`);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), fragment);\n        this.uniforms.color = new Float32Array([\n            0.75,\n            0.75,\n            0.75\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            amplitude: amplitude,\n            intensity: intensity,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 250;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$5c475373f35e120f$export$3f7eb987d91438a2.defaults = {\n    time: 0.0,\n    color: 0xbbbbbb,\n    amplitude: 1,\n    intensity: 0.001,\n    alphaDiscard: false,\n    _octave: 3\n};\n\n\nconst $f4c3c5d7c98dfcd4$export$59ce548d84b541a8 = `\nprecision mediump float;\n\nuniform float time;\nuniform float scale;\nuniform float distortion;\nuniform bool alphaDiscard;\nuniform vec3 color;\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265358;\n\nfloat rand(vec2 c)\n{\n\treturn fract( sin( dot( c.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\n}\n\nvec2 rand2(vec2 st)\n{\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(cos(st)*43758.5453123);\n}\n\nvec3 toGray(vec3 color)\n{\n  float average = (color.r + color.g + color.b)*0.3333333;\n  return vec3(average, average, average);\n}\n\nvec3 colorize(vec3 grayscale, vec3 color)\n{\n    return (grayscale * color);\n}\n\nfloat noise (vec2 st) \n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( rand2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( rand2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( rand2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( rand2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat circle(vec2 pos, float radius, float glow)\n{\n    float sdf = length(pos);\n    sdf = smoothstep(radius-0.700,radius,sdf);\n    float circles = 1.0 - smoothstep(0.0,1.0,sdf*1.280);\n    float glows = exp(-sdf*4.496) * glow * (3.0 - circles);\n    return circles+glows;\n}\n\nvec4 globes()\n{\n    vec2 st = (vFilterCoord - 0.5);\n    st *= scale;\n    vec2 uv = st;\n    float noisest = noise(vec2(uv.x - time,uv.y - time));\n    uv += noisest*distortion;\n    uv -= vec2( noise(vec2(time)*0.2)*4.0,-time*0.01);\n    \n    vec3 color = vec3(0.);\n    \n    \n    vec2 pos = fract(uv)-0.5;\n    vec2 id = floor(uv);\n\n    \n    for(int y = -1; y <= 1; y++){\n        for(int x = -1; x <= 1; x++){\n            vec2 neighbour = vec2(x,y);\n            vec2 rand2 = rand2(id+neighbour);\n            float a = noise(rand2+time*2.8);\n            vec2 offset = 0.5*(sin(time + rand2*5.28))*2.2;\n            float size = rand(id+neighbour)*0.75 + a*0.15;\n            color += circle(pos-neighbour+offset,size,size*1.400)*0.143 * vec3(rand2.x*7.884,7.2,rand2.y*6.832);\n        }\n    }\n    \n    return vec4(color,1.0);\n}\n\nvoid main() {\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    vec4 tinyGlobes = vec4(colorize(toGray(globes().rgb*1.5),color*1.5),1.);\n\n    bool belowThreshold = all(lessThanEqual(tinyGlobes.rgb,vec3(0.6)));\n    if (alphaDiscard && belowThreshold) discard;\n    else if (belowThreshold) tinyGlobes = pixel;\n\n    gl_FragColor = max(tinyGlobes,pixel)*pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $6fa47e94e013e8e5$export$dd8c8c08b796f015 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, scale: scale, distortion: distortion, alphaDiscard: alphaDiscard } = Object.assign({}, $6fa47e94e013e8e5$export$dd8c8c08b796f015.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $f4c3c5d7c98dfcd4$export$59ce548d84b541a8));\n        this.uniforms.color = new Float32Array([\n            0.75,\n            0.75,\n            0.75\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            scale: scale,\n            distortion: distortion,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 270;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get distortion() {\n        return this.uniforms.distortion;\n    }\n    set distortion(value) {\n        this.uniforms.distortion = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$6fa47e94e013e8e5$export$dd8c8c08b796f015.defaults = {\n    time: 0.0,\n    color: 0xaa3050,\n    scale: 20,\n    distortion: 0.25,\n    alphaDiscard: false\n};\n\n\nconst $d7e8f36ca079ac30$export$9bdad1ae37d738e0 = `\nprecision mediump float;\n\nuniform float rotation;\nuniform float twRadius;\nuniform float twAngle;\nuniform float bpRadius;\nuniform float bpStrength;\nuniform vec2 scale;\nuniform vec2 translation;\nuniform vec2 pivot;\nuniform vec4 inputClamp;\nuniform sampler2D uSampler;\nuniform mat3 filterMatrixInverse;\n\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.1415927;\n\nvec2 morphing(in vec2 uv) {\n    float dist = length(uv);\n\n    // twist effect\n    if (dist < twRadius) {\n        float ratioDist = (twRadius - dist) / twRadius;\n        float angleMod = ratioDist * ratioDist * twAngle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    }\n\n    // bulge pinch effect\n    if (dist < bpRadius) {\n        float percent = dist / bpRadius;\n        if (bpStrength > 0.) {\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\n        } else {\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\n        }\n    }\n\n    return uv;\n}\n\nvec2 transform(in vec2 uv) {\n    float angle = -(PI * rotation * 0.005555555555);\n    uv -= pivot;\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv *= mat2(scale.x, 0.0, 0.0, scale.y);\n    uv = morphing(uv);\n    uv += pivot;\n\n    return uv;\n}\n\nvoid main() {\n    vec2 uv = vFilterCoord + translation;\n    uv = transform(uv);\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\n    vec4 pixel = texture2D(uSampler,clamp(mappedCoord, inputClamp.xy, inputClamp.zw));\n    gl_FragColor = pixel;\n}\n`;\n\n\n\n\n\n\nclass $5ae15acc2d1ee812$export$e8341be799357874 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { rotation: rotation, twRadiusPercent: twRadiusPercent, twAngle: twAngle, twRotation: twRotation, bpRadiusPercent: bpRadiusPercent, bpStrength: bpStrength, scale: scale, scaleX: scaleX, scaleY: scaleY, pivotX: pivotX, pivotY: pivotY, translationX: translationX, translationY: translationY } = Object.assign({}, $5ae15acc2d1ee812$export$e8341be799357874.defaults, params);\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $d7e8f36ca079ac30$export$9bdad1ae37d738e0));\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.pivot = new Float32Array([\n            0.5,\n            0.5\n        ]);\n        this.uniforms.translation = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        Object.assign(this, {\n            rotation: rotation,\n            twRadiusPercent: twRadiusPercent,\n            twAngle: twAngle,\n            twRotation: twRotation,\n            bpRadiusPercent: bpRadiusPercent,\n            bpStrength: bpStrength,\n            scale: scale,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            pivotX: pivotX,\n            pivotY: pivotY,\n            translationX: translationX,\n            translationY: translationY\n        });\n        this.zOrder = 1000;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get rotation() {\n        return this.uniforms.rotation;\n    }\n    set rotation(value) {\n        this.uniforms.rotation = value;\n    }\n    get twRadiusPercent() {\n        return this.uniforms.twRadius * 200;\n    }\n    set twRadiusPercent(value) {\n        this.uniforms.twRadius = value / 200;\n    }\n    get twAngle() {\n        return this.uniforms.twAngle;\n    }\n    set twAngle(value) {\n        this.uniforms.twAngle = value;\n    }\n    get twRotation() {\n        return this.uniforms.twAngle * (180 / Math.PI);\n    }\n    set twRotation(value) {\n        this.uniforms.twAngle = value * (Math.PI / 180);\n    }\n    get bpRadiusPercent() {\n        return this.uniforms.bpRadius * 200;\n    }\n    set bpRadiusPercent(value) {\n        this.uniforms.bpRadius = value / 200;\n    }\n    get bpStrength() {\n        return this.uniforms.bpStrength;\n    }\n    set bpStrength(value) {\n        this.uniforms.bpStrength = value;\n    }\n    get scale() {\n        // a little hack (we get only x)\n        return this.uniforms.scale[0];\n    }\n    set scale(value) {\n        this.uniforms.scale[1] = this.uniforms.scale[0] = value;\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get pivotX() {\n        return this.uniforms.pivot[0];\n    }\n    set pivotX(value) {\n        this.uniforms.pivot[0] = value;\n    }\n    get pivotY() {\n        return this.uniforms.pivot[1];\n    }\n    set pivotY(value) {\n        this.uniforms.pivot[1] = value;\n    }\n    get translationX() {\n        return this.uniforms.translation[0];\n    }\n    set translationX(value) {\n        this.uniforms.translation[0] = value;\n    }\n    get translationY() {\n        return this.uniforms.translation[1];\n    }\n    set translationY(value) {\n        this.uniforms.translation[1] = value;\n    }\n}\n$5ae15acc2d1ee812$export$e8341be799357874.defaults = {\n    rotation: 0.0,\n    twRadiusPercent: 0,\n    twAngle: 0,\n    bpRadiusPercent: 0,\n    bpStrength: 0,\n    scaleX: 1,\n    scaleY: 1,\n    pivotX: 0.5,\n    pivotY: 0.5,\n    translationX: 0,\n    translationY: 0\n};\n\n\nconst $dfbe319118a6cb9c$export$a55475809cca74a = `\nprecision mediump float;\n\nuniform float time;\nuniform float seed;\nuniform float spread;\nuniform float splashFactor;\nuniform int blend;\nuniform vec2 dimensions;\nuniform vec2 anchor;\nuniform vec3 color;\nuniform bool cut;\nuniform bool textureAlphaBlend;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\n{\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\n\n    fCol.a = max(fCol.a,sCol.a);\n    return fCol;\n}\n\nvec3 splash(vec2 g)\n{\n\tvec2 uv = (12.*(2.*g-1.)*.2) / dimensions;\n\n    float a = abs(atan(uv.x,uv.y) * splashFactor);   \n\tvec3 iuv = vec3(uv.x,uv.y,a);\n\n\tfloat cseed = sin(1.+fract(abs(random(vec2(seed*0.9854,seed*0.3541)))));\n    vec3 uvw = iuv;\n\n\tiuv = 1. - abs(1. - mod(uvw - time*0.1, 2.));\n\t\n    float initLen = length(iuv);\n    float nLen = initLen;\n    float tot = 0.;\n    \n    for (int i=0; i < 12; i++) \n\t{\n\t\tiuv = abs(iuv) / (initLen*initLen) - cseed;\n\t\tnLen = length(iuv);\n\t\ttot += abs(nLen-initLen);\n\t\tinitLen = nLen;\n    }\n    \n    float fc = tot + 1.0;\n\tfc = 1.-smoothstep(fc, fc+1.9, spread/dot(uv,uv));\n\t\n\treturn vec3(1.-fc)*color;\n}\n\nvoid main() {\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n    vec3 splashed = splash(vFilterCoord - anchor);\n\n    if (splashed == vec3(0.0))\n    {\n        if (pixel.a > 0. && !cut)\n        {\n            gl_FragColor = pixel;\n            return;\n        }\n        else if (cut) discard;\n    }\n\n    vec4 splashed4 = vec4(splashed,1.);\n    vec4 blendResult = mix(blender(blend, pixel, splashed4),splashed4,1.-pixel.a);\n    gl_FragColor = (textureAlphaBlend ? blendResult * pixel.a : blendResult);\n}\n`;\n\n\n\n\n\n\nclass $1737f68aeb781d93$export$df3de41f3315cb09 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, seed: seed, spread: spread, splashFactor: splashFactor, color: color, dimX: dimX, dimY: dimY, blend: blend, cut: cut, textureAlphaBlend: textureAlphaBlend, anchorX: anchorX, anchorY: anchorY } = Object.assign({}, $1737f68aeb781d93$export$df3de41f3315cb09.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $dfbe319118a6cb9c$export$a55475809cca74a));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.05,\n            0.05\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            seed: seed,\n            spread: spread,\n            splashFactor: splashFactor,\n            color: color,\n            dimX: dimX,\n            dimY: dimY,\n            blend: blend,\n            cut: cut,\n            textureAlphaBlend: textureAlphaBlend,\n            anchorX: anchorX,\n            anchorY: anchorY\n        });\n        this.zOrder = 5;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get seed() {\n        return this.uniforms.seed;\n    }\n    set seed(value) {\n        this.uniforms.seed = value;\n    }\n    get spread() {\n        return this.uniforms.spread;\n    }\n    set spread(value) {\n        this.uniforms.spread = value;\n    }\n    get splashFactor() {\n        return this.uniforms.splashFactor;\n    }\n    set splashFactor(value) {\n        this.uniforms.splashFactor = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1] + 0.5;\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value - 0.5;\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0] + 0.5;\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value - 0.5;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get cut() {\n        return this.uniforms.cut;\n    }\n    set cut(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.cut = value;\n    }\n    get textureAlphaBlend() {\n        return this.uniforms.textureAlphaBlend;\n    }\n    set textureAlphaBlend(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.textureAlphaBlend = value;\n    }\n}\n$1737f68aeb781d93$export$df3de41f3315cb09.defaults = {\n    time: Math.random() * 2000,\n    color: 0xf00505,\n    seed: 0.1,\n    spread: 5,\n    splashFactor: 2,\n    dimX: 1,\n    dimY: 1,\n    blend: 8,\n    cut: false,\n    textureAlphaBlend: false,\n    anchorX: 0.5,\n    anchorY: 0.5\n};\n\n\nconst $fa5813b787142e29$export$981b7ede7b45eb87 = `#version 300 es\nprecision mediump float;\n\nuniform float progress;\nuniform float magnify;\nuniform int type;\nuniform vec4 inputClamp;\nuniform vec4 inputClampTarget;\nuniform sampler2D uSampler;\nuniform sampler2D uSamplerTarget;\nuniform mat3 filterMatrixInverse;\n\nin vec2 vTextureCoord;\nin vec2 vTextureCoordExtra;\nin vec2 vFilterCoord;\n\nout vec4 outputColor;\n\nconst float PI = 3.14159265358;\n\nfloat getClip(vec2 uv) {\n    return step(3.5,\n       step(inputClampTarget.x, uv.x) +\n       step(inputClampTarget.y, uv.y) +\n       step(uv.x, inputClampTarget.z) +\n       step(uv.y, inputClampTarget.w));\n}\n\nvec4 getFromColor(vec2 uv) {\n    return texture(uSampler,clamp(uv,inputClamp.xy,inputClamp.zw));\n}\n\nvec4 getToColor(vec2 uv) {\n    return texture(uSamplerTarget,clamp(uv,inputClampTarget.xy,inputClampTarget.zw))*getClip(uv);\n}\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 offset(float progress, float x, float theta, float str) {\n    float shifty = str*progress*cos(10.0*(progress+x));\n    return vec2(0, shifty);\n}\n\nvec2 roffset(float progress, float x, float theta, float str) {\n    float shifty = (1.-progress)*str*progress*cos(10.0*(progress+x));\n    return vec2(0, shifty);\n}\n\nfloat noise(vec2 co) {\n    float a = 12.9898;\n    float b = 78.233;\n    float c = 43758.5453;\n    float dt= dot(co.xy * progress, vec2(a, b));\n    float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nvec4 morph(vec2 uv, vec2 uvt) {\n    vec4 ca = getFromColor(uv);\n    vec4 cb = getToColor(uvt);\n    vec2 oa = (((ca.rg+ca.b)*0.5)*2.0-1.0);\n    vec2 ob = (((cb.rg+cb.b)*0.5)*2.0-1.0);\n    vec2 oc = mix(oa,ob,0.5)*0.1;\n    float w0 = progress;\n    float w1 = 1.0-w0;\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(vFilterCoord+(oc*0.4)*w0, 1.0)).xy;\n    vec4 fromcol = getFromColor(sourceMappedCoord);\n    vec4 tocol = getToColor(uvt-oc*w1);\n    float a = mix(ca.a, cb.a, progress);\n    return mix(fromcol, tocol, progress)*a;\n}\n\nvec4 waterdrop(vec2 uv, vec2 uvt) {\n    vec2 dirt = uvt - vec2(.5);\n    float distt = length(dirt);\n    if (distt > progress) {\n        return mix(getFromColor(uv), getToColor(uvt), progress);\n    } else {\n        vec2 shiftuvt = dirt * sin(distt * 60. - progress * 20.);\n        vec2 fuv = (filterMatrixInverse * vec3(vFilterCoord + (shiftuvt*(1.-progress)), 1.0)).xy;\n        return mix(getFromColor(fuv), getToColor(uvt + (shiftuvt*(1.-progress))), progress);\n    }\n}\n\nvec4 dreamy(vec2 uv, vec2 uvt) {\n    return mix(getFromColor(uv + offset(progress, uv.x, 0.0, 0.03)), \n               getToColor(uvt + offset(1.0-progress, uvt.x, 3.14, 0.03)), \n               progress);\n}\n\nvec2 swirluv(vec2 uv) {\n    vec2 xy = 2.* uv - 1.;\n    float fdist = length(xy);\n    if (fdist > 1.) return uv;\n    uv -= vec2( 0.5, 0.5 );\n    float dist = length(uv);\n    if ( dist < 1. ) {\n\t    float pct = (1. - dist);\n\t    float a = ( progress <= 0.5 ) ? mix( 0.0, 1.0, progress*2. ) : mix( 1.0, 0.0, (progress-0.5)*2. );\n\t    float t = pct * pct * a * 5.0 * 3.14159;\n\t    float s = sin( t );\n\t    float c = cos( t );\n\t    uv = vec2(dot(uv,vec2(c,-s)),dot(uv,vec2(s,c)));\n    }\n    uv += vec2(0.5,0.5);\n    return uv;\n}\n\nvec4 swirl(vec2 uv, vec2 uvt) {\n    vec2 suvfrom = swirluv(vFilterCoord);\n    vec2 suvto = swirluv(uvt);\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(suvfrom, 1.0)).xy;\n    vec4 fscol = getFromColor(sourceMappedCoord);\n    vec4 ftcol = getToColor(suvto);\n    return mix( fscol, ftcol, progress );\n}\n\nvec4 crosswarp(vec2 uv, vec2 uvt) {\n    float x = progress;\n    x = smoothstep(.0,1.0,(x*2.0+uv.x-1.0));\n    vec4 rawfscol = getFromColor(uv);\n    vec4 fscol = getFromColor((uv-.5)*(1.-x)+.5);\n    vec4 ftcol = getToColor(uvt);\n    return mix(fscol, ftcol, x)*mix(rawfscol.a,ftcol.a,progress);\n}\n\nvec4 tvnoise(vec2 uv, vec2 uvt) {\n    vec4 noise = vec4(vec3(noise(uv)), 1.);\n    vec4 fscol = getFromColor(uv);\n    vec4 ftcol = getToColor(uvt);\n    float alphamix = mix(fscol.a, ftcol.a, pow(clamp(progress,0.,1.), 0.6));\n    if (progress <= 0.30) {\n        return mix(fscol, noise*alphamix, pow(clamp(progress,0.,1.),0.3-progress));\n    } else if (progress >= 0.70) {\n        return mix(noise*alphamix, ftcol, pow(clamp(progress-0.7,0.,1.),1.-progress));\n    } else {\n        return noise*alphamix;\n    }\n}\n\nvec4 hologram(vec2 uv, vec2 uvt) {\n    float cosProg = 0.5*(cos(2.*PI*progress)+1.);\n    vec4 fscol = getFromColor(uv + roffset(progress, uvt.x, 0., 0.12));\n    vec4 ftcol = getToColor(uvt + roffset(progress, uvt.x, 0., 0.6));\n  \n    float scintensity = max(max(fscol.r,fscol.g),fscol.b);\n    float tcintensity = max(max(ftcol.r,ftcol.g),ftcol.b);\n\n    vec4 tscol = vec4(0.,fscol.g*3.,0.,1.)*scintensity;\n    vec4 ttcol = vec4(ftcol.r*3.,0.,0.,1.)*tcintensity;\n    \n    vec4 iscol = vec4(0.,fscol.g*3.,fscol.b*3.,1.)*scintensity;\n    vec4 itcol = vec4(ftcol.r*3.,0.,ftcol.b*3.,1.)*tcintensity;\n    \n    vec4 smix = mix(mix(fscol,tscol,progress),iscol,1.-cosProg);\n    vec4 tmix = mix(mix(ftcol,ttcol,1.-progress),itcol,1.-cosProg);;\n\n    return mix(smix, \n               tmix, \n               progress);\n}\n\nvec4 wind(vec2 uv, vec2 uvt) {\n    float r = rand(vec2(0, uv.y));\n    float m = smoothstep(0.0, -0.25, uv.x*0.75 + 0.25*r - (progress * 1.25));\n    return mix(\n        getFromColor(uv),\n        getToColor(uvt),\n        m\n    );\n}\n\nvec4 transition(vec2 uv, vec2 uvt) {\n    return mix(\n        getFromColor(uv),\n        getToColor(uvt),\n        progress\n    );\n}\n\nvoid main() {\n    vec4 result;\n    float scale = 1./magnify;\n    vec2 uvExtra = vTextureCoordExtra;\n    uvExtra -= vec2(0.5);\n    uvExtra *= mat2(scale,0.,0.,scale);\n    uvExtra += vec2(0.5);\n\n    // shortcut to prevent a lot of computation if progress is equal to 0 or 1\n    if (progress == 1.) {\n        outputColor = getToColor(uvExtra);\n        return;\n    }\n\n    if (progress == 0.) {\n        outputColor = getFromColor(vTextureCoord);\n        return;\n    }\n\n    if (type <= 1 || type >= 10) {\n        result = transition(vTextureCoord, uvExtra);\n    } else if (type == 2) {\n        result = dreamy(vTextureCoord, uvExtra);\n    } else if (type == 3) {\n        result = swirl(vTextureCoord, uvExtra);\n    } else if (type == 4) {\n        result = waterdrop(vTextureCoord, uvExtra);\n    } else if (type == 5) {\n        result = tvnoise(vTextureCoord, uvExtra);\n    } else if (type == 6) {\n        result = morph(vTextureCoord, uvExtra);\n    } else if (type == 7) {\n        result = crosswarp(vTextureCoord, uvExtra);\n    } else if (type == 8) {\n        result = wind(vTextureCoord, uvExtra);\n    } else if (type == 9) {\n        result = hologram(vTextureCoord, uvExtra);\n    } \n   \n    outputColor = result;\n}\n`;\n\n\n// Custom vertex shader with filter matrix to map for additional sampler\nconst $b20a995bbf43eef6$export$935bdd8d48f63a2e = `#version 300 es\nprecision mediump float;\n\nin vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\nuniform mat3 filterMatrix;\nuniform mat3 targetUVMatrix;\n\nout vec2 vTextureCoord;\nout vec2 vTextureCoordExtra;\nout vec2 vFilterCoord;\n\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n}\n\nvec2 filterTextureCoord( void )\n{\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void)\n{\n\tgl_Position = filterVertexPosition();\n\tvTextureCoord = filterTextureCoord();\n\tvTextureCoordExtra = (targetUVMatrix * vec3(vTextureCoord, 1.0)).xy;\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\n}\n`;\n\n\n\n\n\n\nclass $6d7cfa7b8cdebcda$export$cf7260b11c6fd85d extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { imagePath: imagePath, progress: progress, magnify: magnify, type: type } = Object.assign({}, $6d7cfa7b8cdebcda$export$cf7260b11c6fd85d.defaults, params);\n        const targetSpriteMatrix = new PIXI.Matrix();\n        // using specific vertex shader and fragment shader\n        super((0, $b20a995bbf43eef6$export$935bdd8d48f63a2e), (0, $fa5813b787142e29$export$981b7ede7b45eb87));\n        // vertex uniforms\n        this.uniforms.targetUVMatrix = targetSpriteMatrix;\n        // fragment uniforms\n        this.uniforms.inputClampTarget = new Float32Array([\n            0,\n            0,\n            0,\n            0\n        ]);\n        // to store sprite matrix from the filter manager (and send to vertex)\n        this.targetSpriteMatrix = targetSpriteMatrix;\n        Object.assign(this, {\n            imagePath: (0, $97b1237a45b106ea$export$3bebb302ab08af33)(imagePath),\n            progress: progress,\n            magnify: magnify,\n            type: type\n        });\n        this.zOrder = 1;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    setTMParams(params) {\n        super.setTMParams(params);\n        if (!this.dummy && \"imagePath\" in params) this.assignTexture();\n    }\n    get progress() {\n        return this.uniforms.progress * 100;\n    }\n    set progress(value) {\n        this.uniforms.progress = Math.min(Math.max(value * 0.01, 0), 1);\n    }\n    get magnify() {\n        return this.uniforms.magnify;\n    }\n    set magnify(value) {\n        this.uniforms.magnify = Math.min(Math.max(value, 0.1), 100);\n    }\n    get type() {\n        return this.uniforms.type;\n    }\n    set type(value) {\n        this.uniforms.type = Math.floor(value);\n    }\n    get uSamplerTarget() {\n        return this.uniforms.uSamplerTarget;\n    }\n    set uSamplerTarget(value) {\n        this.uniforms.uSamplerTarget = value;\n    }\n    _setTargetSpriteSize() {\n        const sprite = this.targetSprite;\n        let ratioW = this.placeableImg._texture.baseTexture.realWidth / sprite.texture.baseTexture.realWidth;\n        sprite.width = sprite.texture.baseTexture.realWidth * ratioW;\n        sprite.height = sprite.texture.baseTexture.realHeight * ratioW;\n        sprite.anchor.set(0.5);\n    }\n    assignTexture() {\n        if (this.hasOwnProperty(\"imagePath\")) {\n            let tex = PIXI.Texture.from(this.imagePath);\n            let sprite = new PIXI.Sprite(tex);\n            sprite.renderable = false;\n            this.targetSprite = sprite;\n            // We may need to wait for the texture to be loaded before accessing it's width and height\n            // In such a case register an update listener which should be called when the texture is loaded/becomes valid\n            if (tex.valid) this._setTargetSpriteSize();\n            else tex.on(\"update\", ()=>{\n                this._setTargetSpriteSize();\n            });\n            this.uSamplerTarget = sprite._texture;\n            this.placeableImg.addChild(sprite);\n        }\n    }\n    // override\n    apply(filterManager, input, output, clear) {\n        const targetSprite = this.targetSprite;\n        const tex = targetSprite._texture;\n        if (tex.valid) {\n            if (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n            tex.uvMatrix.update();\n            this.uniforms.uSamplerTarget = tex;\n            this.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite).prepend(tex.uvMatrix.mapCoord);\n            this.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n        }\n        super.apply(filterManager, input, output, clear);\n    }\n    // override\n    destroy() {\n        super.destroy();\n        if (this.placeableImg) this.placeableImg.removeChild(this.targetSprite);\n        this.targetSprite.destroy({\n            children: true,\n            texture: false,\n            baseTexture: false\n        });\n    }\n}\n$6d7cfa7b8cdebcda$export$cf7260b11c6fd85d.defaults = {\n    progress: 0,\n    magnify: 1,\n    type: 1\n};\n\n\nconst $b43cf367df1e5bdb$export$3d2732364cd434b5 = `\nprecision mediump float;\n\nuniform float time;\nuniform float amplitude;\nuniform float dispersion;\nuniform float discardThreshold;\nuniform int blend;\nuniform bool alphaDiscard;\nuniform bool chromatic;\nuniform bool inlay;\nuniform vec2 scale;\nuniform vec3 color;\nuniform vec3 color1;\nuniform vec3 color2;\nuniform vec3 color3;\nuniform vec3 color4;\n\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float MU_3 = 0.333333333334;\n\nfloat rand(vec2 n) { \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat maxRgbIntensity(vec3 col) {\n    return max(max(col.r,col.g),col.b);\n}\n\nfloat colorIntensity(vec3 col) {\n    return clamp((col.r + col.g + col.b)*MU_3,0.,1.);\n}\n\nvec3 blendLinearDual(vec3 base, vec3 blend, float intensity) {\n    if (intensity < dispersion) {\n        return mix(base,blend,pow(abs((1.-dispersion)),clamp(10.*dispersion,1.,3.)));\n    } \n    return mix(blend,mix(blend,base,1.-pow(intensity*dispersion,0.5)),1.-pow(intensity,4.));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float intensity) {\n    return vec3(1.)\n            -((1.-base*(intensity+dispersion))\n            *(1.-blend*clamp(pow(intensity,dispersion),0.,1.)));\n}\n\nfloat blendScreenPure(float base, float blend) {\n\treturn 1.0-((1.0-base)*(1.0-blend));\n}\n\nvec3 blendScreenPure(vec3 base, vec3 blend) {\n\treturn vec3(blendScreenPure(base.r,blend.r),blendScreenPure(base.g,blend.g),blendScreenPure(base.b,blend.b));\n}\n\nvec3 blendMix(vec3 base, vec3 blend) {\n\treturn mix(blendLinearDual(base, blend, smoothstep(0.35,0.6,1.-colorIntensity(blend))),\n\t           blendScreen(base, blend, smoothstep(0.,1.,1.-colorIntensity(blend))),\n\t           smoothstep(0.,1.,colorIntensity((base+blend)*0.5)));\n}\n\nfloat blendColorBurn(float base, float blend) {\n\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\n}\n\nfloat blendColorDodge(float base, float blend) {\n\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\n}\n\nfloat blendVividLight(float base, float blend) {\n\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\n}\n\nvec4 blender(int blend, vec3 scol, vec3 tcol) {\n    if (blend <= 1) {\n        scol = mix(scol, tcol, smoothstep(dispersion, 1., maxRgbIntensity(tcol)));\n    } else if (blend == 2) {\n        scol = blendLinearDual(scol, tcol, maxRgbIntensity(tcol));\n    } else if (blend == 3) {\n        scol = blendLinearDual(scol, tcol, colorIntensity(tcol));\n    } else if (blend == 4) {\n        scol = blendScreen(scol, tcol, maxRgbIntensity(tcol));\n    } else if (blend == 5) {\n        scol = blendScreen(scol, tcol, colorIntensity(tcol));\n    } else if (blend == 6) {\n        scol = blendVividLight(scol,tcol);\n    } else if (blend == 7) {\n        scol = blendColorDodge(scol,tcol);\n    } else if (blend == 8) {\n        scol = blendColorBurn(scol,tcol);\n    } else if (blend == 9) {\n        scol = blendScreen(scol, blendVividLight(scol,tcol), colorIntensity(tcol));\n    } else if (blend == 10) {\n        scol = blendScreen(scol, blendColorDodge(scol,tcol), colorIntensity(tcol));\n    } else if (blend == 11) {\n        scol = blendLinearDual(blendVividLight(scol,tcol), tcol, maxRgbIntensity(tcol));\n    } else if (blend == 12) {\n        scol = blendMix(scol,tcol);\n    } else if (blend == 13) {\n        scol = blendScreenPure(scol,tcol);\n    } else if (blend >= 14) {\n        scol = blendScreenPure(scol,tcol*0.5);\n    }\n\n    return vec4(scol,1.);\n}\n\nfloat noise(vec2 n) {\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) {\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < 5; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec3 fire(in vec4 pixel) {\n    vec3 c1,c2,c3,c4;\n\n    if (chromatic) {\n        c1 = vec3(0.00, 0.50, 0.50);\n    \tc2 = vec3(0.60, 0.35, 0.70);\n    \tc3 = vec3(0.20, 0.90, 1.00);\n    \tc4 = vec3(0.90, 1.00, 0.60); \n    } else if ( any(greaterThan(color,vec3(0.))) ) {\n        c1 = vec3(0.10*color);\n    \tc2 = vec3(0.85*color);\n    \tc3 = vec3(0.35*color);\n    \tc4 = vec3(color);\n    } else {\n        c1 = color1;\n        c2 = color2;\n        c3 = color3;\n        c4 = color4;\n    }\n\n\tconst vec3 c5 = vec3(0.1);\n\tconst vec3 c6 = vec3(0.9);\n\tconst vec2 pivot = vec2(0.5);\n\t\n    vec2 uv = vFilterCoord;\n    uv -= pivot;\n\tvec2 p = uv * mat2(8.*scale.x,0.0,0.0,8.*scale.y);\n\tuv += pivot;\n\n    vec2 r;\n\tvec3 c;\n\tfloat t = time*0.1;\n\tfloat q = fbm(p - t);\n\n\tif (inlay) {\n\t    float sat = pixel.r + pixel.g + pixel.b;\n\t    float sat4 = sat*4.;\n\t    r = vec2(fbm(p + q + t - p.x - p.y - sat), fbm(p + q - t + sat4));\n\t    c = mix(c1, c2, fbm(p + r + sat4)) + mix(c3, c4, 1.4-pixel.rgb) - mix(c5, c6, r.y);\n\t} else {\n\t    r = vec2(fbm(p + q + time - p.x - p.y), fbm(p + q - t));\n\t    c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n\t}\n\t\n\treturn clamp(c,0.,1.);\n}\n\nvoid main() {\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec3 fire = fire(pixel);\n    if (alphaDiscard && all(lessThanEqual(fire,vec3(discardThreshold))))  {\n        discard;\n    }\n\n    vec4 result = blender(blend, pixel.rgb, fire);\n\n\tgl_FragColor = result*pixel.a;\n}\n`;\n\n\n\n\n\n\nclass $792ddf9c96904ba5$export$f5292971f4ab78f9 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, color1: color1, color2: color2, color3: color3, color4: color4, amplitude: amplitude, dispersion: dispersion, blend: blend, scaleX: scaleX, scaleY: scaleY, alphaDiscard: alphaDiscard, discardThreshold: discardThreshold, chromatic: chromatic, inlay: inlay } = Object.assign({}, $792ddf9c96904ba5$export$f5292971f4ab78f9.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $b43cf367df1e5bdb$export$3d2732364cd434b5));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color1 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color2 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color3 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color4 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            color1: color1,\n            color2: color2,\n            color3: color3,\n            color4: color4,\n            amplitude: amplitude,\n            dispersion: dispersion,\n            blend: blend,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            alphaDiscard: alphaDiscard,\n            discardThreshold: discardThreshold,\n            chromatic: chromatic,\n            inlay: inlay\n        });\n        this.zOrder = 145;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get color1() {\n        return PIXI.utils.rgb2hex(this.uniforms.color1);\n    }\n    set color1(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color1);\n    }\n    get color2() {\n        return PIXI.utils.rgb2hex(this.uniforms.color2);\n    }\n    set color2(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color2);\n    }\n    get color3() {\n        return PIXI.utils.rgb2hex(this.uniforms.color3);\n    }\n    set color3(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color3);\n    }\n    get color4() {\n        return PIXI.utils.rgb2hex(this.uniforms.color4);\n    }\n    set color4(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color4);\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get dispersion() {\n        return this.uniforms.dispersion;\n    }\n    set dispersion(value) {\n        this.uniforms.dispersion = value;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n    get discardThreshold() {\n        return this.uniforms.discardThreshold;\n    }\n    set discardThreshold(value) {\n        this.uniforms.discardThreshold = value;\n    }\n    get chromatic() {\n        return this.uniforms.chromatic;\n    }\n    set chromatic(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.chromatic = value;\n    }\n    get inlay() {\n        return this.uniforms.inlay;\n    }\n    set inlay(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.inlay = value;\n    }\n}\n$792ddf9c96904ba5$export$f5292971f4ab78f9.defaults = {\n    time: 0,\n    color: 0x000000,\n    color1: 0x250000,\n    color2: 0xb20000,\n    color3: 0x330000,\n    color4: 0xffe500,\n    amplitude: 1,\n    dispersion: 0.25,\n    blend: 2,\n    scaleX: 1,\n    scaleY: 1,\n    discardThreshold: 0.1,\n    alphaDiscard: false,\n    chromatic: false,\n    inlay: false\n};\n\n\nconst $95d08043b744c79a$export$9f64abe9148df1d = `#version 300 es\nprecision mediump float;\n\nuniform float rotation;\nuniform float twRadius;\nuniform float twAngle;\nuniform float bpRadius;\nuniform float bpStrength;\nuniform float alpha;\nuniform bool alphaDiscard;\n\nuniform bool inverse;\nuniform bool top;\nuniform bool colorize;\nuniform bool repeat;\n\nuniform vec2 scale;\nuniform vec2 translation;\n\nuniform vec3 color;\n\nuniform vec4 inputClamp;\nuniform vec4 inputClampTarget;\n\nuniform sampler2D uSampler;\nuniform sampler2D uSamplerTarget;\n\nin vec2 vTextureCoord;\nin vec2 vTextureCoordExtra;\nin vec2 vFilterCoord;\nin mat3 vTargetUVMatrix;\n\nout vec4 outputColor;\n\nconst float PI = 3.14159265358;\n\nfloat getClip(in vec2 uv) {\n    return step(3.5,\n       step(inputClampTarget.x, uv.x) +\n       step(inputClampTarget.y, uv.y) +\n       step(uv.x, inputClampTarget.z) +\n       step(uv.y, inputClampTarget.w));\n}\n\nvec2 morphing(in vec2 uv) {\n    float dist = length(uv);\n\n    // twist effect\n    if (dist < twRadius) {\n        float ratioDist = (twRadius - dist) / twRadius;\n        float angleMod = ratioDist * ratioDist * twAngle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    }\n\n    // bulge pinch effect\n    if (dist < bpRadius) {\n        float percent = dist / bpRadius;\n        if (bpStrength > 0.) {\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\n        } else {\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\n        }\n    }\n\n    return uv;\n}\n\nvec4 colorization(in vec4 col) {\n    vec3 wcol = col.rgb;\n    if (inverse) {\n        wcol = (vec3(1.0) - wcol) * col.a;\n    }\n    float avg = (wcol.r + wcol.g + wcol.b) / 3.0;\n    return vec4(vec3(color * avg), col.a);\n}\n\nvec2 transform(in vec2 uv) {\n    float angle = -(PI * rotation * 0.005555555555);\n    uv -= 0.5;\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\n    uv = morphing(uv);\n    uv += 0.5;\n\n    return uv;\n}\n\nvec4 getFromColor(in vec2 uv) {\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\n}\n\nvec4 getToColor(in vec2 uv) {\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\n}\n\nvec4 getToColorFract(in vec2 uv) {\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\n}\n\nvoid main() {\n\n    // UV transformations\n    vec2 uvTex = transform(vTextureCoordExtra);\n\n    // get samplers color\n    vec4 icolor = getFromColor(vTextureCoord);\n\n    vec4 tcolor;\n    if(repeat) {\n        tcolor = getToColorFract(uvTex + translation);\n    } else {\n        tcolor = getToColor(uvTex + translation);\n    }\n\n    tcolor.a *= alpha;\n    if(alphaDiscard) tcolor = mix(tcolor, icolor, 1.0 - icolor.a);\n\n    // colorize if necessary\n    if (colorize) {\n        tcolor = colorization(tcolor);\n    }\n\n    vec3 fcolor = tcolor.rgb;\n    if(top && icolor.a > 0.) fcolor = mix(tcolor.rgb, icolor.rgb, 1.0 - tcolor.a);\n    else if(!top) fcolor = mix(icolor.rgb, tcolor.rgb, 1.0 - icolor.a);\n   \n    outputColor = vec4(fcolor, max(tcolor.a, icolor.a));\n}\n`;\n\n\n\n\n\n\n\nclass $14ec92966e5a1c8e$export$96f9417ff369e52 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    tex = null;\n    constructor(params){\n        let { imagePath: imagePath, color: color, colorize: colorize, inverse: inverse, alpha: alpha, alphaDiscard: alphaDiscard, repeat: repeat, top: top, rotation: rotation, twRadiusPercent: twRadiusPercent, twAngle: twAngle, twRotation: twRotation, bpRadiusPercent: bpRadiusPercent, bpStrength: bpStrength, scale: scale, scaleX: scaleX, scaleY: scaleY, translationX: translationX, translationY: translationY, play: play, loop: loop, maintainAspectRatio: maintainAspectRatio, maintainScale: maintainScale } = Object.assign({}, $14ec92966e5a1c8e$export$96f9417ff369e52.defaults, params);\n        const targetSpriteMatrix = new PIXI.Matrix();\n        // using specific vertex shader and fragment shader\n        super((0, $b20a995bbf43eef6$export$935bdd8d48f63a2e), (0, $95d08043b744c79a$export$9f64abe9148df1d));\n        // vertex uniforms\n        this.uniforms.targetUVMatrix = targetSpriteMatrix;\n        // fragment uniforms\n        this.uniforms.inputClampTarget = new Float32Array([\n            0,\n            0,\n            0,\n            0\n        ]);\n        this.uniforms.color = new Float32Array([\n            0.0,\n            0.0,\n            0.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.translation = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        // to store sprite matrix from the filter manager (and send to vertex)\n        this.targetSpriteMatrix = targetSpriteMatrix;\n        Object.assign(this, {\n            imagePath: (0, $97b1237a45b106ea$export$3bebb302ab08af33)(imagePath),\n            color: color,\n            colorize: colorize,\n            inverse: inverse,\n            alpha: alpha,\n            alphaDiscard: alphaDiscard,\n            repeat: repeat,\n            top: top,\n            rotation: rotation,\n            twRadiusPercent: twRadiusPercent,\n            twAngle: twAngle,\n            twRotation: twRotation,\n            bpRadiusPercent: bpRadiusPercent,\n            bpStrength: bpStrength,\n            scale: scale,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            translationX: translationX,\n            translationY: translationY,\n            play: play,\n            loop: loop,\n            maintainAspectRatio: maintainAspectRatio,\n            maintainScale: maintainScale\n        });\n        this.zOrder = 0;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    setTMParams(params) {\n        super.setTMParams(params);\n        if (!this.dummy && \"imagePath\" in params) this.assignTexture();\n    }\n    _play = true;\n    _loop = true;\n    _maintainAspectRatio = false;\n    _maintainScale = false;\n    get play() {\n        return this._play;\n    }\n    set play(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._play = value;\n            this._playVideo(this._play);\n        }\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._loop = value;\n            this._playVideo(this._play);\n        }\n    }\n    get maintainAspectRatio() {\n        return this._maintainAspectRatio;\n    }\n    set maintainAspectRatio(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainAspectRatio = value;\n    }\n    get maintainScale() {\n        return this._maintainScale;\n    }\n    set maintainScale(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainScale = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get colorize() {\n        return this.uniforms.colorize;\n    }\n    set colorize(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.colorize = value;\n    }\n    get inverse() {\n        return this.uniforms.inverse;\n    }\n    set inverse(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.inverse = value;\n    }\n    get alpha() {\n        return this.uniforms.alpha;\n    }\n    set alpha(value) {\n        this.uniforms.alpha = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n    get repeat() {\n        return this.uniforms.repeat;\n    }\n    set repeat(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.repeat = value;\n    }\n    get top() {\n        return this.uniforms.top;\n    }\n    set top(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.top = value;\n    }\n    get rotation() {\n        return this.uniforms.rotation;\n    }\n    set rotation(value) {\n        this.uniforms.rotation = value;\n    }\n    get twRadiusPercent() {\n        return this.uniforms.twRadius * 200;\n    }\n    set twRadiusPercent(value) {\n        this.uniforms.twRadius = value / 200;\n    }\n    get twAngle() {\n        return this.uniforms.twAngle;\n    }\n    set twAngle(value) {\n        this.uniforms.twAngle = value;\n    }\n    get twRotation() {\n        return this.uniforms.twAngle * (180 / Math.PI);\n    }\n    set twRotation(value) {\n        this.uniforms.twAngle = value * (Math.PI / 180);\n    }\n    get bpRadiusPercent() {\n        return this.uniforms.bpRadius * 200;\n    }\n    set bpRadiusPercent(value) {\n        this.uniforms.bpRadius = value / 200;\n    }\n    get bpStrength() {\n        return this.uniforms.bpStrength;\n    }\n    set bpStrength(value) {\n        this.uniforms.bpStrength = value;\n    }\n    get scale() {\n        // a little hack (we get only x)\n        return this.uniforms.scale[0];\n    }\n    set scale(value) {\n        this.uniforms.scale[1] = this.uniforms.scale[0] = value;\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get translationX() {\n        return this.uniforms.translation[0];\n    }\n    set translationX(value) {\n        this.uniforms.translation[0] = value;\n    }\n    get translationY() {\n        return this.uniforms.translation[1];\n    }\n    set translationY(value) {\n        this.uniforms.translation[1] = value;\n    }\n    get uSamplerTarget() {\n        return this.uniforms.uSamplerTarget;\n    }\n    set uSamplerTarget(value) {\n        this.uniforms.uSamplerTarget = value;\n    }\n    async _playVideo(value) {\n        // Play if baseTexture resource is a video\n        if (this.tex) {\n            const source = getProperty(this.tex, \"baseTexture.resource.source\");\n            if (source && source.tagName === \"VIDEO\") {\n                if (isNaN(source.duration)) await new Promise((resolve)=>{\n                    source.onloadedmetadata = ()=>resolve();\n                });\n                if (value) game.video.play(source, {\n                    loop: this._loop,\n                    volume: 0\n                });\n                else game.video.stop(source);\n            }\n        }\n    }\n    assignTexture() {\n        if (this.hasOwnProperty(\"imagePath\")) {\n            // Destroy the previous sprite\n            if (this.targetSprite && !this.targetSprite.destroyed) this.targetSprite.destroy({\n                children: true,\n                texture: false,\n                baseTexture: false\n            });\n            this.tex = PIXI.Texture.from(this.imagePath);\n            let sprite = new PIXI.Sprite(this.tex);\n            sprite.renderable = false;\n            if (this.placeableImg._texture) {\n                sprite.width = this.placeableImg._texture.baseTexture.realWidth;\n                sprite.height = this.placeableImg._texture.baseTexture.realHeight;\n                sprite.anchor.set(0.5);\n            } else {\n                sprite.width = this.placeableImg.width;\n                sprite.height = this.placeableImg.height;\n            }\n            this.targetSprite = sprite;\n            this.uSamplerTarget = sprite._texture;\n            this.placeableImg.addChild(sprite);\n            this._playVideo(this._play);\n        }\n    }\n    // override\n    apply(filterManager, input, output, clear) {\n        const targetSprite = this.targetSprite;\n        const tex = targetSprite._texture;\n        if (tex.valid) {\n            if (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n            tex.uvMatrix.update();\n            this.uniforms.uSamplerTarget = tex;\n            if (this.maintainScale) {\n                let pScale = targetSprite.parent.scale;\n                targetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\n            }\n            let w = targetSprite.worldTransform;\n            if (this.maintainAspectRatio) {\n                let scale = Math.min(w.a, w.d);\n                w.set(scale, w.b, w.c, scale, w.tx, w.ty);\n            }\n            this.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\n            this.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n        }\n        super.apply(filterManager, input, output, clear);\n    }\n    // override\n    destroy() {\n        super.destroy();\n        if (!this.targetSprite.destroyed) this.targetSprite.destroy({\n            children: true,\n            texture: false,\n            baseTexture: false\n        });\n    }\n}\n$14ec92966e5a1c8e$export$96f9417ff369e52.defaults = {\n    color: 0x000000,\n    colorize: false,\n    inverse: false,\n    alpha: 1,\n    alphaDiscard: false,\n    repeat: false,\n    top: false,\n    rotation: 0.0,\n    twRadiusPercent: 0,\n    twAngle: 0,\n    bpRadiusPercent: 0,\n    bpStrength: 0,\n    scaleX: 1,\n    scaleY: 1,\n    translationX: 0,\n    translationY: 0,\n    play: true,\n    loop: true,\n    maintainAspectRatio: false,\n    maintainScale: false\n};\n\n\nconst $2b583b7eab61925d$export$3729c40aa34df6ff = `#version 300 es\nprecision mediump float;\n\nuniform float rotation;\nuniform float twRadius;\nuniform float twAngle;\nuniform float bpRadius;\nuniform float bpStrength;\nuniform float alpha;\n\nuniform bool repeat;\n\nuniform vec2 scale;\nuniform vec2 translation;\n\nuniform vec4 inputClamp;\nuniform vec4 inputClampTarget;\n\nuniform sampler2D uSampler;\nuniform sampler2D uSamplerTarget;\n\nin vec2 vTextureCoord;\nin vec2 vTextureCoordExtra;\nin vec2 vFilterCoord;\nin mat3 vTargetUVMatrix;\n\nout vec4 outputColor;\n\nconst float PI = 3.14159265358;\n\nfloat getClip(in vec2 uv) {\n    return step(3.5,\n       step(inputClampTarget.x, uv.x) +\n       step(inputClampTarget.y, uv.y) +\n       step(uv.x, inputClampTarget.z) +\n       step(uv.y, inputClampTarget.w));\n}\n\nvec2 morphing(in vec2 uv) {\n    float dist = length(uv);\n\n    // twist effect\n    if (dist < twRadius) {\n        float ratioDist = (twRadius - dist) / twRadius;\n        float angleMod = ratioDist * ratioDist * twAngle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    }\n\n    // bulge pinch effect\n    if (dist < bpRadius) {\n        float percent = dist / bpRadius;\n        if (bpStrength > 0.) {\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\n        } else {\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\n        }\n    }\n\n    return uv;\n}\n\nvec2 transform(in vec2 uv) {\n    float angle = -(PI * rotation * 0.005555555555);\n    uv -= 0.5;\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\n    uv = morphing(uv);\n    uv += 0.5;\n\n    return uv;\n}\n\nvec4 getFromColor(in vec2 uv) {\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\n}\n\nvec4 getToColor(in vec2 uv) {\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\n}\n\nvec4 getToColorFract(in vec2 uv) {\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\n}\n\nvoid main() {\n\n    // UV transformations\n    vec2 uvTex = transform(vTextureCoordExtra);\n\n    // get samplers color\n    vec4 icolor = getFromColor(vTextureCoord);\n\n    vec4 tcolor;\n    if(repeat) tcolor = getToColorFract(uvTex + translation);\n    else tcolor = getToColor(uvTex + translation);\n\n    outputColor = icolor * (tcolor.a * alpha);\n}\n`;\n\n\n\n\n\n\n\nclass $756e6c880a697f93$export$4569ea13832ce134 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    tex = null;\n    constructor(params){\n        let { imagePath: imagePath, alpha: alpha, repeat: repeat, rotation: rotation, twRadiusPercent: twRadiusPercent, twAngle: twAngle, twRotation: twRotation, bpRadiusPercent: bpRadiusPercent, bpStrength: bpStrength, scale: scale, scaleX: scaleX, scaleY: scaleY, translationX: translationX, translationY: translationY, play: play, loop: loop, maintainAspectRatio: maintainAspectRatio, maintainScale: maintainScale } = Object.assign({}, $756e6c880a697f93$export$4569ea13832ce134.defaults, params);\n        const targetSpriteMatrix = new PIXI.Matrix();\n        // using specific vertex shader and fragment shader\n        super((0, $b20a995bbf43eef6$export$935bdd8d48f63a2e), (0, $2b583b7eab61925d$export$3729c40aa34df6ff));\n        // vertex uniforms\n        this.uniforms.targetUVMatrix = targetSpriteMatrix;\n        // fragment uniforms\n        this.uniforms.inputClampTarget = new Float32Array([\n            0,\n            0,\n            0,\n            0\n        ]);\n        this.uniforms.color = new Float32Array([\n            0.0,\n            0.0,\n            0.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.translation = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        // to store sprite matrix from the filter manager (and send to vertex)\n        this.targetSpriteMatrix = targetSpriteMatrix;\n        Object.assign(this, {\n            imagePath: (0, $97b1237a45b106ea$export$3bebb302ab08af33)(imagePath),\n            alpha: alpha,\n            repeat: repeat,\n            rotation: rotation,\n            twRadiusPercent: twRadiusPercent,\n            twAngle: twAngle,\n            twRotation: twRotation,\n            bpRadiusPercent: bpRadiusPercent,\n            bpStrength: bpStrength,\n            scale: scale,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            translationX: translationX,\n            translationY: translationY,\n            play: play,\n            loop: loop,\n            maintainAspectRatio: maintainAspectRatio,\n            maintainScale: maintainScale\n        });\n        this.zOrder = 0;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    setTMParams(params) {\n        super.setTMParams(params);\n        if (!this.dummy && \"imagePath\" in params) this.assignTexture();\n    }\n    _play = true;\n    _loop = true;\n    _maintainAspectRatio = false;\n    _maintainScale = false;\n    get play() {\n        return this._play;\n    }\n    set play(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._play = value;\n            this._playVideo(this._play);\n        }\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._loop = value;\n            this._playVideo(this._play);\n        }\n    }\n    get maintainAspectRatio() {\n        return this._maintainAspectRatio;\n    }\n    set maintainAspectRatio(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainAspectRatio = value;\n    }\n    get maintainScale() {\n        return this._maintainScale;\n    }\n    set maintainScale(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainScale = value;\n    }\n    get alpha() {\n        return this.uniforms.alpha;\n    }\n    set alpha(value) {\n        this.uniforms.alpha = value;\n    }\n    get repeat() {\n        return this.uniforms.repeat;\n    }\n    set repeat(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.repeat = value;\n    }\n    get rotation() {\n        return this.uniforms.rotation;\n    }\n    set rotation(value) {\n        this.uniforms.rotation = value;\n    }\n    get twRadiusPercent() {\n        return this.uniforms.twRadius * 200;\n    }\n    set twRadiusPercent(value) {\n        this.uniforms.twRadius = value / 200;\n    }\n    get twAngle() {\n        return this.uniforms.twAngle;\n    }\n    set twAngle(value) {\n        this.uniforms.twAngle = value;\n    }\n    get twRotation() {\n        return this.uniforms.twAngle * (180 / Math.PI);\n    }\n    set twRotation(value) {\n        this.uniforms.twAngle = value * (Math.PI / 180);\n    }\n    get bpRadiusPercent() {\n        return this.uniforms.bpRadius * 200;\n    }\n    set bpRadiusPercent(value) {\n        this.uniforms.bpRadius = value / 200;\n    }\n    get bpStrength() {\n        return this.uniforms.bpStrength;\n    }\n    set bpStrength(value) {\n        this.uniforms.bpStrength = value;\n    }\n    get scale() {\n        // a little hack (we get only x)\n        return this.uniforms.scale[0];\n    }\n    set scale(value) {\n        this.uniforms.scale[1] = this.uniforms.scale[0] = value;\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get translationX() {\n        return this.uniforms.translation[0];\n    }\n    set translationX(value) {\n        this.uniforms.translation[0] = value;\n    }\n    get translationY() {\n        return this.uniforms.translation[1];\n    }\n    set translationY(value) {\n        this.uniforms.translation[1] = value;\n    }\n    get uSamplerTarget() {\n        return this.uniforms.uSamplerTarget;\n    }\n    set uSamplerTarget(value) {\n        this.uniforms.uSamplerTarget = value;\n    }\n    async _playVideo(value) {\n        // Play if baseTexture resource is a video\n        if (this.tex) {\n            const source = getProperty(this.tex, \"baseTexture.resource.source\");\n            if (source && source.tagName === \"VIDEO\") {\n                if (isNaN(source.duration)) await new Promise((resolve)=>{\n                    source.onloadedmetadata = ()=>resolve();\n                });\n                if (value) game.video.play(source, {\n                    loop: this._loop,\n                    volume: 0\n                });\n                else game.video.stop(source);\n            }\n        }\n    }\n    assignTexture() {\n        if (this.hasOwnProperty(\"imagePath\")) {\n            // Destroy the previous sprite\n            if (this.targetSprite && !this.targetSprite.destroyed) this.targetSprite.destroy({\n                children: true,\n                texture: false,\n                baseTexture: false\n            });\n            this.tex = PIXI.Texture.from(this.imagePath);\n            let sprite = new PIXI.Sprite(this.tex);\n            sprite.renderable = false;\n            if (this.placeableImg._texture) {\n                sprite.width = this.placeableImg._texture.baseTexture.realWidth;\n                sprite.height = this.placeableImg._texture.baseTexture.realHeight;\n                sprite.anchor.set(0.5);\n            } else {\n                sprite.width = this.placeableImg.width;\n                sprite.height = this.placeableImg.height;\n            }\n            this.targetSprite = sprite;\n            this.uSamplerTarget = sprite._texture;\n            this.placeableImg.addChild(sprite);\n            this._playVideo(this._play);\n        }\n    }\n    // override\n    apply(filterManager, input, output, clear) {\n        const targetSprite = this.targetSprite;\n        const tex = targetSprite._texture;\n        if (tex.valid) {\n            if (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n            tex.uvMatrix.update();\n            this.uniforms.uSamplerTarget = tex;\n            if (this.maintainScale) {\n                let pScale = targetSprite.parent.scale;\n                targetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\n            }\n            let w = targetSprite.worldTransform;\n            if (this.maintainAspectRatio) {\n                let scale = Math.min(w.a, w.d);\n                w.set(scale, w.b, w.c, scale, w.tx, w.ty);\n            }\n            this.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\n            this.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n        }\n        super.apply(filterManager, input, output, clear);\n    }\n    // override\n    destroy() {\n        super.destroy();\n        if (!this.targetSprite.destroyed) this.targetSprite.destroy({\n            children: true,\n            texture: false,\n            baseTexture: false\n        });\n    }\n}\n$756e6c880a697f93$export$4569ea13832ce134.defaults = {\n    alpha: 1,\n    repeat: false,\n    rotation: 0.0,\n    twRadiusPercent: 0,\n    twAngle: 0,\n    bpRadiusPercent: 0,\n    bpStrength: 0,\n    scaleX: 1,\n    scaleY: 1,\n    translationX: 0,\n    translationY: 0,\n    play: true,\n    loop: true,\n    maintainAspectRatio: false,\n    maintainScale: false\n};\n\n\n\n\nclass $66619a9ab494ce98$export$c3ce4d77f1074b4d extends PIXI.filters.ColorReplaceFilter {\n    constructor(params){\n        super();\n        this.originalColor = [\n            1,\n            0,\n            0\n        ];\n        this.newColor = [\n            0,\n            1,\n            0\n        ];\n        this.epsilon = 0.7;\n        this.zOrder = 100;\n        this.animating = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\n\n\nconst $21b728704648605f$export$711d0b0b05d4a93a = `\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec3 tint;\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    float lesser = min(color.g,color.b);\n    float bigger = max(color.g,color.b);\n    if ((bigger - lesser < 0.1) && (color.r > 1.5 * bigger)) {\n        float primary = color.r;\n        float range = primary - lesser;\n        color.r = lesser + range * tint.r;\n        color.g = lesser + range * tint.g;\n        color.b = lesser + range * tint.b;\n    }\n    gl_FragColor = color;\n}`;\n\n\nclass $4896edd1e4c7b975$export$1ee8d69885ee6ad1 extends (0, $44fa44dcb802915a$export$c042bd0ff4d3251b) {\n    constructor(params){\n        super((0, $15c633ba44c21f75$export$c6eb01d07cc2e1e8), (0, $21b728704648605f$export$711d0b0b05d4a93a));\n        this.tint = [\n            1,\n            0,\n            0\n        ];\n        this.zOrder = 100;\n        this.animating = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get tint() {\n        return this.uniforms.tint;\n    }\n    set tint(value) {\n        this.uniforms.tint = value;\n    }\n}\n\n\n\nconst $ff7eec2964ce8415$export$19612c32a2f7f4cd = {\n    MAIN: \"tmfx-main\",\n    TEMPLATE: \"tmfx-template\"\n};\nvar $ff7eec2964ce8415$export$7afd9c1079ecedf7 = [];\nlet $ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"bevel\",\n        filterId: \"bevel\",\n        rotation: 0,\n        thickness: 5,\n        lightColor: 0xff0000,\n        lightAlpha: 0.8,\n        shadowColor: 0x00ff00,\n        shadowAlpha: 0.5,\n        animated: {\n            rotation: {\n                active: true,\n                clockWise: true,\n                loopDuration: 1600,\n                animType: \"syncRotation\"\n            }\n        }\n    }\n];\nvar $ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"bevel\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"adjustment\",\n        filterId: \"adjustment\",\n        saturation: 1.5,\n        brightness: 1.5,\n        contrast: 2,\n        gamma: 2,\n        red: 4,\n        green: 0.25,\n        blue: 0.25,\n        alpha: 1,\n        animated: {\n            alpha: {\n                active: true,\n                loopDuration: 5000,\n                animType: \"syncCosOscillation\",\n                val1: 0.15,\n                val2: 1\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"adjustment\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"shadow\",\n        filterId: \"dropshadow\",\n        rotation: 35,\n        blur: 2,\n        quality: 5,\n        distance: 20,\n        alpha: 0.7,\n        padding: 10,\n        shadowOnly: false,\n        color: 0x000000,\n        animated: {\n            blur: {\n                active: true,\n                loopDuration: 1500,\n                animType: \"syncCosOscillation\",\n                val1: 2,\n                val2: 3\n            },\n            rotation: {\n                active: true,\n                loopDuration: 150,\n                animType: \"syncSinOscillation\",\n                val1: 33,\n                val2: 35\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"dropshadow\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"outline\",\n        filterId: \"outline\",\n        padding: 10,\n        color: 0xee6035,\n        thickness: 1,\n        quality: 5,\n        animated: {\n            thickness: {\n                active: true,\n                loopDuration: 800,\n                animType: \"syncCosOscillation\",\n                val1: 1,\n                val2: 6\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"outline\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"glow\",\n        filterId: \"glow\",\n        outerStrength: 7,\n        innerStrength: 0,\n        color: 0x006000,\n        quality: 0.5,\n        padding: 10,\n        animated: {\n            color: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"colorOscillation\",\n                val1: 0x003000,\n                val2: 0x00ff00\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"glow\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xbloom\",\n        filterId: \"bloom\",\n        threshold: 0.35,\n        bloomScale: 0,\n        brightness: 1,\n        blur: 0.1,\n        padding: 10,\n        quality: 15,\n        blendMode: 0,\n        animated: {\n            bloomScale: {\n                active: true,\n                loopDuration: 2000,\n                animType: \"syncCosOscillation\",\n                val1: 0,\n                val2: 2.1\n            },\n            threshold: {\n                active: false,\n                loopDuration: 1000,\n                animType: \"syncCosOscillation\",\n                val1: 0.0,\n                val2: 1.9\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"bloom\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"distortion\",\n        filterId: \"distortion\",\n        maskPath: \"modules/tokenmagic/fx/assets/distortion-1.png\",\n        maskSpriteScaleX: 5,\n        maskSpriteScaleY: 5,\n        padding: 20,\n        animated: {\n            maskSpriteX: {\n                active: true,\n                speed: 0.05,\n                animType: \"move\"\n            },\n            maskSpriteY: {\n                active: true,\n                speed: 0.07,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"distortion\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"oldfilm\",\n        filterId: \"oldfilm\",\n        sepia: 0.6,\n        noise: 0.2,\n        noiseSize: 1.0,\n        scratch: 0.8,\n        scratchDensity: 0.5,\n        scratchWidth: 1.2,\n        vignetting: 0.9,\n        vignettingAlpha: 0.6,\n        vignettingBlur: 0.2,\n        animated: {\n            seed: {\n                active: true,\n                animType: \"randomNumber\",\n                val1: 0,\n                val2: 1\n            },\n            vignetting: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2000,\n                val1: 0.2,\n                val2: 0.4\n            }\n        }\n    },\n    {\n        filterType: \"outline\",\n        filterId: \"oldfilm\",\n        color: 0x000000,\n        thickness: 0\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"oldfilm\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"twist\",\n        filterId: \"twist\",\n        radiusPercent: 120,\n        angle: 0,\n        animated: {\n            angle: {\n                active: true,\n                animType: \"sinOscillation\",\n                loopDuration: 10000,\n                val1: -0.6 * Math.PI,\n                val2: 0.6 * Math.PI\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"twist\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"bulgepinch\",\n        filterId: \"bulge\",\n        padding: 150,\n        strength: 0,\n        zIndex: 2,\n        radiusPercent: 200,\n        animated: {\n            strength: {\n                active: true,\n                animType: \"cosOscillation\",\n                loopDuration: 2000,\n                val1: 0,\n                val2: 0.45\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"bulge\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"blur\",\n        filterId: \"blur\",\n        padding: 10,\n        quality: 4.0,\n        blur: 0,\n        blurX: 0,\n        blurY: 0,\n        animated: {\n            blurX: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 500,\n                val1: 0,\n                val2: 6\n            },\n            blurY: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 750,\n                val1: 0,\n                val2: 6\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"blur\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"zoomblur\",\n        filterId: \"zoomblur\",\n        strength: 0.15,\n        innerRadiusPercent: 65,\n        radiusPercent: 100,\n        padding: 30,\n        animated: {\n            innerRadiusPercent: {\n                active: true,\n                animType: \"sinOscillation\",\n                loopDuration: 500,\n                val1: 65,\n                val2: 75\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"zoomblur\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"shockwave\",\n        filterId: \"shockwave\",\n        time: 0,\n        amplitude: 8,\n        wavelength: 75,\n        radius: 500,\n        brightness: 1.5,\n        speed: 25,\n        padding: 0,\n        animated: {\n            time: {\n                animType: \"cosOscillation\",\n                active: true,\n                loopDuration: 1800,\n                val1: 0,\n                val2: 10\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"shockwave\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"zapshadow\",\n        alphaTolerance: 0.45\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"zapshadow\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"ray\",\n        filterId: \"rays\",\n        time: 0,\n        color: 0xcf8000,\n        alpha: 0.5,\n        divisor: 32,\n        anchorX: 0,\n        anchorY: 0,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"rays\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"fog\",\n        filterId: \"fog\",\n        color: 0x000000,\n        density: 0.65,\n        time: 0,\n        dimX: 1,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 2.2,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"fog\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"fumes\",\n        filterId: \"fumes\",\n        color: 0x808080,\n        time: 0,\n        blend: 8,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"fumes\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"electric\",\n        filterId: \"electric\",\n        color: 0xffffff,\n        time: 0,\n        blend: 1,\n        intensity: 5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"electric\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"fire\",\n        filterId: \"fire\",\n        intensity: 1,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0024,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                loopDuration: 15000,\n                val1: 0.8,\n                val2: 2,\n                animType: \"syncCosOscillation\"\n            },\n            amplitude: {\n                active: true,\n                loopDuration: 4400,\n                val1: 1,\n                val2: 1.4,\n                animType: \"syncCosOscillation\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"fire\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"waves\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.015,\n        frequency: 120,\n        color: 0xffffff,\n        maxIntensity: 2.5,\n        minIntensity: 0.9,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            },\n            anchorX: {\n                active: false,\n                val1: 0.15,\n                val2: 0.85,\n                animType: \"syncChaoticOscillation\",\n                loopDuration: 20000\n            },\n            anchorY: {\n                active: false,\n                val1: 0.15,\n                val2: 0.85,\n                animType: \"syncSinOscillation\",\n                loopDuration: 20000\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"waves\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"flood\",\n        filterId: \"flood\",\n        time: 0,\n        color: 0x0020bb,\n        billowy: 0.43,\n        tintIntensity: 0.72,\n        glint: 0.31,\n        scale: 70,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0006,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"flood\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"smoke\",\n        filterId: \"smoke\",\n        color: 0x5099dd,\n        time: 0,\n        blend: 2,\n        dimX: 0.1,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"smoke\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"images\",\n        filterId: \"images\",\n        time: 0,\n        nbImage: 4,\n        alphaImg: 1.0,\n        alphaChr: 0.0,\n        blend: 4,\n        ampX: 0.1,\n        ampY: 0.1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"images\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"images\",\n        filterId: \"chaos-images\",\n        time: 0,\n        nbImage: 4,\n        alphaImg: 1.0,\n        alphaChr: 0.0,\n        blend: 4,\n        ampX: 0.1,\n        ampY: 0.1,\n        padding: 80,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            },\n            ampX: {\n                active: true,\n                val1: 0.0,\n                val2: 0.3,\n                chaosFactor: 0.03,\n                animType: \"syncChaoticOscillation\",\n                loopDuration: 2000\n            },\n            ampY: {\n                active: true,\n                val1: 0.0,\n                val2: 0.3,\n                chaosFactor: 0.04,\n                animType: \"syncChaoticOscillation\",\n                loopDuration: 1650\n            },\n            alphaChr: {\n                active: true,\n                animType: \"randomNumberPerLoop\",\n                val1: 0.0,\n                val2: 1,\n                loopDuration: 250\n            },\n            alphaImg: {\n                active: true,\n                animType: \"randomNumberPerLoop\",\n                val1: 0.8,\n                val2: 1,\n                loopDuration: 250\n            },\n            nbImage: {\n                active: true,\n                val1: 1,\n                val2: 9,\n                animType: \"syncSinOscillation\",\n                loopDuration: 1400\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"chaos-images\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"images\",\n        filterId: \"spectral-images\",\n        time: 0,\n        blend: 4,\n        nbImage: 4,\n        padding: 100,\n        alphaImg: 0.5,\n        alphaChr: 0.0,\n        ampX: 0.1,\n        ampY: 0.1,\n        animated: {\n            time: {\n                speed: 0.001,\n                animType: \"move\"\n            },\n            ampX: {\n                val1: 0,\n                val2: 0.22,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2500\n            },\n            ampY: {\n                val1: 0,\n                val2: 0.24,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2500,\n                pauseBetweenDuration: 2500\n            },\n            alphaChr: {\n                val1: 1,\n                val2: 0,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2500\n            },\n            alphaImg: {\n                val1: 0.2,\n                val2: 0.8,\n                animType: \"syncSinOscillation\",\n                loopDuration: 2500\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"spectral-images\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"hexa-field\",\n        shieldType: 2,\n        gridPadding: 1.5,\n        color: 0xcc00cc,\n        time: 0,\n        blend: 3,\n        intensity: 1,\n        lightAlpha: 0.5,\n        lightSize: 0.5,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"hexa-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"fire-field\",\n        shieldType: 1,\n        gridPadding: 2,\n        color: 0xe58550,\n        time: 0,\n        blend: 2,\n        intensity: 1.15,\n        lightAlpha: 2,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"fire-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"smoke-field\",\n        shieldType: 3,\n        gridPadding: 1.5,\n        color: 0x60cc70,\n        time: 0,\n        blend: 2,\n        intensity: 0.9,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"smoke-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"earth-field\",\n        shieldType: 4,\n        gridPadding: 2,\n        color: 0xbb9070,\n        time: 0,\n        blend: 1,\n        intensity: 1.25,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"earth-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"earth-field-top\",\n        shieldType: 5,\n        gridPadding: 3,\n        color: 0xaaaaaa,\n        time: 0,\n        blend: 5,\n        intensity: 1.9,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        zIndex: 5,\n        chromatic: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"earth-field-top\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"air-field\",\n        shieldType: 6,\n        gridPadding: 1.2,\n        color: 0x7090aa,\n        time: 0,\n        blend: 14,\n        intensity: 1,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"air-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"magic-field\",\n        shieldType: 7,\n        gridPadding: 1,\n        color: 0xffffff,\n        time: 0,\n        blend: 10,\n        intensity: 0.8,\n        lightAlpha: 1,\n        lightSize: 0.45,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"magic-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"chromatic-field\",\n        shieldType: 8,\n        gridPadding: 2,\n        color: 0xaaaaaa,\n        time: 0,\n        blend: 0,\n        intensity: 1,\n        lightAlpha: 0,\n        lightSize: 0,\n        scale: 1,\n        radius: 1,\n        chromatic: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0045,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"chromatic-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"water-field\",\n        shieldType: 9,\n        gridPadding: 1.2,\n        color: 0x20bbee,\n        time: 0,\n        blend: 4,\n        intensity: 1,\n        lightAlpha: 0.7,\n        lightSize: 0.5,\n        scale: 0.6,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"water-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"evil-field\",\n        shieldType: 9,\n        gridPadding: 2,\n        color: 0xff3010,\n        time: 0,\n        blend: 5,\n        intensity: 1,\n        lightAlpha: 4,\n        lightSize: 0.8,\n        scale: 0.5,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            lightSize: {\n                val1: 0.4,\n                val2: 1.5,\n                animType: \"syncCosOscillation\",\n                loopDuration: 5000\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"evil-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"grid-field\",\n        shieldType: 11,\n        gridPadding: 2,\n        color: 0x00cccc,\n        time: 0,\n        blend: 2,\n        intensity: 1,\n        lightAlpha: 1,\n        lightSize: 0.3,\n        scale: 0.5,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"grid-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"warp-field\",\n        shieldType: 12,\n        gridPadding: 2,\n        color: 0xffffff,\n        time: 0,\n        blend: 2,\n        intensity: 1,\n        lightAlpha: 0.8,\n        lightSize: 0.5,\n        scale: 0.9,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"warp-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"color-field\",\n        shieldType: 13,\n        gridPadding: 2,\n        color: 0x00cc00,\n        time: 0,\n        blend: 14,\n        intensity: 1,\n        lightAlpha: 0,\n        lightSize: 0,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"color-field\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"sunburst\",\n        time: 0,\n        color: 0xffbb00,\n        blend: 9,\n        dimX: 1,\n        dimY: 1,\n        anchorX: 0,\n        anchorY: 0,\n        divisor: 36,\n        intensity: 4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            anchorX: {\n                animType: \"syncCosOscillation\",\n                loopDuration: 6000,\n                val1: 0.4,\n                val2: 0.6\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"sunburst\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"clover\",\n        time: 0,\n        color: 0x00ff00,\n        blend: 9,\n        dimX: 0.05,\n        dimY: 0.05,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        divisor: 4,\n        intensity: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            anchorX: {\n                animType: \"syncCosOscillation\",\n                loopDuration: 6000,\n                val1: 0.4,\n                val2: 0.6\n            },\n            anchorY: {\n                animType: \"syncSinOscillation\",\n                loopDuration: 6000,\n                val1: 0.4,\n                val2: 0.6\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"clover\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"scan\",\n        time: 0,\n        color: 0xffffff,\n        blend: 5,\n        dimX: 20,\n        dimY: 20,\n        anchorX: 0.5,\n        anchorY: 0,\n        divisor: 8,\n        intensity: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"scan\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"blue-rays\",\n        time: 0,\n        color: 0x1030ff,\n        blend: 9,\n        dimX: 1,\n        dimY: 1,\n        anchorX: 0,\n        anchorY: 0,\n        divisor: 24,\n        intensity: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0002,\n                animType: \"move\"\n            },\n            anchorX: {\n                animType: \"syncCosOscillation\",\n                loopDuration: 18000,\n                val1: 0.05,\n                val2: 0.95\n            },\n            anchorY: {\n                animType: \"syncSinOscillation\",\n                loopDuration: 18000,\n                val1: 0.05,\n                val2: 0.95\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"blue-rays\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"spectral-body\",\n        color: 0x20aaee,\n        time: 0,\n        blend: 8,\n        intensity: 4,\n        spectral: true,\n        scale: 0.9,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            },\n            color: {\n                active: true,\n                loopDuration: 6000,\n                animType: \"colorOscillation\",\n                val1: 0xffffff,\n                val2: 0x00aaff\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"spectral-body\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"mantle-of-madness\",\n        color: 0x0090ff,\n        time: 0,\n        blend: 5,\n        intensity: 0.0001,\n        spectral: false,\n        scale: 7,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 30000,\n                val1: 0.0001,\n                val2: 4\n            },\n            scale: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 30000,\n                val1: 7,\n                val2: 1\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"mantle-of-madness\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"drift-in-plans\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.035,\n        frequency: 80,\n        color: 0xffffff,\n        maxIntensity: 1.5,\n        minIntensity: 0.5,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            },\n            anchorX: {\n                active: true,\n                val1: 0.35,\n                val2: 0.65,\n                animType: \"syncCosOscillation\",\n                loopDuration: 10000\n            },\n            anchorY: {\n                active: true,\n                val1: 0.35,\n                val2: 0.65,\n                animType: \"syncSinOscillation\",\n                loopDuration: 10000\n            }\n        }\n    },\n    {\n        filterType: \"liquid\",\n        filterId: \"drift-in-plans\",\n        color: 0xff0000,\n        time: 0,\n        blend: 6,\n        intensity: 5,\n        spectral: false,\n        scale: 2.5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            color: {\n                active: true,\n                loopDuration: 9000,\n                animType: \"colorOscillation\",\n                val1: 0xff0000,\n                val2: 0xffffff\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"drift-in-plans\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"fire-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"fire-aura\",\n        auraType: 2,\n        color: 0x903010,\n        thickness: 9.8,\n        scale: 4,\n        time: 0,\n        auraIntensity: 2,\n        subAuraIntensity: 1.5,\n        threshold: 0.4,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 5\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"fire-aura\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"glacial-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"glacial-aura\",\n        auraType: 1,\n        color: 0x5099dd,\n        thickness: 4.5,\n        scale: 3,\n        time: 0,\n        auraIntensity: 0.8,\n        subAuraIntensity: 0.25,\n        threshold: 0.5,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            thickness: {\n                val1: 2,\n                val2: 4.7,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            },\n            subAuraIntensity: {\n                val1: 0.45,\n                val2: 0.65,\n                animType: \"cosOscillation\",\n                loopDuration: 6000\n            },\n            auraIntensity: {\n                val1: 0.9,\n                val2: 2.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"glacial-aura\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"anti-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"anti-aura\",\n        auraType: 2,\n        color: 0x050505,\n        thickness: 2.7,\n        scale: 7,\n        time: 0,\n        auraIntensity: 5,\n        subAuraIntensity: 2,\n        threshold: 0.08,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            auraIntensity: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"syncCosOscillation\",\n                val1: 5,\n                val2: 0\n            },\n            subAuraIntensity: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"syncCosOscillation\",\n                val1: 2,\n                val2: 0\n            },\n            color: {\n                active: true,\n                loopDuration: 6000,\n                animType: \"syncColorOscillation\",\n                val1: 0x050505,\n                val2: 0x200000\n            },\n            threshold: {\n                active: true,\n                loopDuration: 1500,\n                animType: \"syncCosOscillation\",\n                val1: 0.02,\n                val2: 0.5\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"anti-aura\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"fire\",\n        filterId: \"pure-fire-aura\",\n        intensity: 1,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0024,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                loopDuration: 15000,\n                val1: 0.8,\n                val2: 2,\n                animType: \"syncCosOscillation\"\n            },\n            amplitude: {\n                active: true,\n                loopDuration: 4400,\n                val1: 1,\n                val2: 1.4,\n                animType: \"syncCosOscillation\"\n            }\n        }\n    },\n    {\n        filterType: \"zapshadow\",\n        filterId: \"pure-fire-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"pure-fire-aura\",\n        auraType: 2,\n        color: 0x903010,\n        thickness: 9.8,\n        scale: 4,\n        time: 0,\n        auraIntensity: 2,\n        subAuraIntensity: 1.5,\n        threshold: 0.4,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 5\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"pure-fire-aura\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"pure-fire-aura-2\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"pure-fire-aura-2\",\n        auraType: 2,\n        color: 0x903010,\n        thickness: 9.8,\n        scale: 4,\n        time: 0,\n        auraIntensity: 1,\n        subAuraIntensity: 0.3,\n        threshold: 0.5,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 3.6\n            }\n        }\n    },\n    {\n        filterType: \"fire\",\n        filterId: \"pure-fire-aura-2\",\n        intensity: 1,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0024,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                loopDuration: 15000,\n                val1: 0.8,\n                val2: 3,\n                animType: \"syncCosOscillation\"\n            },\n            amplitude: {\n                active: true,\n                loopDuration: 4400,\n                val1: 1,\n                val2: 1.6,\n                animType: \"syncCosOscillation\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"pure-fire-aura-2\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"pure-ice-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"pure-ice-aura\",\n        auraType: 1,\n        color: 0x5099dd,\n        thickness: 4.5,\n        scale: 10,\n        time: 0,\n        auraIntensity: 0.25,\n        subAuraIntensity: 1,\n        threshold: 0.5,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            thickness: {\n                val1: 2,\n                val2: 3.3,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            },\n            subAuraIntensity: {\n                val1: 0.45,\n                val2: 0.65,\n                animType: \"cosOscillation\",\n                loopDuration: 6000\n            },\n            auraIntensity: {\n                val1: 0.9,\n                val2: 2.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    },\n    {\n        filterType: \"smoke\",\n        filterId: \"pure-ice-aura\",\n        color: 0x80ccff,\n        time: 0,\n        blend: 2,\n        dimX: 0.3,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.006,\n                animType: \"move\"\n            },\n            dimX: {\n                val1: 0.4,\n                val2: 0.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"pure-ice-aura\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"pixel\",\n        filterId: \"pixelate\",\n        sizeX: 2.5,\n        sizeY: 2.5\n    }\n];\n$ff7eec2964ce8415$var$presetObject = new Object();\n$ff7eec2964ce8415$var$presetObject.name = \"pixelate\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.MAIN;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$7afd9c1079ecedf7.push($ff7eec2964ce8415$var$presetObject);\nvar $ff7eec2964ce8415$export$bfc0b9c61923b5ec = [];\n// white : **electric , **waves, ***xrays, **liquid (normal), (clover)\n// black : **liquid (protoplasm), **smoke, **rays, outline, **fumes, **fog, **flood, **fire\n// no texture : **glow, **bulge, **blur, **bloom\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"flood\",\n        filterId: \"Watery Surface\",\n        time: 0,\n        color: 0x0020bb,\n        billowy: 0.43,\n        tintIntensity: 0.72,\n        glint: 0.31,\n        scale: 70,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0006,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Watery Surface\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"Protoplasm\",\n        color: 0x20aaee,\n        time: 0,\n        blend: 8,\n        intensity: 4,\n        spectral: true,\n        scale: 1.4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Protoplasm\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"Watery Surface 2\",\n        color: 0x20aaee,\n        time: 0,\n        blend: 8,\n        intensity: 4,\n        spectral: false,\n        scale: 1.4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Watery Surface 2\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"smoke\",\n        filterId: \"Smoky Area\",\n        color: 0xaaaaaa,\n        time: 0,\n        blend: 2,\n        dimX: 1,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Smoky Area\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"electric\",\n        filterId: \"Shock\",\n        color: 0xffffff,\n        time: 0,\n        blend: 1,\n        intensity: 5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Shock\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"Annihilating Rays\",\n        time: 0,\n        color: 0xffbb00,\n        blend: 9,\n        dimX: 1,\n        dimY: 1,\n        anchorX: 0,\n        anchorY: 0,\n        divisor: 6,\n        intensity: 4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Annihilating Rays\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"ray\",\n        filterId: \"Classic Rays\",\n        time: 0,\n        color: 0xcf8000,\n        alpha: 0.5,\n        divisor: 32,\n        anchorX: 0,\n        anchorY: 0,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Classic Rays\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"fumes\",\n        filterId: \"Smoke Filaments\",\n        color: 0x808080,\n        time: 0,\n        blend: 8,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Smoke Filaments\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"fire\",\n        filterId: \"Flames\",\n        intensity: 1.5,\n        color: 0xffffff,\n        amplitude: 1.3,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0016,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Flames\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xfog\",\n        filterId: \"Thick Fog\",\n        autoFit: false,\n        color: 0x3090ff,\n        time: 0,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0006,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Thick Fog\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-vstrong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"glow\",\n        filterId: \"Glowing Outline\",\n        outerStrength: 5.5,\n        innerStrength: 0,\n        color: 0x006000,\n        quality: 0.5,\n        padding: 10,\n        animated: {\n            outerStrength: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"syncCosOscillation\",\n                val1: 5.5,\n                val2: 1.5\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Glowing Outline\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"Waves\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.015,\n        frequency: 120,\n        color: 0xffffff,\n        maxIntensity: 2.5,\n        minIntensity: 0.9,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Waves\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"Waves 2\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.014,\n        frequency: 400,\n        color: 0xffffff,\n        maxIntensity: 2.4,\n        minIntensity: 0.8,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0385,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Waves 2\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"Waves 3\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.017,\n        frequency: 35,\n        color: 0xffffff,\n        maxIntensity: 2.6,\n        minIntensity: 0.9,\n        padding: 20,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Waves 3\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xglow\",\n        filterId: \"Zone : Fire\",\n        auraType: 1,\n        color: 0x903010,\n        scale: 1.5,\n        time: 0,\n        auraIntensity: 1.8,\n        subAuraIntensity: 0.25,\n        threshold: 0.6,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 5\n            }\n        }\n    },\n    {\n        filterType: \"fire\",\n        filterId: \"Zone : Fire\",\n        intensity: 1.5,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Zone : Fire\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xglow\",\n        filterId: \"Zone : Electricity\",\n        auraType: 2,\n        color: 0x303030,\n        scale: 1.5,\n        time: 0,\n        auraIntensity: 1,\n        subAuraIntensity: 0.9,\n        threshold: 0,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 1,\n                val2: 2\n            }\n        }\n    },\n    {\n        filterType: \"electric\",\n        filterId: \"Zone : Electricity\",\n        color: 0xffffff,\n        time: 0,\n        blend: 1,\n        intensity: 5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Zone : Electricity\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xglow\",\n        filterId: \"Zone : Blizzard\",\n        auraType: 1,\n        color: 0x5099dd,\n        thickness: 4.5,\n        scale: 5,\n        time: 0,\n        auraIntensity: 0.25,\n        subAuraIntensity: 1,\n        threshold: 0.5,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            thickness: {\n                val1: 2,\n                val2: 3.3,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            },\n            subAuraIntensity: {\n                val1: 0.05,\n                val2: 0.1,\n                animType: \"cosOscillation\",\n                loopDuration: 6000\n            },\n            auraIntensity: {\n                val1: 0.9,\n                val2: 2.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    },\n    {\n        filterType: \"smoke\",\n        filterId: \"Zone : Blizzard\",\n        color: 0x80ccff,\n        time: 0,\n        blend: 2,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.005,\n                animType: \"move\"\n            },\n            dimX: {\n                val1: 0.4,\n                val2: 0.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Zone : Blizzard\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"bulgepinch\",\n        filterId: \"Bulging Out\",\n        padding: 150,\n        strength: 0,\n        radiusPercent: 200,\n        animated: {\n            strength: {\n                active: true,\n                animType: \"cosOscillation\",\n                loopDuration: 2000,\n                val1: 0,\n                val2: 0.45\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Bulging Out\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"blur\",\n        filterId: \"Blurred Texture\",\n        padding: 25,\n        quality: 4.0,\n        blur: 0,\n        blurX: 0,\n        blurY: 0,\n        animated: {\n            blurX: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 500,\n                val1: 0,\n                val2: 6\n            },\n            blurY: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 750,\n                val1: 0,\n                val2: 6\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Blurred Texture\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"xbloom\",\n        filterId: \"Bloomed Texture\",\n        threshold: 0.35,\n        bloomScale: 0,\n        brightness: 1,\n        blur: 0.1,\n        padding: 10,\n        quality: 15,\n        blendMode: 0,\n        animated: {\n            bloomScale: {\n                active: true,\n                loopDuration: 2000,\n                animType: \"syncCosOscillation\",\n                val1: 0,\n                val2: 2.1\n            },\n            threshold: {\n                active: false,\n                loopDuration: 1000,\n                animType: \"syncCosOscillation\",\n                val1: 0.0,\n                val2: 1.9\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Bloomed Texture\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"Wild Magic\",\n        color: 0xff0000,\n        time: 0,\n        blend: 6,\n        intensity: 5,\n        spectral: false,\n        scale: 2.5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            }\n        }\n    },\n    {\n        filterType: \"wave\",\n        filterId: \"Wild Magic\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.014,\n        frequency: 10,\n        color: 0xffffff,\n        maxIntensity: 1.3,\n        minIntensity: 0.6,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0065,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Wild Magic\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"web\",\n        filterId: \"Spider Web 1\",\n        anchorX: 0.5,\n        anchorY: 0.5,\n        color: 0xffffff,\n        thickness: 2,\n        div2: 5,\n        time: 98.8,\n        animated: {\n            time: {\n                active: true,\n                loopDuration: 5000,\n                animType: \"cosOscillation\",\n                val1: 98.8,\n                val2: 99.7\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Spider Web 1\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"web\",\n        filterId: \"Spider Web 2\",\n        anchorX: 0.5,\n        anchorY: 0.5,\n        color: 0xcccccc,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    },\n    {\n        filterType: \"liquid\",\n        filterId: \"Spider Web 2\",\n        color: 0xff0000,\n        time: 0,\n        blend: 4,\n        intensity: 8,\n        spectral: false,\n        scale: 0.2,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Spider Web 2\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\n$ff7eec2964ce8415$var$params = [\n    {\n        filterType: \"web\",\n        filterId: \"Spider Web 3\",\n        anchorX: 0.5,\n        anchorY: 0.5,\n        color: 0xcccccc,\n        time: 100\n    },\n    {\n        filterType: \"liquid\",\n        filterId: \"Spider Web 3\",\n        color: 0xff0000,\n        time: 0,\n        blend: 1,\n        intensity: 4,\n        spectral: true,\n        scale: 0.2,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$ff7eec2964ce8415$var$presetObject = {};\n$ff7eec2964ce8415$var$presetObject.name = \"Spider Web 3\";\n$ff7eec2964ce8415$var$presetObject.library = $ff7eec2964ce8415$export$19612c32a2f7f4cd.TEMPLATE;\n$ff7eec2964ce8415$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$ff7eec2964ce8415$var$presetObject.params = $ff7eec2964ce8415$var$params;\n$ff7eec2964ce8415$export$bfc0b9c61923b5ec.push($ff7eec2964ce8415$var$presetObject);\nvar $ff7eec2964ce8415$export$9381e89181e5b461 = $ff7eec2964ce8415$export$7afd9c1079ecedf7.concat($ff7eec2964ce8415$export$bfc0b9c61923b5ec);\n\n\n\n\nconst $a48a250facc06caa$var$Magic = (0, $97b1237a45b106ea$export$4367b12d875874d3)();\nconst $a48a250facc06caa$export$df3971f21aaed551 = {\n    ARCHAIC: \"\",\n    V030: \"0.3.0\",\n    V040: \"0.4.0\",\n    V040b: \"0.4.0b\",\n    V041: \"0.4.1\",\n    V043: \"0.4.3\"\n};\nasync function $a48a250facc06caa$export$182eb7a8e7220720() {\n    if ((0, $97b1237a45b106ea$export$485113ed30b22bb8)()) {\n        var dataVersionNow;\n        try {\n            dataVersionNow = game.settings.get(\"tokenmagic\", \"migration\");\n        } catch (e) {\n            dataVersionNow = $a48a250facc06caa$export$df3971f21aaed551.ARCHAIC;\n        }\n        if (dataVersionNow < $a48a250facc06caa$export$df3971f21aaed551.V030) await $a48a250facc06caa$var$updatePresetsV030();\n        if (dataVersionNow < $a48a250facc06caa$export$df3971f21aaed551.V040) await $a48a250facc06caa$var$updatePresetsV040();\n        if (dataVersionNow < $a48a250facc06caa$export$df3971f21aaed551.V040b) await $a48a250facc06caa$var$updatePresetsV040b();\n        if (dataVersionNow < $a48a250facc06caa$export$df3971f21aaed551.V041) await $a48a250facc06caa$var$updatePresetsV041();\n        if (dataVersionNow < $a48a250facc06caa$export$df3971f21aaed551.V043) await $a48a250facc06caa$var$updatePresetsV043();\n    }\n}\n// migrating to the new presets data\nasync function $a48a250facc06caa$var$updatePresetsV030() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Launching presets data migration...`);\n        let foundTemplateLibrary = false;\n        for (const preset of presets){\n            if (!preset.hasOwnProperty(\"library\")) {\n                preset.library = (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).MAIN;\n                (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Adding ${preset.name} to ${(0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).MAIN}`);\n            } else if (preset.library === (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).TEMPLATE && !foundTemplateLibrary) {\n                foundTemplateLibrary = true;\n                (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Found template presets. Templates will not be added.`);\n            }\n        }\n        if (!foundTemplateLibrary) (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Merging templates presets.`);\n        let newPresets = foundTemplateLibrary ? presets : presets.concat((0, $ff7eec2964ce8415$export$bfc0b9c61923b5ec));\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", newPresets);\n            await game.settings.set(\"tokenmagic\", \"migration\", $a48a250facc06caa$export$df3971f21aaed551.V030);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Migration successful!`);\n        } catch (e) {\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(`Migration 0.3.0 - Migration failed.`);\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $a48a250facc06caa$var$updatePresetsV040() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Launching presets data migration...`);\n        // Adding zOrder for the template presets only\n        // Does not break visuals\n        for (const preset of presets)if (preset.library === (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).TEMPLATE) {\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Checking template preset ${preset.name}...`);\n            let zOrder = 1;\n            for (const filter of preset.params)if (!filter.hasOwnProperty(\"zOrder\")) {\n                filter.zOrder = zOrder;\n                (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Updating ${filter.filterType} in ${preset.name}...`);\n                zOrder++;\n            }\n        }\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Importing new template presets...`);\n            await $a48a250facc06caa$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v040.json\", {\n                overwrite: false\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $a48a250facc06caa$export$df3971f21aaed551.V040);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Migration successful!`);\n        } catch (e) {\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(`Migration 0.4.0 - Migration failed.`);\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $a48a250facc06caa$var$updatePresetsV040b() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0b - Launching presets data migration...`);\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0b - updating template presets...`);\n            await $a48a250facc06caa$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v040b.json\", {\n                overwrite: true\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $a48a250facc06caa$export$df3971f21aaed551.V040b);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.0b - Migration successful!`);\n        } catch (e) {\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(`Migration 0.4.0b - Migration failed.`);\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $a48a250facc06caa$var$updatePresetsV041() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.1 - Launching presets data migration...`);\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.1 - updating template presets...`);\n            await $a48a250facc06caa$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v041.json\", {\n                overwrite: true\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $a48a250facc06caa$export$df3971f21aaed551.V041);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.1 - Migration successful!`);\n        } catch (e) {\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(`Migration 0.4.1 - Migration failed.`);\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $a48a250facc06caa$var$updatePresetsV043() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.3 - Launching presets data migration...`);\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.3 - updating template presets...`);\n            await $a48a250facc06caa$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v043.json\", {\n                overwrite: true\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $a48a250facc06caa$export$df3971f21aaed551.V043);\n            (0, $97b1237a45b106ea$export$bef1f36f5486a6a3)(`Migration 0.4.3 - Migration successful!`);\n        } catch (e) {\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(`Migration 0.4.3 - Migration failed.`);\n            (0, $97b1237a45b106ea$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\n\n\n\n\n\n\nclass $0213c2d85a9c5b71$export$1ab2366e25c48ed5 extends PIXI.filters.CRTFilter {\n    constructor(params){\n        super();\n        this.curvature = 1.0;\n        this.lineWidth = 1.0;\n        this.lineContrast = 0.25;\n        this.verticalLine = false;\n        this.noise = 0.08;\n        this.noiseSize = 1.0;\n        this.seed = 0;\n        this.vignetting = 0;\n        this.zOrder = 320;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $1e1fe8af01bced2b$export$767e09686399ca49 extends PIXI.filters.RGBSplitFilter {\n    constructor(params){\n        super();\n        this.red = new Float32Array([\n            -10,\n            0\n        ]);\n        this.green = new Float32Array([\n            0,\n            10\n        ]);\n        this.blue = new Float32Array([\n            0,\n            0\n        ]);\n        this.zOrder = 340;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $c1844ae22deae2c0$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get redX() {\n        return this.uniforms.red[0];\n    }\n    set redX(value) {\n        this.uniforms.red[0] = value;\n    }\n    get redY() {\n        return this.uniforms.red[1];\n    }\n    set redY(value) {\n        this.uniforms.red[1] = value;\n    }\n    get greenX() {\n        return this.uniforms.green[0];\n    }\n    set greenX(value) {\n        this.uniforms.green[0] = value;\n    }\n    get greenY() {\n        return this.uniforms.green[1];\n    }\n    set greenY(value) {\n        this.uniforms.green[1] = value;\n    }\n    get blueX() {\n        return this.uniforms.blue[0];\n    }\n    set blueX(value) {\n        this.uniforms.blue[0] = value;\n    }\n    get blueY() {\n        return this.uniforms.blue[1];\n    }\n    set blueY(value) {\n        this.uniforms.blue[1] = value;\n    }\n}\n\n\n\n\n\n\nclass $8d3e8f4e5d297304$export$7b4b307b24c88455 {\n    static get defaultConfiguration() {\n        const defaultConfig = {\n            categories: {},\n            overrides: {\n                0: {\n                    target: \"Stinking Cloud\",\n                    opacity: 0.5,\n                    tint: \"#00a80b\",\n                    preset: \"Smoky Area\",\n                    texture: null\n                },\n                1: {\n                    target: \"Web\",\n                    opacity: 0.5,\n                    tint: \"#808080\",\n                    preset: \"Spider Web 2\",\n                    texture: null\n                }\n            }\n        };\n        Object.keys(CONFIG.DND5E.damageTypes).forEach((dmgType)=>{\n            if (defaultConfig.categories[dmgType] == undefined) {\n                const config = {\n                    opacity: (0, $165cdb672a404ae7$export$7395e4cb572e863b),\n                    tint: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.tint = \"#2d8000\";\n                        config.opacity = 0.6;\n                        break;\n                    case \"cold\":\n                        config.tint = \"#47b3ff\";\n                        break;\n                    case \"necrotic\":\n                        config.tint = \"#502673\";\n                        break;\n                    case \"poison\":\n                        config.tint = \"#00a80b\";\n                        break;\n                    case \"psychic\":\n                        config.tint = \"#8000ff\";\n                        break;\n                    case \"thunder\":\n                        config.tint = \"#0060ff\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType] = config;\n            }\n            Object.keys(CONFIG.MeasuredTemplate.types).forEach((tplType)=>{\n                const config = {\n                    preset: (0, $165cdb672a404ae7$export$680af52575be3523),\n                    texture: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.preset = \"Watery Surface 2\";\n                        break;\n                    case \"cold\":\n                        config.preset = \"Thick Fog\";\n                        break;\n                    case \"fire\":\n                        config.preset = \"Flames\";\n                        break;\n                    case \"force\":\n                        config.preset = \"Waves 3\";\n                        break;\n                    case \"lightning\":\n                        config.preset = \"Shock\";\n                        break;\n                    case \"necrotic\":\n                        config.preset = \"Smoke Filaments\";\n                        break;\n                    case \"poison\":\n                        config.preset = \"Smoky Area\";\n                        break;\n                    case \"psychic\":\n                        config.preset = \"Classic Rays\";\n                        break;\n                    case \"radiant\":\n                        config.preset = \"Annihilating Rays\";\n                        break;\n                    case \"thunder\":\n                        config.preset = \"Waves\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType][tplType] = config;\n            });\n        });\n        return defaultConfig;\n    }\n    constructor(){\n        this._enabled = false;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    configure(enabled = false) {\n        if (game.system.id !== \"dnd5e\") return;\n        if (!enabled) {\n            if (this._enabled) {\n                if (game.modules.get(\"lib-wrapper\")?.active) libWrapper.unregister(\"tokenmagic\", \"game.dnd5e.canvas.AbilityTemplate.fromItem\");\n                else window.location.reload();\n            }\n        } else if (!this._enabled) {\n            if (game.modules.get(\"lib-wrapper\")?.active) libWrapper.register(\"tokenmagic\", \"game.dnd5e.canvas.AbilityTemplate.fromItem\", $8d3e8f4e5d297304$var$fromItem, \"WRAPPER\");\n            else {\n                const origFromItem = game.dnd5e.canvas.AbilityTemplate.fromItem;\n                game.dnd5e.canvas.AbilityTemplate.fromItem = function() {\n                    return $8d3e8f4e5d297304$var$fromItem.call(this, origFromItem.bind(this), ...arguments);\n                };\n            }\n        }\n        this._enabled = enabled;\n    }\n    getData() {\n        return {\n            hasAutoTemplates: true,\n            dmgTypes: CONFIG.DND5E.damageTypes,\n            templateTypes: CONFIG.MeasuredTemplate.types\n        };\n    }\n}\nfunction $8d3e8f4e5d297304$var$fromConfig(config, template) {\n    const o = {\n        tokenmagic: {\n            options: {}\n        }\n    };\n    if (config.preset && config.preset !== \"\" && config.preset !== (0, $165cdb672a404ae7$export$680af52575be3523)) o.tokenmagic.options.tmfxPreset = config.preset;\n    if (config.texture && config.texture !== \"\") o.tokenmagic.options.tmfxTexture = config.texture;\n    if (config.tint && config.tint !== \"\") o.tokenmagic.options.tmfxTint = config.tint;\n    o.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n    template.document.updateSource({\n        flags: {\n            tokenmagic: o.tokenmagic\n        }\n    });\n}\nfunction $8d3e8f4e5d297304$var$fromOverrides(overrides = [], item, template) {\n    let configs = overrides.filter((el)=>el.target.toLowerCase() === item.name.toLowerCase());\n    if (configs.length === 0) return false;\n    // if there are multiple overrides for the same item, the random one is chosen\n    let config = configs[Math.floor(Math.random() * configs.length)];\n    $8d3e8f4e5d297304$var$fromConfig(config, template);\n    return true;\n}\nfunction $8d3e8f4e5d297304$var$fromCategories(categories = {}, item, template) {\n    if (!item.hasDamage) return false;\n    let config, dmgSettings;\n    // some items/spells have multiple damage types\n    // this loop looks over all the types until it finds one with a valid fx preset\n    for (const [_, dmgType] of item.system.damage.parts){\n        dmgSettings = categories[dmgType] || {};\n        config = dmgSettings[template.document.t];\n        if (config && config.preset !== (0, $165cdb672a404ae7$export$680af52575be3523)) break;\n    }\n    if (!config) return false;\n    $8d3e8f4e5d297304$var$fromConfig(mergeObject(config, {\n        opacity: dmgSettings.opacity,\n        tint: dmgSettings.tint\n    }, true, true), template);\n    return true;\n}\nfunction $8d3e8f4e5d297304$var$fromItem(wrapped, ...args) {\n    const [item] = args;\n    const template = wrapped(...args);\n    if (!template) return template;\n    let hasPreset = template.hasOwnProperty(\"tmfxPreset\");\n    if (hasPreset) return template;\n    const settings = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n    let updated = settings.overrides ? $8d3e8f4e5d297304$var$fromOverrides(Object.values(settings.overrides), item, template) : false;\n    if (!updated) $8d3e8f4e5d297304$var$fromCategories(settings.categories, item, template);\n    return template;\n}\nconst $8d3e8f4e5d297304$export$2e33ee4bec8a51fe = new $8d3e8f4e5d297304$export$7b4b307b24c88455();\n\n\n\nclass $1d3b56998084216a$export$974ac8c3143e0d38 {\n    static get defaultConfiguration() {\n        const defaultConfig = {\n            categories: {},\n            overrides: {\n                0: {\n                    target: \"Stinking Cloud\",\n                    opacity: 0.5,\n                    tint: \"#00a80b\",\n                    preset: \"Smoky Area\",\n                    texture: null\n                },\n                1: {\n                    target: \"Sanguine Mist\",\n                    opacity: 0.6,\n                    tint: \"#c41212\",\n                    preset: \"Smoky Area\"\n                },\n                2: {\n                    target: \"Web\",\n                    opacity: 0.5,\n                    tint: \"#808080\",\n                    preset: \"Spider Web 2\",\n                    texture: null\n                },\n                3: {\n                    target: \"Incendiary Aura\",\n                    opacity: 0.2,\n                    tint: \"#b12910\",\n                    preset: \"Smoke Filaments\",\n                    texture: null\n                }\n            }\n        };\n        Object.keys(CONFIG.PF2E.damageTraits).forEach((dmgType)=>{\n            if (defaultConfig.categories[dmgType] == undefined) {\n                const config = {\n                    opacity: (0, $165cdb672a404ae7$export$7395e4cb572e863b),\n                    tint: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.tint = \"#2d8000\";\n                        config.opacity = 0.6;\n                        break;\n                    case \"cold\":\n                        config.tint = \"#47b3ff\";\n                        break;\n                    case \"electricity\":\n                        break;\n                    case \"fire\":\n                        break;\n                    case \"force\":\n                        break;\n                    case \"mental\":\n                        config.tint = \"#8000ff\";\n                        break;\n                    case \"negative\":\n                        config.tint = \"#502673\";\n                        break;\n                    case \"poison\":\n                        config.tint = \"#00a80b\";\n                        break;\n                    case \"positive\":\n                        break;\n                    case \"sonic\":\n                        config.tint = \"#0060ff\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType] = config;\n            }\n            Object.keys(CONFIG.MeasuredTemplate.types).forEach((tplType)=>{\n                const config = {\n                    preset: (0, $165cdb672a404ae7$export$680af52575be3523),\n                    texture: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.preset = \"Watery Surface 2\";\n                        break;\n                    case \"cold\":\n                        config.preset = \"Thick Fog\";\n                        break;\n                    case \"electricity\":\n                        config.preset = \"Shock\";\n                        break;\n                    case \"fire\":\n                        config.preset = \"Flames\";\n                        break;\n                    case \"force\":\n                        config.preset = \"Waves 3\";\n                        break;\n                    case \"mental\":\n                        config.preset = \"Classic Rays\";\n                        break;\n                    case \"negative\":\n                        config.preset = \"Smoke Filaments\";\n                        break;\n                    case \"poison\":\n                        config.preset = \"Smoky Area\";\n                        break;\n                    case \"positive\":\n                        config.preset = \"Annihilating Rays\";\n                        break;\n                    case \"sonic\":\n                        config.preset = \"Waves\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType][tplType] = config;\n            });\n        });\n        return defaultConfig;\n    }\n    constructor(){\n        this._enabled = false;\n    }\n    configure(enabled = false) {\n        if (game.system.id !== \"pf2e\") return;\n        this._enabled = enabled;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {}\n    getData() {\n        return {\n            hasAutoTemplates: true,\n            dmgTypes: CONFIG.PF2E.damageTraits,\n            templateTypes: CONFIG.MeasuredTemplate.types\n        };\n    }\n    preCreateMeasuredTemplate(template) {\n        let hasPreset = template.hasOwnProperty(\"tmfxPreset\");\n        if (hasPreset) return template;\n        const origin = template.flags?.pf2e?.origin;\n        const settings = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        let updated = settings.overrides ? $1d3b56998084216a$var$fromOverrides(Object.values(settings.overrides), origin, template) : false;\n        if (!updated) $1d3b56998084216a$var$fromCategories(settings.categories, origin, template);\n        return template;\n    }\n}\nfunction $1d3b56998084216a$var$fromConfig(config, template) {\n    const o = {\n        tokenmagic: {\n            options: {}\n        }\n    };\n    if (config.preset && config.preset !== \"\" && config.preset !== (0, $165cdb672a404ae7$export$680af52575be3523)) o.tokenmagic.options.tmfxPreset = config.preset;\n    if (config.texture && config.texture !== \"\") o.tokenmagic.options.tmfxTexture = config.texture;\n    if (config.tint && config.tint !== \"\") o.tokenmagic.options.tmfxTint = config.tint;\n    o.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n    template.updateSource({\n        flags: {\n            tokenmagic: o.tokenmagic\n        }\n    });\n}\nfunction $1d3b56998084216a$var$fromOverrides(overrides = [], origin, template) {\n    const { name: name, slug: slug } = origin;\n    let configs = overrides.filter((el)=>el.target.toLowerCase() === name?.toLowerCase());\n    if (configs.length === 0) return false;\n    // if there are multiple overrides for the same item, the random one is chosen\n    let config = configs[Math.floor(Math.random() * configs.length)];\n    $1d3b56998084216a$var$fromConfig(config, template);\n    return true;\n}\nfunction $1d3b56998084216a$var$fromCategories(categories = {}, origin, template) {\n    if (!origin.traits?.length) return false;\n    let config, dmgSettings;\n    // some templates may have multiple traits\n    // this loop looks over all of them until it finds one with a valid fx preset\n    for (const trait of origin.traits){\n        dmgSettings = categories[trait.toLowerCase()] || {};\n        config = dmgSettings[template.t];\n        if (config && config.preset !== (0, $165cdb672a404ae7$export$680af52575be3523)) break;\n    }\n    if (!config) return false;\n    $1d3b56998084216a$var$fromConfig(mergeObject(config, {\n        opacity: dmgSettings.opacity,\n        tint: dmgSettings.tint\n    }, true, true), template);\n    return true;\n}\nconst $1d3b56998084216a$export$437ce40001ae0212 = new $1d3b56998084216a$export$974ac8c3143e0d38();\n\n\n\nclass $0ef7da65087c6087$export$6e94d583ff29718b {\n    static get defaultConfiguration() {\n        const defaultConfig = {\n            categories: {},\n            overrides: {\n                0: {\n                    target: \"\\u0418\\u0433\\u043D\\u0438\",\n                    opacity: 0.5,\n                    tint: \"#00a80b\",\n                    preset: \"Flames\",\n                    texture: null\n                }\n            }\n        };\n        Object.keys(CONFIG.witcher.meleeSkills).forEach((meleeSkillType)=>{\n            if (defaultConfig.categories[meleeSkillType] == undefined) {\n                const config = {\n                    opacity: (0, $165cdb672a404ae7$export$7395e4cb572e863b),\n                    tint: null\n                };\n                switch(meleeSkillType.toLowerCase()){\n                    case \"brawling\":\n                        config.tint = \"#2d8000\";\n                        config.opacity = 0.6;\n                        break;\n                    case \"melee\":\n                        config.tint = \"#47b3ff\";\n                        break;\n                    case \"small blades\":\n                        config.tint = \"#502673\";\n                        break;\n                    case \"staff/spear\":\n                        config.tint = \"#00a80b\";\n                        break;\n                    case \"swordsmanship\":\n                        config.tint = \"#8000ff\";\n                        break;\n                    case \"athletics\":\n                        config.tint = \"#0060ff\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[meleeSkillType] = config;\n            }\n            Object.keys(CONFIG.MeasuredTemplate.types).forEach((tplType)=>{\n                const config = {\n                    preset: (0, $165cdb672a404ae7$export$680af52575be3523),\n                    texture: null\n                };\n                switch(meleeSkillType.toLowerCase()){\n                    case \"acid\":\n                        config.preset = \"slashing\";\n                        break;\n                    case \"cold\":\n                        config.preset = \"bludgeoning\";\n                        break;\n                    case \"fire\":\n                        config.preset = \"piercing\";\n                        break;\n                    case \"force\":\n                        config.preset = \"elemental\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[meleeSkillType][tplType] = config;\n            });\n        });\n        return defaultConfig;\n    }\n    constructor(){\n        this._enabled = false;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    configure(enabled = false) {\n        if (game.system.id !== \"TheWitcherTRPG\") return;\n        this._enabled = enabled;\n    }\n    getData() {\n        return {\n            hasAutoTemplates: true,\n            meleeSkills: CONFIG.witcher.meleeSkills,\n            templateTypes: CONFIG.MeasuredTemplate.types\n        };\n    }\n    preCreateMeasuredTemplate(template) {\n        let hasPreset = template.hasOwnProperty(\"tmfxPreset\");\n        if (hasPreset) return template;\n        const settings = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        let updated = settings.overrides ? $0ef7da65087c6087$var$fromOverrides(Object.values(settings.overrides), template) : false;\n        if (!updated) $0ef7da65087c6087$var$fromCategories(settings.categories, template);\n    }\n}\nfunction $0ef7da65087c6087$var$fromConfig(config, templateData) {\n    const o = {\n        tokenmagic: {\n            options: {}\n        }\n    };\n    if (config.preset && config.preset !== \"\" && config.preset !== (0, $165cdb672a404ae7$export$680af52575be3523)) o.tokenmagic.options.tmfxPreset = config.preset;\n    if (config.texture && config.texture !== \"\") o.tokenmagic.options.tmfxTexture = config.texture;\n    if (config.tint && config.tint !== \"\") o.tokenmagic.options.tmfxTint = config.tint;\n    o.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n    mergeObject(templateData, {\n        \"flags.tokenmagic\": o.tokenmagic\n    });\n}\nfunction $0ef7da65087c6087$var$fromOverrides(overrides = [], templateData) {\n    const name = templateData.flags.witcher?.origin?.name;\n    let config = overrides.find((el)=>el.target.toLowerCase() === name?.toLowerCase());\n    if (!config) return false;\n    $0ef7da65087c6087$var$fromConfig(config, templateData);\n    return true;\n}\nfunction $0ef7da65087c6087$var$fromCategories(categories = {}, templateData) {\n    const traits = templateData.flags.witcher?.origin?.traits ?? [];\n    let config, dmgSettings;\n    for (const trait of traits){\n        dmgSettings = categories[trait] || {};\n        config = dmgSettings[templateData.t];\n        if (config && config.preset !== (0, $165cdb672a404ae7$export$680af52575be3523)) break;\n    }\n    if (!config) return false;\n    $0ef7da65087c6087$var$fromConfig(mergeObject(config, {\n        opacity: dmgSettings.opacity,\n        tint: dmgSettings.tint\n    }, true, true), templateData);\n    return true;\n}\nconst $0ef7da65087c6087$export$e8d12d88f51888cc = new $0ef7da65087c6087$export$6e94d583ff29718b();\n\n\n\nconst $4c34bd360e81b010$var$Magic = (0, $97b1237a45b106ea$export$4367b12d875874d3)();\nclass $4c34bd360e81b010$export$804072f25096732f extends FormApplication {\n    constructor(object = {}, options){\n        super(object, options);\n    }\n    /** @override */ static get defaultOptions() {\n        return {\n            ...super.defaultOptions,\n            template: \"modules/tokenmagic/templates/settings/settings.html\",\n            height: \"auto\",\n            title: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.dialog.title\"),\n            width: 600,\n            classes: [\n                \"tokenmagic\",\n                \"settings\"\n            ],\n            tabs: [\n                {\n                    navSelector: \".tabs\",\n                    contentSelector: \"form\",\n                    initial: \"name\"\n                }\n            ],\n            submitOnClose: false\n        };\n    }\n    static init() {\n        const menuAutoTemplateSettings = {\n            key: \"autoTemplateSettings\",\n            config: {\n                name: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.button.name\"),\n                label: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.button.label\"),\n                hint: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.button.hint\"),\n                type: $4c34bd360e81b010$export$804072f25096732f,\n                restricted: true\n            }\n        };\n        const settingAutoTemplateSettings = {\n            key: \"autoTemplateSettings\",\n            config: {\n                name: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.name\"),\n                hint: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.hint\"),\n                scope: \"world\",\n                config: false,\n                default: {},\n                type: Object\n            }\n        };\n        const templates = this.getSystemTemplates();\n        let hasAutoTemplates = !!templates;\n        if (templates) {\n            game.settings.registerMenu(\"tokenmagic\", menuAutoTemplateSettings.key, menuAutoTemplateSettings.config);\n            game.settings.register(\"tokenmagic\", settingAutoTemplateSettings.key, mergeObject(settingAutoTemplateSettings.config, {\n                default: templates.constructor.defaultConfiguration\n            }, true, true));\n        }\n        game.settings.register(\"tokenmagic\", \"autoTemplateEnabled\", {\n            name: game.i18n.localize(\"TMFX.settings.autoTemplateEnabled.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.autoTemplateEnabled.hint\"),\n            scope: \"world\",\n            config: hasAutoTemplates,\n            default: hasAutoTemplates,\n            type: Boolean,\n            onChange: (value)=>$4c34bd360e81b010$export$804072f25096732f.configureAutoTemplate(value)\n        });\n        game.settings.register(\"tokenmagic\", \"defaultTemplateOnHover\", {\n            name: game.i18n.localize(\"TMFX.settings.defaultTemplateOnHover.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.defaultTemplateOnHover.hint\"),\n            scope: \"world\",\n            config: true,\n            default: hasAutoTemplates,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"autohideTemplateElements\", {\n            name: game.i18n.localize(\"TMFX.settings.autohideTemplateElements.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.autohideTemplateElements.hint\"),\n            scope: \"world\",\n            config: true,\n            default: true,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"useAdditivePadding\", {\n            name: game.i18n.localize(\"TMFX.settings.useMaxPadding.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.useMaxPadding.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"minPadding\", {\n            name: game.i18n.localize(\"TMFX.settings.minPadding.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.minPadding.hint\"),\n            scope: \"world\",\n            config: true,\n            default: 50,\n            type: Number\n        });\n        game.settings.register(\"tokenmagic\", \"fxPlayerPermission\", {\n            name: game.i18n.localize(\"TMFX.settings.fxPlayerPermission.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.fxPlayerPermission.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"importOverwrite\", {\n            name: game.i18n.localize(\"TMFX.settings.importOverwrite.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.importOverwrite.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"useZOrder\", {\n            name: game.i18n.localize(\"TMFX.settings.useZOrder.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.useZOrder.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"disableAnimations\", {\n            name: game.i18n.localize(\"TMFX.settings.disableAnimations.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.disableAnimations.hint\"),\n            scope: \"client\",\n            config: true,\n            default: false,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"disableCaching\", {\n            name: game.i18n.localize(\"TMFX.settings.disableCaching.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.disableCaching.hint\"),\n            scope: \"client\",\n            config: true,\n            default: true,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"disableVideo\", {\n            name: game.i18n.localize(\"TMFX.settings.disableVideo.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.disableVideo.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"presets\", {\n            name: \"Token Magic FX presets\",\n            hint: \"Token Magic FX presets\",\n            scope: \"world\",\n            config: false,\n            default: (0, $ff7eec2964ce8415$export$7afd9c1079ecedf7),\n            type: Object\n        });\n        game.settings.register(\"tokenmagic\", \"migration\", {\n            name: \"TMFX Data Version\",\n            hint: \"TMFX Data Version\",\n            scope: \"world\",\n            config: false,\n            default: (0, $a48a250facc06caa$export$df3971f21aaed551).ARCHAIC,\n            type: String\n        });\n        loadTemplates([\n            \"modules/tokenmagic/templates/settings/settings.html\",\n            \"modules/tokenmagic/templates/settings/dnd5e/categories.html\",\n            \"modules/tokenmagic/templates/settings/dnd5e/overrides.html\",\n            \"modules/tokenmagic/templates/settings/pf2e/categories.html\",\n            \"modules/tokenmagic/templates/settings/pf2e/overrides.html\",\n            \"modules/tokenmagic/templates/settings/TheWitcherTRPG/categories.html\",\n            \"modules/tokenmagic/templates/settings/TheWitcherTRPG/overrides.html\"\n        ]);\n    }\n    static configureAutoTemplate(enabled = false) {\n        this.getSystemTemplates()?.configure(enabled);\n    }\n    static getSystemTemplates() {\n        switch(game.system.id){\n            case \"dnd5e\":\n                return 0, $8d3e8f4e5d297304$export$2e33ee4bec8a51fe;\n            case \"pf2e\":\n                return 0, $1d3b56998084216a$export$437ce40001ae0212;\n            case \"TheWitcherTRPG\":\n                return 0, $0ef7da65087c6087$export$e8d12d88f51888cc;\n            default:\n                return null;\n        }\n    }\n    getSettingsData() {\n        let settingsData = {\n            autoTemplateEnable: game.settings.get(\"tokenmagic\", \"autoTemplateEnabled\")\n        };\n        if ($4c34bd360e81b010$export$804072f25096732f.getSystemTemplates()) settingsData[\"autoTemplateSettings\"] = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        return settingsData;\n    }\n    /** @override */ getData() {\n        let data = super.getData();\n        data.hasAutoTemplates = false;\n        data.emptyPreset = (0, $165cdb672a404ae7$export$680af52575be3523);\n        const templates = $4c34bd360e81b010$export$804072f25096732f.getSystemTemplates();\n        if (templates) mergeObject(data, templates.getData());\n        data.presets = $4c34bd360e81b010$var$Magic.getPresets((0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).TEMPLATE).sort(function(a, b) {\n            if (a.name < b.name) return -1;\n            if (a.name > b.name) return 1;\n            return 0;\n        });\n        data.system = {\n            id: game.system.id,\n            title: game.system.title\n        };\n        data.settings = this.getSettingsData();\n        data.submitText = game.i18n.localize(\"TMFX.save\");\n        return data;\n    }\n    /** @override */ async _updateObject(_, formData) {\n        const data = expandObject(formData);\n        for (let [key, value] of Object.entries(data)){\n            if (key === \"autoTemplateSettings\" && value.overrides) {\n                const compacted = {};\n                Object.values(value.overrides).forEach((val, idx)=>compacted[idx] = val);\n                value.overrides = compacted;\n            }\n            await game.settings.set(\"tokenmagic\", key, value);\n        }\n    }\n    /** @override */ activateListeners(html) {\n        super.activateListeners(html);\n        html.find(\"button.add-override\").click(this._onAddOverride.bind(this));\n        html.find(\"button.remove-override\").click(this._onRemoveOverride.bind(this));\n    }\n    async _onAddOverride(event) {\n        event.preventDefault();\n        let idx = 0;\n        const entries = event.target.closest(\"div.tab\").querySelectorAll(\"div.override-entry\");\n        const last = entries[entries.length - 1];\n        if (last) idx = last.dataset.idx + 1;\n        let updateData = {};\n        updateData[`autoTemplateSettings.overrides.${idx}.target`] = \"\";\n        updateData[`autoTemplateSettings.overrides.${idx}.opacity`] = (0, $165cdb672a404ae7$export$7395e4cb572e863b);\n        updateData[`autoTemplateSettings.overrides.${idx}.tint`] = null;\n        updateData[`autoTemplateSettings.overrides.${idx}.preset`] = (0, $165cdb672a404ae7$export$680af52575be3523);\n        updateData[`autoTemplateSettings.overrides.${idx}.texture`] = null;\n        await this._onSubmit(event, {\n            updateData: updateData,\n            preventClose: true\n        });\n        this.render();\n    }\n    async _onRemoveOverride(event) {\n        event.preventDefault();\n        let idx = event.target.dataset.idx;\n        const el = event.target.closest(`div[data-idx=\"${idx}\"]`);\n        if (!el) return true;\n        el.remove();\n        await this._onSubmit(event, {\n            preventClose: true\n        });\n        this.render();\n    }\n}\nHooks.once(\"init\", ()=>{\n    // Extracted from https://github.com/leapfrogtechnology/just-handlebars-helpers/\n    Handlebars.registerHelper(\"concat\", function(...params) {\n        // Ignore the object appended by handlebars.\n        if (typeof params[params.length - 1] === \"object\") params.pop();\n        return params.join(\"\");\n    });\n    $4c34bd360e81b010$export$804072f25096732f.init();\n    $4c34bd360e81b010$export$804072f25096732f.configureAutoTemplate(game.settings.get(\"tokenmagic\", \"autoTemplateEnabled\"));\n    const wmtdUpdate = async function(wrapped, ...args) {\n        const [document] = args;\n        let preset, hasPresetData;\n        const tex = document.texture ?? \"\";\n        const hasTexture = !!document.texture;\n        const opt = document.flags?.tokenmagic?.options ?? null;\n        if (!opt) preset = document[\"flags.tokenmagic.templateData.preset\"];\n        hasPresetData = !!preset;\n        //const hasOpt = data[\"flags.tokenmagic\"]?.options ?? null;\n        if (hasTexture) document.texture = (0, $97b1237a45b106ea$export$3bebb302ab08af33)(document.texture);\n        if (opt == null) {\n            if (hasPresetData && preset !== (0, $165cdb672a404ae7$export$680af52575be3523)) {\n                let defaultTexture = $4c34bd360e81b010$var$Magic._getPresetTemplateDefaultTexture(preset);\n                if (!(defaultTexture == null)) {\n                    if (tex === \"\" || tex.startsWith(\"modules/tokenmagic/fx/assets/templates/\")) document.texture = defaultTexture;\n                }\n            } else if (hasTexture && tex.startsWith(\"modules/tokenmagic/fx/assets/templates/\") && hasPresetData && preset === (0, $165cdb672a404ae7$export$680af52575be3523)) document.texture = \"\";\n        }\n        return await wrapped(...args);\n    };\n    const wmtDraw = async function(wrapped, ...args) {\n        if (this.document.texture) this.document.texture = (0, $97b1237a45b106ea$export$3bebb302ab08af33)(this.document.texture);\n        const retVal = await wrapped(...args);\n        this.template.alpha = this.document.getFlag(\"tokenmagic\", \"templateData\")?.opacity ?? 1;\n        return retVal;\n    };\n    let wmtApplyRenderFlags;\n    let wmtApplyRenderFlagsType;\n    let wmtRefreshTemplate;\n    let wmtRefreshTemplateType;\n    if (!(0, $97b1237a45b106ea$export$62085f0363fc8c9)()) {\n        const toRadians = Math.toRadians;\n        wmtApplyRenderFlagsType = \"WRAPPER\";\n        wmtApplyRenderFlags = function(wrapped, ...args) {\n            const [flags] = args;\n            if (flags?.refreshShape) flags.refreshShape = this.template && !this.template._destroyed;\n            return wrapped(...args);\n        };\n        /* ------------------------------------------------------------------------------------ */ wmtRefreshTemplateType = \"OVERRIDE\";\n        /**\n\t\t *\n\t\t * @return {wmtRefreshTemplate}\n\t\t */ wmtRefreshTemplate = function() {\n            const t = this.template.clear();\n            if (!this.isVisible) return;\n            // Draw the Template outline\n            t.lineStyle(this._borderThickness, this.borderColor, 0.75).beginFill(0x000000, 0.0);\n            // Fill Color or Texture\n            if (this.texture) {\n                let mat = PIXI.Matrix.IDENTITY;\n                // rectangle\n                if (this.shape.width && this.shape.height) mat.scale(this.shape.width / this.texture.width, this.shape.height / this.texture.height);\n                else if (this.shape.radius) {\n                    mat.scale(this.shape.radius * 2 / this.texture.height, this.shape.radius * 2 / this.texture.width);\n                    // Circle center is texture start...\n                    mat.translate(-this.shape.radius, -this.shape.radius);\n                } else if (this.document.t === \"ray\") {\n                    const d = canvas.dimensions, height = this.document.width * d.size / d.distance, width = this.document.distance * d.size / d.distance;\n                    mat.scale(width / this.texture.width, height / this.texture.height);\n                    mat.translate(0, -height * 0.5);\n                    mat.rotate(toRadians(this.document.direction));\n                } else {\n                    // cone\n                    const d = canvas.dimensions;\n                    // Extract and prepare data\n                    let { direction: direction, distance: distance, angle: angle } = this.document;\n                    distance *= d.size / d.distance;\n                    direction = Math.toRadians(direction);\n                    const width = this.document.distance * d.size / d.distance;\n                    const angles = [\n                        angle / -2,\n                        angle / 2\n                    ];\n                    distance = distance / Math.cos(Math.toRadians(angle / 2));\n                    // Get the cone shape as a polygon\n                    const rays = angles.map((a)=>Ray.fromAngle(0, 0, direction + Math.toRadians(a), distance + 1));\n                    const height = Math.sqrt((rays[0].B.x - rays[1].B.x) * (rays[0].B.x - rays[1].B.x) + (rays[0].B.y - rays[1].B.y) * (rays[0].B.y - rays[1].B.y));\n                    mat.scale(width / this.texture.width, height / this.texture.height);\n                    mat.translate(0, -height / 2);\n                    mat.rotate(toRadians(this.document.direction));\n                }\n                t.beginTextureFill({\n                    texture: this.texture,\n                    matrix: mat,\n                    alpha: 1.0\n                });\n                const source = getProperty(this.texture, \"baseTexture.resource.source\");\n                if (source && source.tagName === \"VIDEO\") {\n                    source.loop = true;\n                    source.muted = true;\n                    game.video.play(source);\n                }\n            } else t.beginFill(0x000000, 0.0);\n            // Draw the shape\n            t.drawShape(this.shape);\n            // Draw origin and destination points\n            t.lineStyle(this._borderThickness, 0x000000).beginFill(0x000000, 0.5).drawCircle(0, 0, 6).drawCircle(this.ray.dx, this.ray.dy, 6);\n            // Update visibility\n            this.controlIcon.visible = !!this.layer.active;\n            this.controlIcon.border.visible = !!this.hover;\n            const alpha = this.document.getFlag(\"tokenmagic\", \"templateData\")?.opacity ?? 1;\n            t.alpha = this.hover ? alpha / 1.25 : alpha;\n            return this;\n        };\n    /* ------------------------------------------------------------------------------------ */ }\n    if (game.settings.get(\"tokenmagic\", \"autohideTemplateElements\")) {\n        /**\n\t\t *\n\t\t * @param wrapped\n\t\t * @param args\n\t\t * @return {*}\n\t\t */ const autohideTemplateElements = function(wrapped, ...args) {\n            // Save texture and border thickness\n            const texture = this.texture;\n            const borderThickness = this._borderThickness;\n            // Hide template texture while moving\n            if (this._original || this.parent === canvas.templates.preview) this.texture = null;\n            // Show border outline only on hover if the template is textured\n            if (this.texture && this.texture !== \"\" && !this._hover) this._borderThickness = 0;\n            const retVal = wrapped(...args);\n            // Restore texture and border thickness\n            this.texture = texture;\n            this._borderThickness = borderThickness;\n            {\n                // Show the origin/destination points and ruler text only on hover or while creating but not while moving\n                const template = this._original ?? this;\n                const show = !this._original && (this._hover || this.parent === canvas.templates.preview);\n                if (!show && template.template?.geometry) {\n                    // Hide origin and destination points, i.e., hide everything except the template shape\n                    for (const document of template.template.geometry.graphicsData)if (document.shape !== template.shape) {\n                        document.fillStyle.visible = false;\n                        document.lineStyle.visible = false;\n                    }\n                    template.template.geometry.invalidate();\n                }\n                if (template.ruler) template.ruler.renderable = show;\n                if (template.controlIcon) template.controlIcon.renderable = template.owner;\n                if (template.handle) template.handle.renderable = template.owner;\n            }\n            return retVal;\n        };\n        /* ------------------------------------------------------------------------------------ */ if (wmtApplyRenderFlags) {\n            const _wmtApplyRenderFlags = wmtApplyRenderFlags;\n            wmtApplyRenderFlags = function() {\n                return autohideTemplateElements.call(this, _wmtApplyRenderFlags.bind(this), ...arguments);\n            };\n        } else {\n            wmtApplyRenderFlagsType = \"WRAPPER\";\n            wmtApplyRenderFlags = autohideTemplateElements;\n        }\n    }\n    if (game.settings.get(\"tokenmagic\", \"defaultTemplateOnHover\")) Hooks.on(\"canvasReady\", ()=>{\n        canvas.stage.on(\"mousemove\", (event)=>{\n            const { x: mx, y: my } = event.data.getLocalPosition(canvas.templates);\n            for (const template of canvas.templates.placeables){\n                const hl = canvas.grid.getHighlightLayer(`MeasuredTemplate.${template.id}`);\n                const opacity = template.document.getFlag(\"tokenmagic\", \"templateData\")?.opacity ?? 1;\n                if (template.texture && template.texture !== \"\") {\n                    const { x: cx, y: cy } = template.center;\n                    const mouseover = template.shape?.contains(mx - cx, my - cy);\n                    hl.renderable = mouseover;\n                    template.template.alpha = (mouseover ? 0.5 : 1.0) * opacity;\n                } else {\n                    hl.renderable = true;\n                    template.template.alpha = opacity;\n                }\n            }\n        });\n    });\n    if (game.modules.get(\"lib-wrapper\")?.active) {\n        libWrapper.register(\"tokenmagic\", \"MeasuredTemplateDocument.prototype.update\", wmtdUpdate, \"WRAPPER\");\n        libWrapper.register(\"tokenmagic\", \"MeasuredTemplate.prototype._draw\", wmtDraw, \"WRAPPER\");\n        if (wmtApplyRenderFlags) libWrapper.register(\"tokenmagic\", \"MeasuredTemplate.prototype._applyRenderFlags\", wmtApplyRenderFlags, wmtApplyRenderFlagsType);\n        if (wmtRefreshTemplate) libWrapper.register(\"tokenmagic\", \"MeasuredTemplate.prototype._refreshTemplate\", wmtRefreshTemplate, wmtRefreshTemplateType);\n    } else {\n        const cmtdUpdate = MeasuredTemplateDocument.prototype.update;\n        MeasuredTemplateDocument.prototype.update = function() {\n            return wmtdUpdate.call(this, cmtdUpdate.bind(this), ...arguments);\n        };\n        const cmtDraw = MeasuredTemplate.prototype._draw;\n        MeasuredTemplate.prototype._draw = function() {\n            return wmtDraw.call(this, cmtDraw.bind(this), ...arguments);\n        };\n        if (wmtApplyRenderFlags) {\n            if (wmtApplyRenderFlagsType && wmtApplyRenderFlagsType !== \"OVERRIDE\") {\n                const cmtApplyRenderFlags = MeasuredTemplate.prototype._applyRenderFlags;\n                MeasuredTemplate.prototype._applyRenderFlags = function() {\n                    return wmtApplyRenderFlags.call(this, cmtApplyRenderFlags.bind(this), ...arguments);\n                };\n            } else MeasuredTemplate.prototype._applyRenderFlags = wmtApplyRenderFlags;\n        }\n        if (wmtRefreshTemplate) {\n            if (wmtRefreshTemplateType && wmtRefreshTemplateType !== \"OVERRIDE\") {\n                const cmtRefreshTemplate = MeasuredTemplate.prototype._refreshTemplate;\n                MeasuredTemplate.prototype._refreshTemplate = function() {\n                    return wmtRefreshTemplate.call(this, cmtRefreshTemplate.bind(this), ...arguments);\n                };\n            } else MeasuredTemplate.prototype._refreshTemplate = wmtRefreshTemplate;\n        }\n    }\n});\n\n\n/*\r\n\r\nIt's getting messy here !\r\nI will fix it in a future version\r\n(+ duplicated code to factorize and code to improve)\r\n\r\n*/ const $97b1237a45b106ea$var$moduleTM = \"module.tokenmagic\";\nconst $97b1237a45b106ea$export$c67e46de1ec7dfa6 = {\n    adjustment: (0, $2fe05231a5671b9f$export$1545cd3bbac349ce),\n    ascii: (0, $f1f93c519987627d$export$1efdcfd4cb16ac29),\n    dot: (0, $a0121c7d42a6541e$export$d75528d01a211954),\n    distortion: (0, $463c3c68cacec30e$export$2d59c37be5e749a7),\n    crt: (0, $0213c2d85a9c5b71$export$1ab2366e25c48ed5),\n    oldfilm: (0, $11a39396e5d8589b$export$2094be6cc744d7bc),\n    glow: (0, $8224c68d08cc6843$export$3ea2d657d9f1c2fe),\n    outline: (0, $5b47cd38a348aa0c$export$c04494508d798797),\n    bevel: (0, $e609518cea3498ff$export$bcacf43f99a4009b),\n    xbloom: (0, $4d02ab9fc92d64ef$export$e7bbc116d34f17bc),\n    shadow: (0, $5ba7aae303e84dac$export$3fa21fd22495d321),\n    twist: (0, $0643f21646f7ec8f$export$f4e603bceef0312b),\n    zoomblur: (0, $cb3547a2fc8518c6$export$767afdf6d9357594),\n    blur: (0, $b8712d076a565747$export$efc74ab3983784c5),\n    bulgepinch: (0, $cde275935cddb40a$export$c1f4d37fd591fb01),\n    zapshadow: (0, $d6a2679398073147$export$228231731d6adde3),\n    ray: (0, $56e6cd37bbebe026$export$1992e0dceaf7be8),\n    fog: (0, $2a5c150fd96450c6$export$f17580ed76af4408),\n    xfog: (0, $6ca08fc9db20c2ac$export$da3eec8748131849),\n    electric: (0, $5a0c0cac6edacb2c$export$22f86bc7a100befc),\n    wave: (0, $6c6b7c04c1d5fa2e$export$4eeb783ef7c17da8),\n    shockwave: (0, $207c96b47058a247$export$985076e41ccfd508),\n    fire: (0, $f77ec43cfcb845eb$export$fd0af22b8dd4eb46),\n    fumes: (0, $223f1247ddebb00e$export$60b593b6124d1ebc),\n    smoke: (0, $a08c1e6a648373ca$export$2ba7369b7ae4551b),\n    flood: (0, $a0aac33c68ab6b34$export$bf2c97ada2c2b329),\n    images: (0, $8d8f4cc819ce08c5$export$7f3e808c6a96411c),\n    field: (0, $7eae9962e69f7347$export$8353bd967bf6b04d),\n    xray: (0, $5b05583cddbffe38$export$a909c602e4f39889),\n    liquid: (0, $34c9aecbf210823d$export$76689802e4398e92),\n    xglow: (0, $4130c396ef8a0d82$export$dbf4d88a9f2fd9e6),\n    pixel: (0, $9d7a67912a650eb7$export$26c3bdb8b50816cc),\n    web: (0, $30e3cacecefea03b$export$be2f10404718dbad),\n    ripples: (0, $5c475373f35e120f$export$3f7eb987d91438a2),\n    globes: (0, $6fa47e94e013e8e5$export$dd8c8c08b796f015),\n    transform: (0, $5ae15acc2d1ee812$export$e8341be799357874),\n    splash: (0, $1737f68aeb781d93$export$df3de41f3315cb09),\n    polymorph: (0, $6d7cfa7b8cdebcda$export$cf7260b11c6fd85d),\n    xfire: (0, $792ddf9c96904ba5$export$f5292971f4ab78f9),\n    sprite: (0, $14ec92966e5a1c8e$export$96f9417ff369e52),\n    spriteMask: (0, $756e6c880a697f93$export$4569ea13832ce134),\n    replaceColor: (0, $66619a9ab494ce98$export$c3ce4d77f1074b4d),\n    ddTint: (0, $4896edd1e4c7b975$export$1ee8d69885ee6ad1),\n    rgbSplit: (0, $1e1fe8af01bced2b$export$767e09686399ca49)\n};\nconst $97b1237a45b106ea$export$f2f6f02affe07ab5 = {\n    TOKEN: Token.embeddedName,\n    TILE: Tile.embeddedName,\n    TEMPLATE: MeasuredTemplate.embeddedName,\n    DRAWING: Drawing.embeddedName,\n    NOT_SUPPORTED: null\n};\nfunction $97b1237a45b106ea$var$i18n(key) {\n    return game.i18n.localize(key);\n}\nasync function $97b1237a45b106ea$var$exportObjectAsJson(exportObj, exportName) {\n    let jsonStr = JSON.stringify(exportObj, null, 4);\n    const a = document.createElement(\"a\");\n    const file = new Blob([\n        jsonStr\n    ], {\n        type: \"plain/text\"\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = exportName + \".json\";\n    a.click();\n    URL.revokeObjectURL(a.href);\n}\nconst $97b1237a45b106ea$export$157d7b8c087faa7b = {\n    SET_FLAG: \"TMFXSetFlag\",\n    SET_ANIME_FLAG: \"TMFXSetAnimeFlag\"\n};\nfunction $97b1237a45b106ea$export$24d33a6f4bffea69(placeable, flag, socketAction) {\n    const data = {\n        tmAction: socketAction,\n        tmPlaceableId: placeable.id,\n        tmPlaceableType: placeable._TMFXgetPlaceableType(),\n        tmFlag: flag,\n        tmViewedScene: game.user.viewedScene\n    };\n    game.socket.emit($97b1237a45b106ea$var$moduleTM, data, (resp)=>{});\n}\nfunction $97b1237a45b106ea$export$73ccc1811a23c47(moduleName) {\n    return game.modules.has(moduleName) && game.modules.get(moduleName).active === true;\n}\nfunction $97b1237a45b106ea$export$a3e1d0865041c250() {\n    return game.settings.get(\"tokenmagic\", \"minPadding\");\n}\nfunction $97b1237a45b106ea$export$db02b1003f6b14db() {\n    return game.settings.get(\"tokenmagic\", \"useAdditivePadding\");\n}\nfunction $97b1237a45b106ea$export$4d149f3fface3da5() {\n    return game.settings.get(\"tokenmagic\", \"disableCaching\");\n}\nfunction $97b1237a45b106ea$export$62085f0363fc8c9() {\n    return game.settings.get(\"tokenmagic\", \"disableVideo\");\n}\nfunction $97b1237a45b106ea$export$485113ed30b22bb8() {\n    const theOne = game.users.find((user)=>user.isGM && user.active);\n    return theOne && game.user === theOne;\n}\nfunction $97b1237a45b106ea$export$ae4b89d79d01bd2b() {\n    return game.settings.get(\"tokenmagic\", \"fxPlayerPermission\") && !$97b1237a45b106ea$export$485113ed30b22bb8();\n}\nfunction $97b1237a45b106ea$export$2bf9d1af56f0b37d() {\n    canvas.app.renderer.filter.useMaxPadding = !$97b1237a45b106ea$export$db02b1003f6b14db();\n}\nfunction $97b1237a45b106ea$export$222530a21fa4a417() {\n    return game.settings.get(\"tokenmagic\", \"useZOrder\");\n}\nfunction $97b1237a45b106ea$export$4876a704e2bf90fb() {\n    return game.settings.get(\"tokenmagic\", \"disableAnimations\");\n}\nfunction $97b1237a45b106ea$export$bef1f36f5486a6a3(output) {\n    let logged = \"%cTokenMagic %c| \" + output;\n    console.log(logged, \"color:#4BC470\", \"color:#B3B3B3\");\n}\nfunction $97b1237a45b106ea$export$c106dd0671a0fc2d(output) {\n    let logged = \"TokenMagic | \" + output;\n    console.warn(logged);\n}\nfunction $97b1237a45b106ea$export$a3bc9b8ed74fc(output) {\n    let logged = \"TokenMagic | \" + output;\n    console.error(logged);\n}\nfunction $97b1237a45b106ea$export$3bebb302ab08af33(path) {\n    /*\r\n      /prefix/...               =>   ...\r\n      /modules/tokenmagic/...   =>   modules/tokenmagic/...\r\n  */ if (path) {\n        const base = \"/modules/tokenmagic\";\n        const url = new URL(path, window.location.href);\n        if (url.origin === window.location.origin) {\n            let prefix = \"/\";\n            try {\n                if (ROUTE_PREFIX) prefix = new URL(ROUTE_PREFIX, window.location.origin).pathname;\n            } catch (err) {}\n            path = url.pathname;\n            if (prefix === \"/\") path = path.slice(1);\n            else if (path.startsWith(prefix) && (path.length === prefix.length || path[prefix.length] === \"/\")) path = path.slice(prefix.length + 1);\n            else if (path.startsWith(base) && (path.length === base.length || path[base.length] === \"/\")) path = path.slice(1);\n        } else path = url.href;\n    }\n    return path;\n}\nfunction $97b1237a45b106ea$export$674b9bd489502778() {\n    const authorizedLayers = [\n        canvas.tokens,\n        canvas.tiles,\n        canvas.drawings\n    ];\n    if (authorizedLayers.some((layer)=>layer === canvas.activeLayer)) return canvas.activeLayer.placeables.filter((p)=>p.controlled === true) || [];\n    else return [];\n}\nfunction $97b1237a45b106ea$export$c0c03469ba031852() {\n    return canvas.tokens.placeables.filter((placeable)=>placeable.isTargeted);\n}\nfunction $97b1237a45b106ea$export$5008448b4c27fa2b(id, type) {\n    let placeable = null;\n    function findPlaceable(placeables, id) {\n        let rplaceable = null;\n        if (!(placeables == null) && placeables.length > 0) rplaceable = placeables.find((n)=>n.id === id);\n        return rplaceable;\n    }\n    switch(type){\n        case $97b1237a45b106ea$export$f2f6f02affe07ab5.TOKEN:\n            placeable = findPlaceable(canvas.tokens.placeables, id);\n            break;\n        case $97b1237a45b106ea$export$f2f6f02affe07ab5.TILE:\n            placeable = findPlaceable(canvas.tiles.placeables, id);\n            break;\n        case $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE:\n            placeable = findPlaceable(canvas.templates.placeables, id);\n            break;\n        case $97b1237a45b106ea$export$f2f6f02affe07ab5.DRAWING:\n            placeable = findPlaceable(canvas.drawings.placeables, id);\n            break;\n    }\n    return placeable;\n}\n/**\r\n * Randomizes params using 'randomized' field.\r\n * 'randomized' is an object consisting of keys named after params to be randomized, which map either\r\n * to arrays or ranges which will be used to generate a random value.\r\n * e.g.\r\n * {\r\n *  param1: ['foo1', 'foo2', 'foo3'],\r\n *  param2: { list: ['foo1', 'foo2', 'foo3'], link: 'param5'},\r\n *  param3: { val1: 0, val2: 1, step: 0.1},\r\n *  param4: { val1: 0, val2: 10, step: 1, link: 'param6'},\r\n * }\r\n * 'link' will assign the same generated value to one other param.\r\n */ function $97b1237a45b106ea$var$randomizeParams(params1) {\n    if (params1.randomized.hasOwnProperty(\"active\") && !params1.randomized.active) return;\n    for (const [param, opts] of Object.entries(params1.randomized)){\n        let rVal;\n        if (Array.isArray(opts) || opts.hasOwnProperty(\"list\")) {\n            const list = opts.list ?? opts;\n            rVal = list[Math.floor(Math.random() * list.length)];\n        } else {\n            const min = Math.min(opts.val1, opts.val2);\n            const max = Math.max(opts.val1, opts.val2);\n            const step = opts.step ?? 1;\n            const stepsInRange = (max - min + (Number.isInteger(step) ? 1 : 0)) / step;\n            rVal = Math.floor(Math.random() * stepsInRange) * step + min;\n        }\n        setProperty(params1, param, rVal);\n        if (opts.hasOwnProperty(\"link\")) setProperty(params1, opts.link, rVal);\n    }\n}\nfunction $97b1237a45b106ea$export$45dd0c4934db71d0(target, ...sources) {\n    sources.forEach((source)=>{\n        Object.keys(source).forEach((key)=>{\n            const s_val = source[key];\n            const t_val = target[key];\n            if (s_val instanceof Array) target[key] = [\n                ...s_val\n            ];\n            else target[key] = t_val && s_val && typeof t_val === \"object\" && typeof s_val === \"object\" ? $97b1237a45b106ea$export$45dd0c4934db71d0(t_val, s_val) : s_val;\n        });\n    });\n    return target;\n}\nfunction $97b1237a45b106ea$export$4367b12d875874d3() {\n    let _cachedContainer = new PIXI.Container();\n    async function addFiltersOnSelected(paramsArray, replace = false) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const controlled = $97b1237a45b106ea$export$674b9bd489502778();\n        if (!(controlled == null) && controlled.length > 0) for (const placeable of controlled)await addFilters(placeable, paramsArray, replace);\n    }\n    async function addUpdateFiltersOnSelected(paramsArray) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const controlled = $97b1237a45b106ea$export$674b9bd489502778();\n        if (!(controlled == null) && controlled.length > 0) for (const placeable of controlled)await addUpdateFilters(placeable, paramsArray);\n    }\n    async function addUpdateFiltersOnTargeted(paramsArray) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const targeted = $97b1237a45b106ea$export$c0c03469ba031852();\n        if (!(targeted == null) && targeted.length > 0) for (const token of targeted)await addUpdateFilters(token, paramsArray);\n    }\n    async function addFiltersOnTargeted(paramsArray, replace = false) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const targeted = $97b1237a45b106ea$export$c0c03469ba031852();\n        if (!(targeted == null) && targeted.length > 0) for (const token of targeted)await addFilters(token, paramsArray, replace);\n    }\n    async function addFilters(placeable, paramsArray, replace = false) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        if (!(paramsArray instanceof Array && paramsArray.length > 0) || placeable == null) return;\n        let actualFlags = replace ? null : placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        let newFlags = [];\n        for (const params1 of paramsArray){\n            if (!params1.hasOwnProperty(\"filterType\") || !$97b1237a45b106ea$export$c67e46de1ec7dfa6.hasOwnProperty(params1.filterType)) // one invalid ? all rejected.\n            return;\n            if (!params1.hasOwnProperty(\"rank\")) params1.rank = placeable._TMFXgetMaxFilterRank();\n            if (!params1.hasOwnProperty(\"filterId\") || params1.filterId == null) params1.filterId = randomID();\n            if (!params1.hasOwnProperty(\"enabled\") || !(typeof params1.enabled === \"boolean\")) params1.enabled = true;\n            if (params1.hasOwnProperty(\"randomized\")) $97b1237a45b106ea$var$randomizeParams(params1);\n            params1.placeableId = placeable.id;\n            params1.filterInternalId = randomID();\n            params1.filterOwner = game.data.userId;\n            params1.placeableType = placeable._TMFXgetPlaceableType();\n            params1.updateId = randomID();\n            newFlags.push({\n                tmFilters: {\n                    tmFilterId: params1.filterId,\n                    tmFilterInternalId: params1.filterInternalId,\n                    tmFilterType: params1.filterType,\n                    tmFilterOwner: params1.filterOwner,\n                    tmParams: params1\n                }\n            });\n        }\n        if (!(actualFlags == null)) newFlags = actualFlags.concat(newFlags);\n        await placeable._TMFXsetFlag(newFlags);\n    }\n    async function addUpdateFilters(placeable, paramsArray) {\n        if (!paramsArray instanceof Array || paramsArray.length < 1) return;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        let workingFlags = [];\n        if (flags) flags.forEach((flag)=>{\n            workingFlags.push(duplicate(flag));\n        });\n        let newFlags = [];\n        let updateParams;\n        for (const params1 of paramsArray){\n            updateParams = false;\n            params1.updateId = randomID();\n            if (params1.hasOwnProperty(\"randomized\")) $97b1237a45b106ea$var$randomizeParams(params1);\n            workingFlags.forEach((flag)=>{\n                if (flag.tmFilters.tmFilterId === params1.filterId && flag.tmFilters.tmFilterType === params1.filterType) {\n                    if (flag.tmFilters.hasOwnProperty(\"tmParams\")) {\n                        $97b1237a45b106ea$export$45dd0c4934db71d0(flag.tmFilters.tmParams, params1);\n                        updateParams = true;\n                    }\n                }\n            });\n            if (!updateParams) {\n                if (!params1.hasOwnProperty(\"filterType\") || !$97b1237a45b106ea$export$c67e46de1ec7dfa6.hasOwnProperty(params1.filterType)) // one invalid ? all rejected (even the update)\n                return;\n                if (!params1.hasOwnProperty(\"rank\")) params1.rank = placeable._TMFXgetMaxFilterRank();\n                if (!params1.hasOwnProperty(\"filterId\") || params1.filterId == null) params1.filterId = randomID();\n                if (!params1.hasOwnProperty(\"enabled\") || !(typeof params1.enabled === \"boolean\")) params1.enabled = true;\n                params1.placeableId = placeable.id;\n                params1.filterInternalId = randomID();\n                params1.filterOwner = game.data.userId;\n                params1.placeableType = placeable._TMFXgetPlaceableType();\n                newFlags.push({\n                    tmFilters: {\n                        tmFilterId: params1.filterId,\n                        tmFilterInternalId: params1.filterInternalId,\n                        tmFilterType: params1.filterType,\n                        tmFilterOwner: params1.filterOwner,\n                        tmParams: params1\n                    }\n                });\n            }\n        }\n        if (newFlags.length > 0) workingFlags = newFlags.concat(workingFlags);\n        await placeable._TMFXsetFlag(workingFlags);\n    }\n    async function updateFilters(paramsArray) {\n        if (params == null || !params.hasOwnProperty(\"filterId\")) return;\n        let placeableIdSet = new Set();\n        let animations = (0, $c1844ae22deae2c0$export$b229f242afc35ae9).getAnimeMap();\n        if (animations.size <= 0) return;\n        animations.forEach((anime, id)=>{\n            let filterIdMatch = (params1)=>params1.filterId === anime.puppet.filterId;\n            if (paramsArray.some(filterIdMatch)) placeableIdSet.add(anime.puppet.placeableId);\n        });\n        if (placeableIdSet.size <= 0) return;\n        for (const placeableId of placeableIdSet){\n            // we must browse the collection of placeables whatever their types\n            // we have just a filterId.\n            let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(placeableId, $97b1237a45b106ea$export$f2f6f02affe07ab5.TOKEN);\n            if (placeable == null) placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(placeableId, $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE);\n            if (placeable == null) placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(placeableId, $97b1237a45b106ea$export$f2f6f02affe07ab5.TILE);\n            if (placeable == null) placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(placeableId, $97b1237a45b106ea$export$f2f6f02affe07ab5.DRAWING);\n            if (!(placeable == null) && placeable instanceof PlaceableObject) await updateFiltersByPlaceable(placeable, paramsArray);\n        }\n    }\n    async function updateFiltersOnSelected(paramsArray) {\n        let placeables = $97b1237a45b106ea$export$674b9bd489502778();\n        if (placeables == null || placeables.length < 1) return;\n        if (typeof paramsArray === \"string\") paramsArray = getPreset(paramsArray);\n        if (!(paramsArray instanceof Array) || paramsArray.length < 1) return;\n        for (const placeable of placeables)await updateFiltersByPlaceable(placeable, paramsArray);\n    }\n    async function updateFiltersOnTargeted(paramsArray) {\n        let targeted = $97b1237a45b106ea$export$c0c03469ba031852();\n        if (targeted == null || targeted.length < 1) return;\n        if (typeof paramsArray === \"string\") paramsArray = getPreset(paramsArray);\n        if (!(paramsArray instanceof Array) || paramsArray.length < 1) return;\n        for (const token of targeted)await updateFiltersByPlaceable(token, paramsArray);\n    }\n    async function updateFiltersByPlaceable(placeable, paramsArray) {\n        if (!(paramsArray instanceof Array) || paramsArray.length < 1) return;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (flags == null || !(flags instanceof Array) || flags.length < 1) return;\n         // nothing to update...\n        let workingFlags = [];\n        flags.forEach((flag)=>{\n            workingFlags.push(duplicate(flag));\n        });\n        for (const params1 of paramsArray){\n            params1.updateId = randomID();\n            if (params1.hasOwnProperty(\"randomized\")) $97b1237a45b106ea$var$randomizeParams(params1);\n            workingFlags.forEach((flag)=>{\n                if (flag.tmFilters.tmFilterId === params1.filterId && flag.tmFilters.tmFilterType === params1.filterType) {\n                    if (flag.tmFilters.hasOwnProperty(\"tmParams\")) $97b1237a45b106ea$export$45dd0c4934db71d0(flag.tmFilters.tmParams, params1);\n                }\n            });\n        }\n        await placeable._TMFXsetFlag(workingFlags);\n    }\n    // Deleting filters on targeted tokens\n    async function deleteFiltersOnTargeted(filterId = null) {\n        let targeted = $97b1237a45b106ea$export$c0c03469ba031852();\n        if (!(targeted == null) && targeted.length > 0) for (const token of targeted)await deleteFilters(token, filterId);\n    }\n    // Deleting filters on selected placeable(s)\n    async function deleteFiltersOnSelected(filterId = null) {\n        let placeables = $97b1237a45b106ea$export$674b9bd489502778();\n        if (!(placeables == null) && placeables.length > 0) for (const placeable of placeables)await deleteFilters(placeable, filterId);\n    }\n    // Deleting all filters on a placeable in parameter\n    async function deleteFilters(placeable, filterId = null) {\n        if (placeable == null) return;\n        if (filterId == null) {\n            await placeable._TMFXunsetFlag();\n            await placeable._TMFXunsetAnimeFlag();\n        } else if (typeof filterId === \"string\") {\n            let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n            if (flags == null || !(flags instanceof Array) || flags.length < 1) return;\n             // nothing to delete...\n            let workingFlags = [];\n            flags.forEach((flag)=>{\n                if (flag.tmFilters.tmFilterId !== filterId) workingFlags.push(duplicate(flag));\n            });\n            if (workingFlags.length > 0) await placeable._TMFXsetFlag(workingFlags);\n            else await placeable._TMFXunsetFlag();\n            flags = placeable.document.getFlag(\"tokenmagic\", \"animeInfo\");\n            if (flags == null || !(flags instanceof Array) || flags.length < 1) return;\n             // nothing to delete...\n            workingFlags = [];\n            flags.forEach((flag)=>{\n                if (flag.tmFilterId !== filterId) workingFlags.push(duplicate(flag));\n            });\n            if (workingFlags.length > 0) await placeable._TMFXsetAnimeFlag(workingFlags);\n            else await placeable._TMFXunsetAnimeFlag();\n        }\n    }\n    function hasFilterType(placeable, filterType) {\n        if (placeable == null || filterType == null || !(placeable instanceof PlaceableObject)) return null;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (flags == null || !(flags instanceof Array) || flags.length < 1) return false;\n        const found = flags.find((flag)=>flag.tmFilters.tmFilterType === filterType);\n        if (found === undefined) return false;\n        return true;\n    }\n    function isApplicableUser(tmParams) {\n        const hasUser = (arr)=>{\n            return arr.includes(game.user.name) || arr.includes(game.user.id);\n        };\n        if (tmParams.users?.include?.length && !hasUser(tmParams.users.include) || tmParams.users?.exclude?.length && hasUser(tmParams.users?.exclude)) return false;\n        return true;\n    }\n    function hasFilterId(placeable, filterId) {\n        if (placeable == null || !(placeable instanceof PlaceableObject)) return null;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        return _checkFilterId(placeable, filterId, flags);\n    }\n    function _checkFilterId(placeable, filterId, flags) {\n        if (placeable == null || filterId == null || !(placeable instanceof PlaceableObject)) return null;\n        if (flags == null || !(flags instanceof Array) || flags.length < 1) return false;\n        const found = flags.find((flag)=>flag.tmFilters.tmFilterId === filterId);\n        if (found === undefined) return false;\n        return true;\n    }\n    function setFilter(placeable, filter) {\n        placeable._TMFXsetRawFilters(filter);\n    }\n    function _loadPersistedValues(params1, animeInfos) {\n        if (!params1.hasOwnProperty(\"animated\")) return;\n        if (!animeInfos || animeInfos.length <= 0) return;\n        for (const effect of Object.keys(params1.animated)){\n            for (const animeInfo of animeInfos.values())if (animeInfo.tmFilterId === params1.filterId && animeInfo.tmFilterInternalId === params1.filterInternalId && animeInfo.tmFilterEffect === effect) {\n                params1.animated[effect].active = false;\n                params1[effect] = animeInfo.tmFilterEffectValue;\n                // special case for halfCosOscillation\n                if (params1.animated[effect].animType === \"halfCosOscillation\") {\n                    if (params1.animated[effect].val1 !== animeInfo.tmFilterEffectValue) {\n                        params1.animated[effect].val2 = params1.animated[effect].val1;\n                        params1.animated[effect].val1 = animeInfo.tmFilterEffectValue;\n                    }\n                }\n            }\n        }\n    }\n    function _assignFilters(placeable, filters, bulkLoading = false) {\n        if (filters == null || placeable == null) return;\n        // Assign all filters to the placeable\n        let animeInfos = placeable.document.getFlag(\"tokenmagic\", \"animeInfo\");\n        for (const filterInfo of filters){\n            // if bulkloading is on, we update with terminal value if it exists\n            if (bulkLoading) {\n                let params1 = filterInfo.tmFilters.tmParams;\n                _loadPersistedValues(params1, animeInfos);\n            }\n            _assignFilter(placeable, filterInfo);\n        }\n    }\n    function _assignFilter(placeable, filterInfo) {\n        if (filterInfo == null) return;\n        // Do not assign the filter if it has been explicitly set as not applicable to the current user\n        if (!isApplicableUser(filterInfo.tmFilters.tmParams)) return;\n        let workingFilterInfo = duplicate(filterInfo);\n        workingFilterInfo.tmFilters.tmParams.placeableId = placeable.id;\n        workingFilterInfo.tmFilters.tmParams.placeableType = placeable._TMFXgetPlaceableType();\n        let filter = new $97b1237a45b106ea$export$c67e46de1ec7dfa6[workingFilterInfo.tmFilters.tmFilterType](workingFilterInfo.tmFilters.tmParams);\n        setFilter(placeable, filter);\n    }\n    function _loadFilters(placeables, bulkLoading = true) {\n        if (!(placeables == null)) placeables.slice().reverse().forEach((placeable)=>{\n            _singleLoadFilters(placeable, bulkLoading);\n        });\n    }\n    function _singleLoadFilters(placeable, bulkLoading = false) {\n        let placeableType = placeable._TMFXgetPlaceableType();\n        if (placeableType === $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE) {\n            let updateData = placeable.document.getFlag(\"tokenmagic\", \"templateData\");\n            if (!(updateData == null)) {\n                placeable.document.tmfxTextureAlpha = placeable._TMFXgetSprite().alpha = updateData.opacity;\n                placeable.document.tmfxTint = updateData.tint;\n            }\n        }\n        let filters = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (!(filters == null)) {\n            if (placeableType === $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE) // get the first filterId to assign tmfxPreset\n            placeable.document.tmfxPreset = filters[0].tmFilters.tmFilterId;\n            _assignFilters(placeable, filters, bulkLoading);\n        }\n        placeable.loadingRequest = false;\n    }\n    function _fxPseudoEqual(flagObject, filterObject) {\n        function isObject(object) {\n            return object != null && typeof object === \"object\";\n        }\n        const flagKeys = Object.keys(flagObject);\n        for (const flagKey of flagKeys){\n            let flagValue = flagObject[flagKey];\n            const filterValue = filterObject[flagKey];\n            const areObjects = isObject(flagValue) && isObject(filterValue);\n            if (areObjects && !_fxPseudoEqual(flagValue, filterValue)) return false;\n            // handling the Infinity exception with loops... thanks to JSON serialization...\n            if (!areObjects && flagKey === \"loops\" && flagValue === null) flagValue = Infinity; // not nice, but works ! :-)=\n            if (!areObjects && flagValue !== filterValue) return false;\n        }\n        return true;\n    }\n    function _updateTemplateData(data, options, placeableType) {\n        if (!options.hasOwnProperty(\"flags\") || !options.flags.hasOwnProperty(\"tokenmagic\")) return;\n        if (data == null || !data.hasOwnProperty(\"_id\")) return;\n        let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(data._id, placeableType);\n        if (placeable == null) return;\n        let updateData = placeable.document.getFlag(\"tokenmagic\", \"templateData\");\n        if (!(updateData == null)) placeable._TMFXgetSprite().alpha = updateData.opacity;\n    }\n    function _updateFilters(data, options, placeableType) {\n        if (!(options.hasOwnProperty(\"flags\") && options.flags.hasOwnProperty(\"tokenmagic\") && (options.flags.tokenmagic.hasOwnProperty(\"filters\") || options.flags.tokenmagic.hasOwnProperty(\"-=filters\")))) return;\n        if (data == null || !data.hasOwnProperty(\"_id\")) return;\n        let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(data._id, placeableType);\n        if (placeable == null) return;\n        // Shortcut when all filters are deleted\n        if (options.flags.tokenmagic.hasOwnProperty(\"-=filters\")) {\n            (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(data._id); // removing animations on this placeable\n            this._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n            return;\n        }\n        let filters = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (filters == null) return;\n        // CROSS-RESEARCH between the anime map and tokenmagic flags to add, delete or update filters on this placeable\n        // we begin by detecting deleted filters\n        for (let anime of (0, $c1844ae22deae2c0$export$b229f242afc35ae9).getAnimeMap().values())// we test all the animes that are supposed to be on the placeable\n        if (anime.puppet.placeableId === placeable.id) {\n            // is the animation present in the tokenmagic flags for this placeable ?\n            // and is it applicable to the current user?\n            let foundFilter = false;\n            filters.forEach((filterFlag)=>{\n                if (anime.puppet.filterId === filterFlag.tmFilters.tmFilterId && anime.puppet.filterInternalId === filterFlag.tmFilters.tmFilterInternalId && anime.puppet.placeableId === filterFlag.tmFilters.tmParams.placeableId && isApplicableUser(filterFlag.tmFilters.tmParams)) // we find it !\n                foundFilter = true;\n            });\n            // Not found, the animation is removed from the AnimeMap as well as the filter on the placeable\n            if (!foundFilter) {\n                (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimationByFilterId(data._id, anime.puppet.filterId);\n                this._clearImgFiltersByPlaceable(placeable, anime.puppet.filterId);\n            }\n        }\n        // we test each tokenmagic filter flag in the placeable\n        filters.forEach((filterFlag)=>{\n            if (filterFlag.tmFilters.hasOwnProperty(\"tmParams\")) {\n                // we get the puppets in anime corresponding to this placeable\n                let puppets = (0, $c1844ae22deae2c0$export$b229f242afc35ae9).getPuppetsByParams(filterFlag.tmFilters.tmParams);\n                if (puppets.length > 0) // we found corresponding filters\n                for (const puppet of puppets){\n                    // we update if needed\n                    if (!_fxPseudoEqual(filterFlag.tmFilters.tmParams, puppet)) {\n                        if (!puppet.hasOwnProperty(\"updateId\") || puppet.hasOwnProperty(\"updateId\") && puppet.updateId !== filterFlag.tmFilters.tmParams.updateId) {\n                            puppet.setTMParams(duplicate(filterFlag.tmFilters.tmParams));\n                            puppet.normalizeTMParams();\n                        }\n                    }\n                }\n                else // this is a new filter, we assign it to the placeable\n                _assignFilter(placeable, filterFlag);\n            }\n        });\n    }\n    function _clearImgFiltersByPlaceable(placeable, filterId = null) {\n        if (placeable == null) return;\n        let filterById = filterId != null && typeof filterId === \"string\";\n        function destroyClearedFilters(theFilters) {\n            if (theFilters instanceof Array) {\n                let tmFilters = theFilters.filter((filter)=>filterById ? filter.hasOwnProperty(\"filterId\") && filter.filterId === filterId : filter.hasOwnProperty(\"filterId\"));\n                for (const filter of tmFilters){\n                    filter.enabled = false;\n                    filter.destroy();\n                }\n            }\n        }\n        function filterTheFiltering(theFilters) {\n            if (theFilters instanceof Array) {\n                let tmFilters = theFilters.filter((filter)=>filterById ? !(filter.hasOwnProperty(\"filterId\") && filter.filterId === filterId) : !filter.hasOwnProperty(\"filterId\"));\n                return tmFilters.length === 0 ? null : tmFilters;\n            }\n            return theFilters;\n        }\n        let sprite = placeable._TMFXgetSprite();\n        if (sprite != null) {\n            destroyClearedFilters(sprite.filters);\n            sprite.filters = filterTheFiltering(sprite.filters);\n        }\n    }\n    async function _importPresetContent(content, options = {}) {\n        // In internal, we can force overwrite\n        if (!options.hasOwnProperty(\"overwrite\")) options.overwrite = game.settings.get(\"tokenmagic\", \"importOverwrite\");\n        ///////////////////////////////////////////////\n        // Checking the imported object format\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> checking import file format...\");\n        if (!(content instanceof Array) || content.length < 1) {\n            $97b1237a45b106ea$export$a3bc9b8ed74fc(\"import -> file format check KO !\");\n            $97b1237a45b106ea$export$a3bc9b8ed74fc($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.format.failure\"));\n            return false;\n        }\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> file format check OK !\");\n        // check object format end\n        /////////////////////////////////////////////////\n        let check = true;\n        ///////////////////////////////////////////////\n        // Checking the imported content\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> checking import file content...\");\n        for (const element of content)if (element.hasOwnProperty(\"name\") && typeof element.name === \"string\" && element.hasOwnProperty(\"params\") && element.params instanceof Array) {\n            for (const effect of element.params)if (!(effect.hasOwnProperty(\"filterType\") && $97b1237a45b106ea$export$c67e46de1ec7dfa6.hasOwnProperty(effect.filterType))) {\n                check = false;\n                break;\n            }\n            if (!check) break;\n        } else {\n            check = false;\n            break;\n        }\n        if (!check) {\n            $97b1237a45b106ea$export$a3bc9b8ed74fc(\"import -> file content check KO !\");\n            $97b1237a45b106ea$export$a3bc9b8ed74fc($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.format.failure\"));\n            return false;\n        }\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> file content check OK !\");\n        // check content end\n        /////////////////////////////////////////////////\n        // The preset libray must be replaced ?\n        if (options.hasOwnProperty(\"replaceLibrary\") && options.replaceLibrary) {\n            await game.settings.set(\"tokenmagic\", \"presets\", content);\n            $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> preset library replaced\");\n            $97b1237a45b106ea$export$bef1f36f5486a6a3($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.success\"));\n            return true;\n        }\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        let it = 0;\n        for (const element of content){\n            const preset = pst.find((el)=>el.name === element.name);\n            if (preset == null) {\n                $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> add: \" + element.name);\n                pst.push(element);\n                it++;\n            } else if (options.hasOwnProperty(\"overwrite\") && options.overwrite) {\n                const index = pst.indexOf(preset);\n                if (index > -1) {\n                    $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> overwrite: \" + element.name);\n                    pst[index] = element;\n                    it++;\n                }\n            } else $97b1237a45b106ea$export$c106dd0671a0fc2d(\"import -> ignored: \" + element.name + \" -> already exists\");\n        }\n        await game.settings.set(\"tokenmagic\", \"presets\", pst);\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> \" + it + \" preset(s) added to the library\");\n        $97b1237a45b106ea$export$bef1f36f5486a6a3($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.success\"));\n        return true;\n    }\n    async function _importTemplateSettingsContent(content, options = {}) {\n        ///////////////////////////////////////////////\n        // Checking the imported object format\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> checking import file format...\");\n        if (!(content instanceof Object)) {\n            $97b1237a45b106ea$export$a3bc9b8ed74fc(\"import -> file format check KO !\");\n            $97b1237a45b106ea$export$a3bc9b8ed74fc($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.format.failure\"));\n            return false;\n        }\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> file format check OK !\");\n        // check object format end\n        /////////////////////////////////////////////////\n        await game.settings.set(\"tokenmagic\", \"autoTemplateSettings\", content);\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"import -> automatic template settings replaced\");\n        $97b1237a45b106ea$export$bef1f36f5486a6a3($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.success\"));\n        return true;\n    }\n    async function resetPresetLibrary() {\n        if (!game.user.isGM) return;\n        if (confirm($97b1237a45b106ea$var$i18n(\"TMFX.preset.reset.message\"))) try {\n            await game.settings.set(\"tokenmagic\", \"presets\", (0, $ff7eec2964ce8415$export$9381e89181e5b461));\n            ui.notifications.info($97b1237a45b106ea$var$i18n(\"TMFX.preset.reset.success\"));\n        } catch (e) {\n            $97b1237a45b106ea$export$a3bc9b8ed74fc(e.message);\n        }\n    }\n    async function importPresetLibraryFromURL(url, options = {}) {\n        try {\n            $.getJSON(url, async function(content) {\n                return await _importPresetContent(content, options);\n            });\n        } catch (e) {\n            $97b1237a45b106ea$export$a3bc9b8ed74fc(e.message);\n            $97b1237a45b106ea$export$a3bc9b8ed74fc($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.failure\"));\n            return false;\n        }\n    }\n    async function importPresetLibraryFromPath(path, options = {}) {\n        try {\n            const response = await fetch(path);\n            const content = await response.json();\n            return await _importPresetContent(content, options);\n        } catch (e) {\n            $97b1237a45b106ea$export$a3bc9b8ed74fc(e.message);\n            $97b1237a45b106ea$export$a3bc9b8ed74fc($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.failure\"));\n            return false;\n        }\n    }\n    async function importTemplateSettingsFromPath(path, options = {}) {\n        try {\n            const response = await fetch(path);\n            const content = await response.json();\n            return await _importTemplateSettingsContent(content, options);\n        } catch (e) {\n            $97b1237a45b106ea$export$a3bc9b8ed74fc(e.message);\n            $97b1237a45b106ea$export$a3bc9b8ed74fc($97b1237a45b106ea$var$i18n(\"TMFX.preset.import.failure\"));\n            return false;\n        }\n    }\n    async function importPresetLibrary() {\n        const path = \"modules/tokenmagic/import\";\n        new FilePicker({\n            type: \"json\",\n            current: path,\n            callback: importPresetLibraryFromPath\n        }).browse();\n    }\n    function exportPresetLibrary(exportName = \"tmfx-presets\") {\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null || typeof pst !== \"object\") return false;\n        $97b1237a45b106ea$var$exportObjectAsJson(pst, exportName);\n    }\n    async function importTemplateSettings() {\n        const path = \"modules/tokenmagic/import\";\n        new FilePicker({\n            type: \"json\",\n            current: path,\n            callback: importTemplateSettingsFromPath\n        }).browse();\n    }\n    function exportTemplateSettings(exportName = \"tmfx-template-settings\") {\n        let pst = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        if (pst == null || typeof pst !== \"object\") return false;\n        $97b1237a45b106ea$var$exportObjectAsJson(pst, exportName);\n    }\n    function getPresets(libraryName = (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).MAIN) {\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null || typeof pst !== \"object\") return [];\n        return pst.filter((preset)=>preset.library === libraryName);\n    }\n    function _getPresetTemplateDefaultTexture(presetName, presetLibrary = (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).TEMPLATE) {\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        const preset = pst.find((el)=>el[\"name\"] === presetName && el[\"library\"] === presetLibrary);\n        if (!(preset == null) && preset.hasOwnProperty(\"defaultTexture\")) return $97b1237a45b106ea$export$3bebb302ab08af33(preset.defaultTexture);\n        else return null;\n    }\n    function getPreset(presetName) {\n        let pName = null, pLibrary = null;\n        let argIsObj = presetName instanceof Object;\n        const { name: name, library: library, ...adjustmentProp } = argIsObj ? presetName : {};\n        if (argIsObj) {\n            if (presetName.hasOwnProperty(\"name\")) pName = presetName.name;\n            if (presetName.hasOwnProperty(\"library\")) pLibrary = presetName.library;\n        } else pName = presetName;\n        if (pLibrary == null || typeof pLibrary !== \"string\") pLibrary = (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).MAIN;\n        if (typeof pName !== \"string\") return undefined;\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null || typeof pst !== \"object\") return undefined;\n        const preset = pst.find((el)=>el[\"name\"] === pName && el[\"library\"] === pLibrary);\n        if (!(preset == null) && preset.hasOwnProperty(\"params\") && preset.params instanceof Array) {\n            for (const [filterProp, filterPropVal] of Object.entries(adjustmentProp)){\n                //log(`getPreset ${filterProp}: ${filterPropVal}`);\n                for (const param of preset.params)if (param.hasOwnProperty(filterProp)) param[filterProp] = filterPropVal;\n            }\n            return deepClone(preset.params);\n        }\n        return undefined;\n    }\n    async function deletePreset(presetName, silent = false) {\n        if (!game.user.isGM) {\n            if (!silent) ui.notifications.warn($97b1237a45b106ea$var$i18n(\"TMFX.preset.delete.permission.failure\"));\n            return false;\n        }\n        let pName = null, pLibrary = null;\n        if (presetName instanceof Object) {\n            if (presetName.hasOwnProperty(\"name\")) pName = presetName.name;\n            if (presetName.hasOwnProperty(\"library\")) pLibrary = presetName.library;\n        } else pName = presetName;\n        if (pLibrary == null || typeof pLibrary !== \"string\") pLibrary = (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).MAIN;\n        if (typeof pName !== \"string\") {\n            if (!silent) ui.notifications.error($97b1237a45b106ea$var$i18n(\"TMFX.preset.delete.params.failure\"));\n            return false;\n        }\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null) {\n            if (!silent) ui.notifications.warn($97b1237a45b106ea$var$i18n(\"TMFX.preset.delete.empty.failure\"));\n            return false;\n        }\n        let state = true;\n        const preset = pst.find((el)=>el[\"name\"] === pName && el[\"library\"] === pLibrary);\n        if (preset == null) {\n            if (!silent) ui.notifications.warn($97b1237a45b106ea$var$i18n(\"TMFX.preset.delete.notfound.failure\"));\n            state = false;\n        } else {\n            const index = pst.indexOf(preset);\n            if (index > -1) {\n                pst.splice(index, 1);\n                try {\n                    await game.settings.set(\"tokenmagic\", \"presets\", pst);\n                    if (!silent) ui.notifications.info($97b1237a45b106ea$var$i18n(\"TMFX.preset.delete.success\"));\n                } catch (e) {\n                    if (!silent) ui.notifications.error(e.message);\n                    console.error(e);\n                    state = false;\n                }\n            }\n        }\n        return state;\n    }\n    async function addPreset(presetName, params1, silent = false) {\n        if (!game.user.isGM) {\n            if (!silent) ui.notifications.warn($97b1237a45b106ea$var$i18n(\"TMFX.preset.add.permission.failure\"));\n            return false;\n        }\n        let pName = null, pLibrary = null, pDefaultTexture = null;\n        if (presetName instanceof Object) {\n            if (presetName.hasOwnProperty(\"name\")) pName = presetName.name;\n            if (presetName.hasOwnProperty(\"library\")) pLibrary = presetName.library;\n            if (presetName.hasOwnProperty(\"defaultTexture\")) pDefaultTexture = $97b1237a45b106ea$export$3bebb302ab08af33(presetName.defaultTexture);\n        } else pName = presetName;\n        if (pLibrary == null || typeof pLibrary !== \"string\") pLibrary = (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).MAIN;\n        if (typeof pDefaultTexture !== \"string\") pDefaultTexture = null;\n        if (typeof pName !== \"string\" && !(params1 instanceof Array)) {\n            if (!silent) ui.notifications.error($97b1237a45b106ea$var$i18n(\"TMFX.preset.add.params.failure\"));\n            return false;\n        }\n        for (const param of params1)param.filterId = pName;\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        let presetObject = {};\n        presetObject.name = pName;\n        presetObject.library = pLibrary;\n        presetObject.params = params1;\n        if (pDefaultTexture != null) presetObject.defaultTexture = pDefaultTexture;\n        let state = true;\n        if (pst == null) pst = [\n            presetObject\n        ];\n        else {\n            const preset = pst.find((el)=>el[\"name\"] === pName && el[\"library\"] === pLibrary);\n            if (preset == null) pst.push(presetObject);\n            else {\n                if (!silent) ui.notifications.warn($97b1237a45b106ea$var$i18n(\"TMFX.preset.add.duplicate.failure\"));\n                state = false;\n            }\n        }\n        if (state) try {\n            await game.settings.set(\"tokenmagic\", \"presets\", pst);\n            if (!silent) ui.notifications.info($97b1237a45b106ea$var$i18n(\"TMFX.preset.add.success\"));\n        } catch (e) {\n            if (!silent) ui.notifications.error(e.message);\n            console.error(e);\n            state = false;\n        }\n        return state;\n    }\n    return {\n        addFilters: addFilters,\n        addFiltersOnSelected: addFiltersOnSelected,\n        addFiltersOnTargeted: addFiltersOnTargeted,\n        addUpdateFilters: addUpdateFilters,\n        addUpdateFiltersOnSelected: addUpdateFiltersOnSelected,\n        addUpdateFiltersOnTargeted: addUpdateFiltersOnTargeted,\n        deleteFilters: deleteFilters,\n        deleteFiltersOnSelected: deleteFiltersOnSelected,\n        deleteFiltersOnTargeted: deleteFiltersOnTargeted,\n        updateFilters: updateFilters,\n        updateFiltersOnSelected: updateFiltersOnSelected,\n        updateFiltersOnTargeted: updateFiltersOnTargeted,\n        updateFiltersByPlaceable: updateFiltersByPlaceable,\n        hasFilterType: hasFilterType,\n        hasFilterId: hasFilterId,\n        importTemplateSettings: importTemplateSettings,\n        importTemplateSettingsFromPath: importTemplateSettingsFromPath,\n        exportTemplateSettings: exportTemplateSettings,\n        exportPresetLibrary: exportPresetLibrary,\n        importPresetLibrary: importPresetLibrary,\n        importPresetLibraryFromURL: importPresetLibraryFromURL,\n        importPresetLibraryFromPath: importPresetLibraryFromPath,\n        resetPresetLibrary: resetPresetLibrary,\n        getPresets: getPresets,\n        getPreset: getPreset,\n        addPreset: addPreset,\n        deletePreset: deletePreset,\n        getControlledPlaceables: $97b1237a45b106ea$export$674b9bd489502778,\n        getTargetedTokens: $97b1237a45b106ea$export$c0c03469ba031852,\n        getPlaceableById: $97b1237a45b106ea$export$5008448b4c27fa2b,\n        get filterTypes () {\n            return $97b1237a45b106ea$export$c67e46de1ec7dfa6;\n        },\n        _assignFilters: _assignFilters,\n        _loadFilters: _loadFilters,\n        _clearImgFiltersByPlaceable: _clearImgFiltersByPlaceable,\n        _getAnimeMap: (0, $c1844ae22deae2c0$export$b229f242afc35ae9).getAnimeMap,\n        _updateFilters: _updateFilters,\n        _updateTemplateData: _updateTemplateData,\n        _singleLoadFilters: _singleLoadFilters,\n        _cachedContainer: _cachedContainer,\n        _checkFilterId: _checkFilterId,\n        _getPresetTemplateDefaultTexture: _getPresetTemplateDefaultTexture\n    };\n}\nconst $97b1237a45b106ea$export$480e4c19201e4e74 = $97b1237a45b106ea$export$4367b12d875874d3();\nasync function $97b1237a45b106ea$var$compilingShaders() {\n    // Caching filters to prevent freezing on first-time loading (shader compilation time)\n    // https://www.html5gamedevs.com/topic/43652-shader-compile-performance/\n    let params1 = {\n        enabled: true,\n        dummy: true\n    };\n    $97b1237a45b106ea$export$480e4c19201e4e74._cachedContainer.filters = [];\n    const filterTypes = Object.keys($97b1237a45b106ea$export$c67e46de1ec7dfa6);\n    for (const filterType of filterTypes){\n        params1.filterType = filterType;\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(`Caching ${filterType}`);\n        $97b1237a45b106ea$export$480e4c19201e4e74._cachedContainer.filters.push(new $97b1237a45b106ea$export$c67e46de1ec7dfa6[filterType](params1));\n    }\n    $97b1237a45b106ea$export$bef1f36f5486a6a3(\"Compiling shaders...\");\n    let tmpRenderTexture = new PIXI.RenderTexture.create({\n        width: 4,\n        height: 4\n    });\n    // A call to render triggers the compilation of all the shaders bound to the filters.\n    canvas.app.renderer.render($97b1237a45b106ea$export$480e4c19201e4e74._cachedContainer, {\n        renderTexture: tmpRenderTexture\n    });\n    $97b1237a45b106ea$export$bef1f36f5486a6a3(\"Shaders compiled for the GPU and ready!\");\n}\nfunction $97b1237a45b106ea$var$initSocketListener() {\n    // Activate the listener only for the One\n    const theOne = game.users.find((user)=>user.isGM && user.active);\n    if (theOne && game.user !== theOne) return;\n    // Listener the listening\n    game.socket.on($97b1237a45b106ea$var$moduleTM, async (data)=>{\n        if (data == null || !data.hasOwnProperty(\"tmAction\")) return;\n        async function updateFlags(targetFlag) {\n            // getting the scene coming from the socket\n            let scene = game.scenes.get(data.tmViewedScene);\n            if (scene == null) return;\n            // preparing flag data (with -= if the data is null)\n            let updateData;\n            if (data.tmFlag == null) updateData = {\n                [`flags.tokenmagic.-=${targetFlag}`]: null\n            };\n            else updateData = {\n                [`flags.tokenmagic.${targetFlag}`]: data.tmFlag\n            };\n            updateData[\"_id\"] = data.tmPlaceableId;\n            // updating the placeable in the scene\n            await scene.updateEmbeddedDocuments(data.tmPlaceableType, [\n                updateData\n            ]);\n        }\n        switch(data.tmAction){\n            case $97b1237a45b106ea$export$157d7b8c087faa7b.SET_FLAG:\n                await updateFlags(`filters`);\n                break;\n            case $97b1237a45b106ea$export$157d7b8c087faa7b.SET_ANIME_FLAG:\n                await updateFlags(`animeInfo`);\n                break;\n        }\n    });\n}\nasync function $97b1237a45b106ea$var$requestLoadFilters(placeable, startTimeout = 0) {\n    let reqTimer;\n    placeable.loadingRequest = true;\n    function launchRequest(placeable) {\n        reqTimer = setTimeout(()=>{\n            if (placeable == null) return;\n            let check = placeable._TMFXcheckSprite();\n            if (check == null) {\n                placeable.loadingRequest = false;\n                return;\n            } else if (check) $97b1237a45b106ea$export$480e4c19201e4e74._singleLoadFilters(placeable);\n            else launchRequest(placeable);\n        }, 35);\n    }\n    function setRequestTimeOut() {\n        setTimeout(()=>{\n            clearTimeout(reqTimer);\n        }, 2000);\n    }\n    setTimeout(()=>{\n        setRequestTimeOut();\n        launchRequest(placeable);\n    }, startTimeout);\n}\nfunction $97b1237a45b106ea$var$getAnchor(direction, angle, shapeType) {\n    if (shapeType === \"circle\" || shapeType === \"rect\") return {\n        x: 0.5,\n        y: 0.5\n    };\n    // Compute emanation anchor point from the orthonormal bounding rect containing the polygon.\n    // Not complete (to rework later), but ok with cardinal and half-cardinal directions\n    let dirRad = direction * Math.PI / 180;\n    let angleRad = angle * Math.PI / 180;\n    let cosRa1 = Math.cos(dirRad - angleRad / 2);\n    let rsinRa1 = -Math.sin(dirRad - angleRad / 2);\n    let cosRa2 = Math.cos(dirRad + angleRad / 2);\n    let rsinRa2 = -Math.sin(dirRad + angleRad / 2);\n    let x = 0, y = 1;\n    if (cosRa1 < 0 && cosRa2 < 0) x = 1;\n    else if (cosRa1 < 0 || cosRa2 < 0) x = (Math.sin(-dirRad - Math.PI / 2) + 1) / 2;\n    if (rsinRa1 < 0 && rsinRa2 < 0) y = 0;\n    else if (rsinRa1 < 0 || rsinRa2 < 0) y = (Math.cos(-dirRad - Math.PI / 2) + 1) / 2;\n    return {\n        x: x,\n        y: y\n    };\n}\nfunction $97b1237a45b106ea$var$onMeasuredTemplateConfig(data, html) {\n    if (!$97b1237a45b106ea$export$62085f0363fc8c9()) html[0].querySelector(\".file-picker\").dataset.type = \"imagevideo\";\n    function compare(a, b) {\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n    }\n    let tmTemplate = data.object;\n    if (isNewerVersion(game.version, \"0.8\")) tmTemplate = tmTemplate.object;\n    let opacity = tmTemplate.template.alpha;\n    let tint = \"\";\n    let currentPreset = (0, $165cdb672a404ae7$export$680af52575be3523);\n    // getting custom data\n    let tmfxTemplateData = tmTemplate.document.getFlag(\"tokenmagic\", \"templateData\");\n    if (!(tmfxTemplateData == null) && tmfxTemplateData instanceof Object) {\n        opacity = tmTemplate.document.tmfxTextureAlpha = tmfxTemplateData.opacity;\n        tint = tmTemplate.document.tmfxTint = tmfxTemplateData.tint ? PIXI.utils.hex2string(tmfxTemplateData.tint) : \"\";\n        if (tmfxTemplateData.preset !== undefined) currentPreset = tmfxTemplateData.preset;\n    }\n    let filters = tmTemplate.document.getFlag(\"tokenmagic\", \"filters\");\n    let presets = $97b1237a45b106ea$export$480e4c19201e4e74.getPresets((0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).TEMPLATE);\n    if (filters && filters instanceof Array && filters.length >= 1) currentPreset = filters[0].tmFilters.tmFilterId;\n    // forming our injected html\n    let tmfxValues = \"\";\n    let selected = \"\";\n    tmfxValues += `<option value=\"${0, $165cdb672a404ae7$export$680af52575be3523}\"></option>`;\n    presets.sort(compare).forEach((preset)=>{\n        selected = preset.name === currentPreset ? \" selected\" : \"\";\n        tmfxValues += `<option value=\"${preset.name}\"${selected}>${preset.name}</option>`;\n    });\n    let divPreset = `\r\n    <div class=\"form-group\">\r\n        <label>${$97b1237a45b106ea$var$i18n(\"TMFX.template.opacity\")}</label>\r\n        <div class=\"form-fields\">\r\n            <input type=\"range\" name=\"flags.tokenmagic.templateData.opacity\" value=\"${opacity}\" min=\"0.0\" max=\"1.0\" step=\"0.05\" data-dtype=\"Number\"/>\r\n            <span class=\"range-value\">${opacity}</span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${$97b1237a45b106ea$var$i18n(\"TMFX.template.fx\")}</label>\r\n        <select class=\"tmfx\" name=\"flags.tokenmagic.templateData.preset\" data-dtype=\"String\">\r\n        ${tmfxValues}\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${$97b1237a45b106ea$var$i18n(\"TMFX.template.tint\")}</label>\r\n        <div class=\"form-fields\">\r\n            <input class=\"color\" type=\"text\" name=\"flags.tokenmagic.templateData.tint\" value=\"${tint}\"/>\r\n            <input type=\"color\" value=\"${tint}\" data-edit=\"flags.tokenmagic.templateData.tint\"/>\r\n        </div>\r\n    </div>\r\n    `;\n    // injecting\n    const htmlForm = html.find(\".form-group\");\n    htmlForm.last().after(divPreset);\n    $(html).css({\n        \"min-height\": \"525px\"\n    });\n}\n/* -------------------------------------------- */ /*  Setup Management                            */ /* -------------------------------------------- */ Hooks.on(\"ready\", ()=>{\n    $97b1237a45b106ea$export$bef1f36f5486a6a3(\"Hook -> ready\");\n    (0, $a48a250facc06caa$export$182eb7a8e7220720)();\n    $97b1237a45b106ea$var$initSocketListener();\n    window.TokenMagic = $97b1237a45b106ea$export$480e4c19201e4e74;\n    if (!game.modules.get(\"lib-wrapper\")?.active && game.user.isGM) ui.notifications.warn(\"The 'Token Magic FX' module recommends to install and activate the 'libWrapper' module.\");\n    Hooks.on(\"renderMeasuredTemplateConfig\", $97b1237a45b106ea$var$onMeasuredTemplateConfig);\n});\n/* -------------------------------------------- */ /*  Canvas Management                           */ /* -------------------------------------------- */ Hooks.once(\"canvasInit\", (canvas1)=>{\n    if (!$97b1237a45b106ea$export$4d149f3fface3da5()) {\n        $97b1237a45b106ea$export$bef1f36f5486a6a3(\"Init -> canvasInit -> caching shaders\");\n        $97b1237a45b106ea$var$compilingShaders();\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"canvasInit\", (canvas1)=>{\n    $97b1237a45b106ea$export$bef1f36f5486a6a3(\"Hook -> canvasInit\");\n    $97b1237a45b106ea$export$2bf9d1af56f0b37d();\n    (0, $c1844ae22deae2c0$export$b229f242afc35ae9).deactivateAnimation();\n    (0, $c1844ae22deae2c0$export$b229f242afc35ae9).resetAnimation();\n});\n/* -------------------------------------------- */ Hooks.on(\"canvasReady\", (canvas1)=>{\n    $97b1237a45b106ea$export$bef1f36f5486a6a3(\"Hook -> canvasReady\");\n    if (!window.hasOwnProperty(\"TokenMagic\")) window.TokenMagic = $97b1237a45b106ea$export$480e4c19201e4e74;\n    if (canvas1 == null) return;\n    const tokens = canvas1.tokens.placeables;\n    $97b1237a45b106ea$export$480e4c19201e4e74._loadFilters(tokens);\n    const tiles = canvas1.tiles.placeables;\n    $97b1237a45b106ea$export$480e4c19201e4e74._loadFilters(tiles);\n    const drawings = canvas1.drawings.placeables;\n    $97b1237a45b106ea$export$480e4c19201e4e74._loadFilters(drawings);\n    const templates = canvas1.templates.placeables;\n    $97b1237a45b106ea$export$480e4c19201e4e74._loadFilters(templates);\n    (0, $c1844ae22deae2c0$export$b229f242afc35ae9).activateAnimation();\n});\n/* -------------------------------------------- */ /*  Scenes Management                           */ /* -------------------------------------------- */ Hooks.on(\"deleteScene\", (document1)=>{\n    if (document1.id !== game.user.viewedScene) return;\n    (0, $c1844ae22deae2c0$export$b229f242afc35ae9).deactivateAnimation();\n    (0, $c1844ae22deae2c0$export$b229f242afc35ae9).resetAnimation();\n});\n/* -------------------------------------------- */ /*  Settings Management                         */ /* -------------------------------------------- */ Hooks.on(\"closeSettingsConfig\", ()=>{\n    $97b1237a45b106ea$export$2bf9d1af56f0b37d();\n});\n/* -------------------------------------------- */ /*  Tokens Management                           */ /* -------------------------------------------- */ Hooks.on(\"createToken\", (document1)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (document1.flags?.tokenmagic?.filters) {\n        let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.TOKEN);\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteToken\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateToken\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if ([\n        \"img\",\n        \"tint\",\n        \"height\",\n        \"width\",\n        \"name\"\n    ].some((k)=>k in options)) {\n        let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.TOKEN);\n        (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $97b1237a45b106ea$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250);\n    } else $97b1237a45b106ea$export$480e4c19201e4e74._updateFilters(document1, options, $97b1237a45b106ea$export$f2f6f02affe07ab5.TOKEN);\n});\n/* -------------------------------------------- */ /*  Tiles Management                            */ /* -------------------------------------------- */ Hooks.on(\"createTile\", (document1)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (document1.flags?.tokenmagic?.filters) {\n        const placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.TILE);\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteTile\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateTile\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (options.texture?.src || options.overhead) {\n        const placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.TILE);\n        (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $97b1237a45b106ea$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250);\n    } else $97b1237a45b106ea$export$480e4c19201e4e74._updateFilters(document1, options, $97b1237a45b106ea$export$f2f6f02affe07ab5.TILE);\n});\n/* -------------------------------------------- */ /*  Drawings Management                         */ /* -------------------------------------------- */ Hooks.on(\"createDrawing\", (document1)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (document1.flags?.tokenmagic?.filters) {\n        let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.DRAWING);\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteDrawing\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateDrawing\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (!options.flags?.tokenmagic || options.x || options.y) {\n        let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.DRAWING);\n        (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $97b1237a45b106ea$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250);\n    } else $97b1237a45b106ea$export$480e4c19201e4e74._updateFilters(document1, options, $97b1237a45b106ea$export$f2f6f02affe07ab5.DRAWING);\n});\n/* -------------------------------------------- */ /*  Measured Templates Management               */ /* -------------------------------------------- */ Hooks.on(\"createMeasuredTemplate\", (document1)=>{\n    const scene = document1.parent;\n    if (!(scene == null) && scene.id === game.user.viewedScene && document1.flags?.tokenmagic?.filters) {\n        let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE);\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250); // request to load filters (when pixi containers are ready)\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteMeasuredTemplate\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateMeasuredTemplate\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    let placeable = $97b1237a45b106ea$export$5008448b4c27fa2b(document1._id, $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE);\n    if (!placeable) return;\n    if (options.texture) {\n        (0, $c1844ae22deae2c0$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $97b1237a45b106ea$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $97b1237a45b106ea$var$requestLoadFilters(placeable, 250); // querying filters reload (when pixi containers are ready)\n    } else if (!placeable.loadingRequest) {\n        $97b1237a45b106ea$export$480e4c19201e4e74._updateFilters(document1, options, $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE);\n        $97b1237a45b106ea$export$480e4c19201e4e74._updateTemplateData(document1, options, $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"preUpdateMeasuredTemplate\", async (document1, options)=>{\n    function getTint() {\n        if (options.flags?.tokenmagic?.templateData?.tint !== undefined) return options.flags.tokenmagic.templateData.tint;\n        else if (document1.flags?.tokenmagic?.tint !== undefined) return document1.flags.tokenmagic.tint;\n        else return \"\";\n    }\n    function getFX() {\n        if (options.flags?.tokenmagic?.templateData?.preset !== undefined) return options.flags.tokenmagic.templateData.preset;\n        else if (document1.flags?.tokenmagic?.templateData?.preset !== undefined) return document1.flags.tokenmagic.templateData.preset;\n        else if (document1.tmfxPreset !== undefined) return document1.tmfxPreset;\n        else return 0, $165cdb672a404ae7$export$680af52575be3523;\n    }\n    function getDirection() {\n        if (options.direction) return options.direction;\n        else if (document1.direction) return document1.direction;\n        else return 0;\n    }\n    function getAngle() {\n        if (options.angle) return options.angle;\n        else if (document1.angle) return document1.angle;\n        else return 0;\n    }\n    function getShapeType() {\n        if (options.t) return options.t;\n        else if (document1.t) return document1.t;\n        else return \"ITSBAD\";\n    }\n    let measuredTemplateInstance = canvas.templates.get(document1._id);\n    let templateTint = getTint();\n    let presetUpdate = options.flags?.tokenmagic?.templateData?.preset !== undefined;\n    let tintUpdate = options.flags?.tokenmagic?.templateData?.tint !== undefined;\n    let directionUpdate = options.hasOwnProperty(\"direction\");\n    let angleUpdate = options.hasOwnProperty(\"angle\");\n    let typeUpdate = options.hasOwnProperty(\"t\");\n    if (tintUpdate) options.flags.tokenmagic.templateData.tint = templateTint !== \"\" ? Color.from(templateTint).valueOf() : null;\n    if (presetUpdate || tintUpdate || directionUpdate || typeUpdate || angleUpdate) {\n        let templateFX = getFX();\n        if (templateFX !== (0, $165cdb672a404ae7$export$680af52575be3523)) {\n            let anchor = $97b1237a45b106ea$var$getAnchor(getDirection(), getAngle(), getShapeType());\n            let presetOptions = {\n                name: templateFX,\n                library: (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).TEMPLATE,\n                anchorX: anchor.x,\n                anchorY: anchor.y\n            };\n            if (templateTint && templateTint !== \"\") presetOptions.color = Color.from(templateTint).valueOf();\n            let preset = $97b1237a45b106ea$export$480e4c19201e4e74.getPreset(presetOptions);\n            if (!(preset == null)) {\n                if (presetUpdate) await measuredTemplateInstance.TMFXaddFilters(preset, true);\n                else await measuredTemplateInstance.TMFXaddUpdateFilters(preset);\n            }\n        } else await measuredTemplateInstance.TMFXdeleteFilters();\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"preCreateMeasuredTemplate\", (document1)=>{\n    // Do nothing if we're on a 3D Canvas scene\n    if (game.Levels3DPreview?._active) return;\n    // Apply auto-preset if needed\n    const templates = (0, $4c34bd360e81b010$export$804072f25096732f).getSystemTemplates();\n    if (templates?.enabled) templates.preCreateMeasuredTemplate?.(document1);\n    const hasFlags = document1.flags;\n    let hasPreset = false;\n    let hasTint = false;\n    let hasOpacity = false;\n    let hasFlagsNoOptions = false;\n    if (hasFlags && document1.flags.tokenmagic?.options) {\n        const opt = document1.flags.tokenmagic.options;\n        if (opt.tmfxPreset) {\n            document1.tmfxPreset = opt.tmfxPreset;\n            hasPreset = true;\n        }\n        if (opt.tmfxTint) {\n            document1.tmfxTint = opt.tmfxTint;\n            hasTint = true;\n        }\n        if (opt.tmfxTextureAlpha) {\n            document1.tmfxTextureAlpha = opt.tmfxTextureAlpha;\n            hasOpacity = true;\n        }\n        if (opt.tmfxTexture) {\n            document1.texture = opt.tmfxTexture;\n            document1.updateSource({\n                texture: opt.tmfxTexture\n            });\n        }\n    } else hasFlagsNoOptions = true;\n    let hasTexture = document1.texture && document1.texture !== \"\";\n    let newFilters = [];\n    let tmfxBaseFlags = {\n        tokenmagic: {\n            filters: null,\n            templateData: null,\n            options: null\n        }\n    };\n    if (hasFlags && hasFlagsNoOptions) {\n        // the measured template comes with tokenmagic flags ? It is a copy ! We do nothing.\n        if (document1.flags.tokenmagic) return;\n        document1.flags = mergeObject(document1.flags, tmfxBaseFlags, true, true);\n    }\n    // normalizing color to value if needed\n    if (hasTint && typeof document1.tmfxTint !== \"number\") document1.tmfxTint = Color.from(document1.tmfxTint).valueOf();\n    let tmfxFiltersData = null;\n    // FX to add ?\n    if (hasPreset) {\n        // Compute shader anchor point\n        let anchor = $97b1237a45b106ea$var$getAnchor(document1.direction, document1.angle, document1.t);\n        // Constructing the preset search object\n        let pstSearch = {\n            name: document1.tmfxPreset,\n            library: (0, $ff7eec2964ce8415$export$19612c32a2f7f4cd).TEMPLATE,\n            anchorX: anchor.x,\n            anchorY: anchor.y\n        };\n        // Adding tint if needed\n        if (hasTint) pstSearch.color = document1.tmfxTint;\n        // Retrieving the preset\n        let preset = $97b1237a45b106ea$export$480e4c19201e4e74.getPreset(pstSearch);\n        if (!(preset == null) && preset instanceof Array) {\n            let defaultTex = $97b1237a45b106ea$export$480e4c19201e4e74._getPresetTemplateDefaultTexture(pstSearch.name);\n            if (!(defaultTex == null) && !hasTexture) document1.updateSource({\n                texture: defaultTex\n            });\n            let persist = true;\n            // Constructing the filter flag parameters\n            for (const params1 of preset){\n                if (!params1.filterType || !$97b1237a45b106ea$export$c67e46de1ec7dfa6.hasOwnProperty(params1.filterType)) {\n                    // one invalid ? all rejected.\n                    persist = false;\n                    break;\n                }\n                // getPreset MUST provide a filter id\n                if (!params1.filterId) {\n                    persist = false;\n                    break;\n                }\n                if (!params1.enabled || !(typeof params1.enabled === \"boolean\")) params1.enabled = true;\n                params1.placeableId = null;\n                params1.filterInternalId = randomID();\n                params1.filterOwner = game.data.userId;\n                params1.placeableType = $97b1237a45b106ea$export$f2f6f02affe07ab5.TEMPLATE;\n                newFilters.push({\n                    tmFilters: {\n                        tmFilterId: params1.filterId,\n                        tmFilterInternalId: params1.filterInternalId,\n                        tmFilterType: params1.filterType,\n                        tmFilterOwner: params1.filterOwner,\n                        tmParams: params1\n                    }\n                });\n            }\n            if (persist) tmfxFiltersData = newFilters;\n        }\n    } else document1.tmfxPreset = (0, $165cdb672a404ae7$export$680af52575be3523);\n    if (!hasOpacity) document1.tmfxTextureAlpha = 1;\n    if (!hasTint) document1.tmfxTint = null;\n    let tmfxFlags = {\n        templateData: {\n            opacity: document1.tmfxTextureAlpha,\n            tint: document1.tmfxTint\n        },\n        filters: tmfxFiltersData,\n        options: null\n    };\n    document1.updateSource({\n        flags: {\n            tokenmagic: tmfxFlags\n        }\n    });\n});\n\n\nexport {$97b1237a45b106ea$export$c67e46de1ec7dfa6 as FilterType, $97b1237a45b106ea$export$f2f6f02affe07ab5 as PlaceableType, $97b1237a45b106ea$export$157d7b8c087faa7b as SocketAction, $97b1237a45b106ea$export$24d33a6f4bffea69 as broadcast, $97b1237a45b106ea$export$73ccc1811a23c47 as isActiveModule, $97b1237a45b106ea$export$a3e1d0865041c250 as getMinPadding, $97b1237a45b106ea$export$db02b1003f6b14db as isAdditivePaddingConfig, $97b1237a45b106ea$export$4d149f3fface3da5 as isFilterCachingDisabled, $97b1237a45b106ea$export$62085f0363fc8c9 as isVideoDisabled, $97b1237a45b106ea$export$485113ed30b22bb8 as isTheOne, $97b1237a45b106ea$export$ae4b89d79d01bd2b as mustBroadCast, $97b1237a45b106ea$export$2bf9d1af56f0b37d as autosetPaddingMode, $97b1237a45b106ea$export$222530a21fa4a417 as isZOrderConfig, $97b1237a45b106ea$export$4876a704e2bf90fb as isAnimationDisabled, $97b1237a45b106ea$export$bef1f36f5486a6a3 as log, $97b1237a45b106ea$export$c106dd0671a0fc2d as warn, $97b1237a45b106ea$export$a3bc9b8ed74fc as error, $97b1237a45b106ea$export$3bebb302ab08af33 as fixPath, $97b1237a45b106ea$export$674b9bd489502778 as getControlledPlaceables, $97b1237a45b106ea$export$c0c03469ba031852 as getTargetedTokens, $97b1237a45b106ea$export$5008448b4c27fa2b as getPlaceableById, $97b1237a45b106ea$export$45dd0c4934db71d0 as objectAssign, $97b1237a45b106ea$export$4367b12d875874d3 as TokenMagic, $97b1237a45b106ea$export$480e4c19201e4e74 as Magic};\n//# sourceMappingURL=tokenmagicBundle.js.map\n","import { FilterAdjustment } from '../fx/filters/FilterAdjustment.js';\r\nimport { FilterAscii } from '../fx/filters/FilterAscii.js';\r\nimport { FilterXBloom } from '../fx/filters/FilterAdvancedBloom.js';\r\nimport { FilterDot } from '../fx/filters/FilterDot.js';\r\nimport { FilterDistortion } from '../fx/filters/FilterDistortion.js';\r\nimport { FilterOldFilm } from '../fx/filters/FilterOldFilm.js';\r\nimport { FilterGlow } from '../fx/filters/FilterGlow.js';\r\nimport { FilterOutline } from '../fx/filters/FilterOutline.js';\r\nimport { FilterBevel } from '../fx/filters/FilterBevel.js';\r\nimport { FilterDropShadow } from '../fx/filters/FilterDropShadow.js';\r\nimport { FilterTwist } from '../fx/filters/FilterTwist.js';\r\nimport { FilterZoomBlur } from '../fx/filters/FilterZoomBlur.js';\r\nimport { FilterBlur } from '../fx/filters/FilterBlur.js';\r\nimport { FilterShockwave } from '../fx/filters/FilterShockWave.js';\r\nimport { FilterBulgePinch } from '../fx/filters/FilterBulgePinch.js';\r\nimport { FilterRemoveShadow } from '../fx/filters/FilterRemoveShadow.js';\r\nimport { FilterRays } from '../fx/filters/FilterRays.js';\r\nimport { FilterFog } from '../fx/filters/FilterFog.js';\r\nimport { FilterXFog } from '../fx/filters/FilterXFog.js';\r\nimport { FilterElectric } from '../fx/filters/FilterElectric.js';\r\nimport { FilterWaves } from '../fx/filters/FilterWaves.js';\r\nimport { FilterFire } from '../fx/filters/FilterFire.js';\r\nimport { FilterFumes } from '../fx/filters/FilterFumes.js';\r\nimport { FilterFlood } from '../fx/filters/FilterFlood.js';\r\nimport { FilterSmoke } from '../fx/filters/FilterSmoke.js';\r\nimport { FilterForceField } from '../fx/filters/FilterForceField.js';\r\nimport { FilterMirrorImages } from '../fx/filters/FilterMirrorImages.js';\r\nimport { FilterXRays } from '../fx/filters/FilterXRays.js';\r\nimport { FilterLiquid } from '../fx/filters/FilterLiquid.js';\r\nimport { FilterGleamingGlow } from '../fx/filters/FilterGleamingGlow.js';\r\nimport { FilterPixelate } from '../fx/filters/FilterPixelate.js';\r\nimport { FilterSpiderWeb } from '../fx/filters/FilterSpiderWeb.js';\r\nimport { FilterSolarRipples } from '../fx/filters/FilterSolarRipples.js';\r\nimport { FilterGlobes } from '../fx/filters/FilterGlobes.js';\r\nimport { FilterTransform } from '../fx/filters/FilterTransform.js';\r\nimport { FilterSplash } from '../fx/filters/FilterSplash.js';\r\nimport { FilterPolymorph } from '../fx/filters/FilterPolymorph.js';\r\nimport { FilterXFire } from '../fx/filters/FilterXFire.js';\r\nimport { FilterSprite } from '../fx/filters/FilterSprite.js';\r\nimport { FilterSpriteMask } from '../fx/filters/FilterSpriteMask.js';\r\nimport { FilterReplaceColor } from '../fx/filters/FilterReplaceColor.js';\r\nimport { FilterDDTint } from '../fx/filters/FilterDDTint.js';\r\nimport { Anime } from '../fx/Anime.js';\r\nimport { allPresets, PresetsLibrary } from '../fx/presets/defaultpresets.js';\r\nimport { tmfxDataMigration } from '../migration/migration.js';\r\nimport { emptyPreset } from './constants.js';\r\nimport './proto/PlaceableObjectProto.js';\r\nimport { FilterCRT } from '../fx/filters/FilterCRT.js';\r\nimport { FilterRGBSplit } from '../fx/filters/FilterRGBSplit.js';\r\nimport { TokenMagicSettings } from './settings.js';\r\n\r\n/*\r\n\r\nIt's getting messy here !\r\nI will fix it in a future version\r\n(+ duplicated code to factorize and code to improve)\r\n\r\n*/\r\n\r\nconst moduleTM = 'module.tokenmagic';\r\n\r\n// Filters Class Keys\r\nexport const FilterType = {\r\n\tadjustment: FilterAdjustment,\r\n\tascii: FilterAscii,\r\n\tdot: FilterDot,\r\n\tdistortion: FilterDistortion,\r\n\tcrt: FilterCRT,\r\n\toldfilm: FilterOldFilm,\r\n\tglow: FilterGlow,\r\n\toutline: FilterOutline,\r\n\tbevel: FilterBevel,\r\n\txbloom: FilterXBloom,\r\n\tshadow: FilterDropShadow,\r\n\ttwist: FilterTwist,\r\n\tzoomblur: FilterZoomBlur,\r\n\tblur: FilterBlur,\r\n\tbulgepinch: FilterBulgePinch,\r\n\tzapshadow: FilterRemoveShadow,\r\n\tray: FilterRays,\r\n\tfog: FilterFog,\r\n\txfog: FilterXFog,\r\n\telectric: FilterElectric,\r\n\twave: FilterWaves,\r\n\tshockwave: FilterShockwave,\r\n\tfire: FilterFire,\r\n\tfumes: FilterFumes,\r\n\tsmoke: FilterSmoke,\r\n\tflood: FilterFlood,\r\n\timages: FilterMirrorImages,\r\n\tfield: FilterForceField,\r\n\txray: FilterXRays,\r\n\tliquid: FilterLiquid,\r\n\txglow: FilterGleamingGlow,\r\n\tpixel: FilterPixelate,\r\n\tweb: FilterSpiderWeb,\r\n\tripples: FilterSolarRipples,\r\n\tglobes: FilterGlobes,\r\n\ttransform: FilterTransform,\r\n\tsplash: FilterSplash,\r\n\tpolymorph: FilterPolymorph,\r\n\txfire: FilterXFire,\r\n\tsprite: FilterSprite,\r\n\tspriteMask: FilterSpriteMask,\r\n\treplaceColor: FilterReplaceColor,\r\n\tddTint: FilterDDTint,\r\n\trgbSplit: FilterRGBSplit,\r\n};\r\n\r\nexport const PlaceableType = {\r\n\tTOKEN: Token.embeddedName,\r\n\tTILE: Tile.embeddedName,\r\n\tTEMPLATE: MeasuredTemplate.embeddedName,\r\n\tDRAWING: Drawing.embeddedName,\r\n\tNOT_SUPPORTED: null,\r\n};\r\n\r\nfunction i18n(key) {\r\n\treturn game.i18n.localize(key);\r\n}\r\n\r\nasync function exportObjectAsJson(exportObj, exportName) {\r\n\tlet jsonStr = JSON.stringify(exportObj, null, 4);\r\n\r\n\tconst a = document.createElement('a');\r\n\tconst file = new Blob([jsonStr], { type: 'plain/text' });\r\n\r\n\ta.href = URL.createObjectURL(file);\r\n\ta.download = exportName + '.json';\r\n\ta.click();\r\n\r\n\tURL.revokeObjectURL(a.href);\r\n}\r\n\r\nexport const SocketAction = {\r\n\tSET_FLAG: 'TMFXSetFlag',\r\n\tSET_ANIME_FLAG: 'TMFXSetAnimeFlag',\r\n};\r\n\r\nexport function broadcast(placeable, flag, socketAction) {\r\n\tconst data = {\r\n\t\ttmAction: socketAction,\r\n\t\ttmPlaceableId: placeable.id,\r\n\t\ttmPlaceableType: placeable._TMFXgetPlaceableType(),\r\n\t\ttmFlag: flag,\r\n\t\ttmViewedScene: game.user.viewedScene,\r\n\t};\r\n\tgame.socket.emit(moduleTM, data, (resp) => {});\r\n}\r\n\r\nexport function isActiveModule(moduleName) {\r\n\treturn game.modules.has(moduleName) && game.modules.get(moduleName).active === true;\r\n}\r\n\r\nexport function getMinPadding() {\r\n\treturn game.settings.get('tokenmagic', 'minPadding');\r\n}\r\n\r\nexport function isAdditivePaddingConfig() {\r\n\treturn game.settings.get('tokenmagic', 'useAdditivePadding');\r\n}\r\n\r\nexport function isFilterCachingDisabled() {\r\n\treturn game.settings.get('tokenmagic', 'disableCaching');\r\n}\r\n\r\nexport function isVideoDisabled() {\r\n\treturn game.settings.get('tokenmagic', 'disableVideo');\r\n}\r\n\r\nexport function isTheOne() {\r\n\tconst theOne = game.users.find((user) => user.isGM && user.active);\r\n\treturn theOne && game.user === theOne;\r\n}\r\n\r\nexport function mustBroadCast() {\r\n\treturn game.settings.get('tokenmagic', 'fxPlayerPermission') && !isTheOne();\r\n}\r\n\r\nexport function autosetPaddingMode() {\r\n\tcanvas.app.renderer.filter.useMaxPadding = !isAdditivePaddingConfig();\r\n}\r\n\r\nexport function isZOrderConfig() {\r\n\treturn game.settings.get('tokenmagic', 'useZOrder');\r\n}\r\n\r\nexport function isAnimationDisabled() {\r\n\treturn game.settings.get('tokenmagic', 'disableAnimations');\r\n}\r\n\r\nexport function log(output) {\r\n\tlet logged = '%cTokenMagic %c| ' + output;\r\n\tconsole.log(logged, 'color:#4BC470', 'color:#B3B3B3');\r\n}\r\n\r\nexport function warn(output) {\r\n\tlet logged = 'TokenMagic | ' + output;\r\n\tconsole.warn(logged);\r\n}\r\n\r\nexport function error(output) {\r\n\tlet logged = 'TokenMagic | ' + output;\r\n\tconsole.error(logged);\r\n}\r\n\r\nexport function fixPath(path) {\r\n\t/*\r\n      /prefix/...               =>   ...\r\n      /modules/tokenmagic/...   =>   modules/tokenmagic/...\r\n  */\r\n\tif (path) {\r\n\t\tconst base = '/modules/tokenmagic';\r\n\t\tconst url = new URL(path, window.location.href);\r\n\r\n\t\tif (url.origin === window.location.origin) {\r\n\t\t\tlet prefix = '/';\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (ROUTE_PREFIX) {\r\n\t\t\t\t\tprefix = new URL(ROUTE_PREFIX, window.location.origin).pathname;\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {}\r\n\r\n\t\t\tpath = url.pathname;\r\n\r\n\t\t\tif (prefix === '/') {\r\n\t\t\t\tpath = path.slice(1);\r\n\t\t\t} else if (path.startsWith(prefix) && (path.length === prefix.length || path[prefix.length] === '/')) {\r\n\t\t\t\tpath = path.slice(prefix.length + 1);\r\n\t\t\t} else if (path.startsWith(base) && (path.length === base.length || path[base.length] === '/')) {\r\n\t\t\t\tpath = path.slice(1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpath = url.href;\r\n\t\t}\r\n\t}\r\n\r\n\treturn path;\r\n}\r\n\r\nexport function getControlledPlaceables() {\r\n\tconst authorizedLayers = [canvas.tokens, canvas.tiles, canvas.drawings];\r\n\tif (authorizedLayers.some((layer) => layer === canvas.activeLayer)) {\r\n\t\treturn canvas.activeLayer.placeables.filter((p) => p.controlled === true) || [];\r\n\t} else return [];\r\n}\r\n\r\nexport function getTargetedTokens() {\r\n\treturn canvas.tokens.placeables.filter((placeable) => placeable.isTargeted);\r\n}\r\n\r\nexport function getPlaceableById(id, type) {\r\n\tlet placeable = null;\r\n\r\n\tfunction findPlaceable(placeables, id) {\r\n\t\tlet rplaceable = null;\r\n\t\tif (!(placeables == null) && placeables.length > 0) {\r\n\t\t\trplaceable = placeables.find((n) => n.id === id);\r\n\t\t}\r\n\t\treturn rplaceable;\r\n\t}\r\n\r\n\tswitch (type) {\r\n\t\tcase PlaceableType.TOKEN:\r\n\t\t\tplaceable = findPlaceable(canvas.tokens.placeables, id);\r\n\t\t\tbreak;\r\n\t\tcase PlaceableType.TILE:\r\n\t\t\tplaceable = findPlaceable(canvas.tiles.placeables, id);\r\n\t\t\tbreak;\r\n\t\tcase PlaceableType.TEMPLATE:\r\n\t\t\tplaceable = findPlaceable(canvas.templates.placeables, id);\r\n\t\t\tbreak;\r\n\t\tcase PlaceableType.DRAWING:\r\n\t\t\tplaceable = findPlaceable(canvas.drawings.placeables, id);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn placeable;\r\n}\r\n\r\n/**\r\n * Randomizes params using 'randomized' field.\r\n * 'randomized' is an object consisting of keys named after params to be randomized, which map either\r\n * to arrays or ranges which will be used to generate a random value.\r\n * e.g.\r\n * {\r\n *  param1: ['foo1', 'foo2', 'foo3'],\r\n *  param2: { list: ['foo1', 'foo2', 'foo3'], link: 'param5'},\r\n *  param3: { val1: 0, val2: 1, step: 0.1},\r\n *  param4: { val1: 0, val2: 10, step: 1, link: 'param6'},\r\n * }\r\n * 'link' will assign the same generated value to one other param.\r\n */\r\nfunction randomizeParams(params) {\r\n\tif (params.randomized.hasOwnProperty('active') && !params.randomized.active) return;\r\n\r\n\tfor (const [param, opts] of Object.entries(params.randomized)) {\r\n\t\tlet rVal;\r\n\t\tif (Array.isArray(opts) || opts.hasOwnProperty('list')) {\r\n\t\t\tconst list = opts.list ?? opts;\r\n\t\t\trVal = list[Math.floor(Math.random() * list.length)];\r\n\t\t} else {\r\n\t\t\tconst min = Math.min(opts.val1, opts.val2);\r\n\t\t\tconst max = Math.max(opts.val1, opts.val2);\r\n\t\t\tconst step = opts.step ?? 1;\r\n\t\t\tconst stepsInRange = (max - min + (Number.isInteger(step) ? 1 : 0)) / step;\r\n\t\t\trVal = Math.floor(Math.random() * stepsInRange) * step + min;\r\n\t\t}\r\n\t\tsetProperty(params, param, rVal);\r\n\t\tif (opts.hasOwnProperty('link')) setProperty(params, opts.link, rVal);\r\n\t}\r\n}\r\n\r\nexport function objectAssign(target, ...sources) {\r\n\tsources.forEach((source) => {\r\n\t\tObject.keys(source).forEach((key) => {\r\n\t\t\tconst s_val = source[key];\r\n\t\t\tconst t_val = target[key];\r\n\t\t\tif (s_val instanceof Array) target[key] = [...s_val];\r\n\t\t\telse\r\n\t\t\t\ttarget[key] =\r\n\t\t\t\t\tt_val && s_val && typeof t_val === 'object' && typeof s_val === 'object' ? objectAssign(t_val, s_val) : s_val;\r\n\t\t});\r\n\t});\r\n\treturn target;\r\n}\r\n\r\nexport function TokenMagic() {\r\n\tlet _cachedContainer = new PIXI.Container();\r\n\r\n\tasync function addFiltersOnSelected(paramsArray, replace = false) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst controlled = getControlledPlaceables();\r\n\r\n\t\tif (!(controlled == null) && controlled.length > 0) {\r\n\t\t\tfor (const placeable of controlled) {\r\n\t\t\t\tawait addFilters(placeable, paramsArray, replace);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addUpdateFiltersOnSelected(paramsArray) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst controlled = getControlledPlaceables();\r\n\r\n\t\tif (!(controlled == null) && controlled.length > 0) {\r\n\t\t\tfor (const placeable of controlled) {\r\n\t\t\t\tawait addUpdateFilters(placeable, paramsArray);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addUpdateFiltersOnTargeted(paramsArray) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst targeted = getTargetedTokens();\r\n\r\n\t\tif (!(targeted == null) && targeted.length > 0) {\r\n\t\t\tfor (const token of targeted) {\r\n\t\t\t\tawait addUpdateFilters(token, paramsArray);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addFiltersOnTargeted(paramsArray, replace = false) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst targeted = getTargetedTokens();\r\n\r\n\t\tif (!(targeted == null) && targeted.length > 0) {\r\n\t\t\tfor (const token of targeted) {\r\n\t\t\t\tawait addFilters(token, paramsArray, replace);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addFilters(placeable, paramsArray, replace = false) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\t\tif (!(paramsArray instanceof Array && paramsArray.length > 0) || placeable == null) return;\r\n\r\n\t\tlet actualFlags = replace ? null : placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tlet newFlags = [];\r\n\r\n\t\tfor (const params of paramsArray) {\r\n\t\t\tif (!params.hasOwnProperty('filterType') || !FilterType.hasOwnProperty(params.filterType)) {\r\n\t\t\t\t// one invalid ? all rejected.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!params.hasOwnProperty('rank')) {\r\n\t\t\t\tparams.rank = placeable._TMFXgetMaxFilterRank();\r\n\t\t\t}\r\n\r\n\t\t\tif (!params.hasOwnProperty('filterId') || params.filterId == null) {\r\n\t\t\t\tparams.filterId = randomID();\r\n\t\t\t}\r\n\r\n\t\t\tif (!params.hasOwnProperty('enabled') || !(typeof params.enabled === 'boolean')) {\r\n\t\t\t\tparams.enabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (params.hasOwnProperty('randomized')) {\r\n\t\t\t\trandomizeParams(params);\r\n\t\t\t}\r\n\r\n\t\t\tparams.placeableId = placeable.id;\r\n\t\t\tparams.filterInternalId = randomID();\r\n\t\t\tparams.filterOwner = game.data.userId;\r\n\t\t\tparams.placeableType = placeable._TMFXgetPlaceableType();\r\n\t\t\tparams.updateId = randomID();\r\n\r\n\t\t\tnewFlags.push({\r\n\t\t\t\ttmFilters: {\r\n\t\t\t\t\ttmFilterId: params.filterId,\r\n\t\t\t\t\ttmFilterInternalId: params.filterInternalId,\r\n\t\t\t\t\ttmFilterType: params.filterType,\r\n\t\t\t\t\ttmFilterOwner: params.filterOwner,\r\n\t\t\t\t\ttmParams: params,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!(actualFlags == null)) {\r\n\t\t\tnewFlags = actualFlags.concat(newFlags);\r\n\t\t}\r\n\r\n\t\tawait placeable._TMFXsetFlag(newFlags);\r\n\t}\r\n\r\n\tasync function addUpdateFilters(placeable, paramsArray) {\r\n\t\tif (!paramsArray instanceof Array || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tlet workingFlags = [];\r\n\t\tif (flags) {\r\n\t\t\tflags.forEach((flag) => {\r\n\t\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet newFlags = [];\r\n\t\tlet updateParams;\r\n\r\n\t\tfor (const params of paramsArray) {\r\n\t\t\tupdateParams = false;\r\n\t\t\tparams.updateId = randomID();\r\n\r\n\t\t\tif (params.hasOwnProperty('randomized')) {\r\n\t\t\t\trandomizeParams(params);\r\n\t\t\t}\r\n\r\n\t\t\tworkingFlags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilters.tmFilterId === params.filterId && flag.tmFilters.tmFilterType === params.filterType) {\r\n\t\t\t\t\tif (flag.tmFilters.hasOwnProperty('tmParams')) {\r\n\t\t\t\t\t\tobjectAssign(flag.tmFilters.tmParams, params);\r\n\t\t\t\t\t\tupdateParams = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (!updateParams) {\r\n\t\t\t\tif (!params.hasOwnProperty('filterType') || !FilterType.hasOwnProperty(params.filterType)) {\r\n\t\t\t\t\t// one invalid ? all rejected (even the update)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.hasOwnProperty('rank')) {\r\n\t\t\t\t\tparams.rank = placeable._TMFXgetMaxFilterRank();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.hasOwnProperty('filterId') || params.filterId == null) {\r\n\t\t\t\t\tparams.filterId = randomID();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.hasOwnProperty('enabled') || !(typeof params.enabled === 'boolean')) {\r\n\t\t\t\t\tparams.enabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.placeableId = placeable.id;\r\n\t\t\t\tparams.filterInternalId = randomID();\r\n\t\t\t\tparams.filterOwner = game.data.userId;\r\n\t\t\t\tparams.placeableType = placeable._TMFXgetPlaceableType();\r\n\r\n\t\t\t\tnewFlags.push({\r\n\t\t\t\t\ttmFilters: {\r\n\t\t\t\t\t\ttmFilterId: params.filterId,\r\n\t\t\t\t\t\ttmFilterInternalId: params.filterInternalId,\r\n\t\t\t\t\t\ttmFilterType: params.filterType,\r\n\t\t\t\t\t\ttmFilterOwner: params.filterOwner,\r\n\t\t\t\t\t\ttmParams: params,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newFlags.length > 0) {\r\n\t\t\tworkingFlags = newFlags.concat(workingFlags);\r\n\t\t}\r\n\r\n\t\tawait placeable._TMFXsetFlag(workingFlags);\r\n\t}\r\n\r\n\tasync function updateFilters(paramsArray) {\r\n\t\tif (params == null || !params.hasOwnProperty('filterId')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet placeableIdSet = new Set();\r\n\t\tlet animations = Anime.getAnimeMap();\r\n\t\tif (animations.size <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tanimations.forEach((anime, id) => {\r\n\t\t\tlet filterIdMatch = (params) => params.filterId === anime.puppet.filterId;\r\n\t\t\tif (paramsArray.some(filterIdMatch)) {\r\n\t\t\t\tplaceableIdSet.add(anime.puppet.placeableId);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (placeableIdSet.size <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const placeableId of placeableIdSet) {\r\n\t\t\t// we must browse the collection of placeables whatever their types\r\n\t\t\t// we have just a filterId.\r\n\t\t\tlet placeable = getPlaceableById(placeableId, PlaceableType.TOKEN);\r\n\t\t\tif (placeable == null) {\r\n\t\t\t\tplaceable = getPlaceableById(placeableId, PlaceableType.TEMPLATE);\r\n\t\t\t}\r\n\t\t\tif (placeable == null) {\r\n\t\t\t\tplaceable = getPlaceableById(placeableId, PlaceableType.TILE);\r\n\t\t\t}\r\n\t\t\tif (placeable == null) {\r\n\t\t\t\tplaceable = getPlaceableById(placeableId, PlaceableType.DRAWING);\r\n\t\t\t}\r\n\t\t\tif (!(placeable == null) && placeable instanceof PlaceableObject) {\r\n\t\t\t\tawait updateFiltersByPlaceable(placeable, paramsArray);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function updateFiltersOnSelected(paramsArray) {\r\n\t\tlet placeables = getControlledPlaceables();\r\n\r\n\t\tif (placeables == null || placeables.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof paramsArray === 'string') {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\t\tif (!(paramsArray instanceof Array) || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const placeable of placeables) {\r\n\t\t\tawait updateFiltersByPlaceable(placeable, paramsArray);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function updateFiltersOnTargeted(paramsArray) {\r\n\t\tlet targeted = getTargetedTokens();\r\n\r\n\t\tif (targeted == null || targeted.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof paramsArray === 'string') {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tif (!(paramsArray instanceof Array) || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const token of targeted) {\r\n\t\t\tawait updateFiltersByPlaceable(token, paramsArray);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function updateFiltersByPlaceable(placeable, paramsArray) {\r\n\t\tif (!(paramsArray instanceof Array) || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\treturn;\r\n\t\t} // nothing to update...\r\n\r\n\t\tlet workingFlags = [];\r\n\t\tflags.forEach((flag) => {\r\n\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t});\r\n\r\n\t\tfor (const params of paramsArray) {\r\n\t\t\tparams.updateId = randomID();\r\n\r\n\t\t\tif (params.hasOwnProperty('randomized')) {\r\n\t\t\t\trandomizeParams(params);\r\n\t\t\t}\r\n\r\n\t\t\tworkingFlags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilters.tmFilterId === params.filterId && flag.tmFilters.tmFilterType === params.filterType) {\r\n\t\t\t\t\tif (flag.tmFilters.hasOwnProperty('tmParams')) {\r\n\t\t\t\t\t\tobjectAssign(flag.tmFilters.tmParams, params);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tawait placeable._TMFXsetFlag(workingFlags);\r\n\t}\r\n\r\n\t// Deleting filters on targeted tokens\r\n\tasync function deleteFiltersOnTargeted(filterId = null) {\r\n\t\tlet targeted = getTargetedTokens();\r\n\t\tif (!(targeted == null) && targeted.length > 0) {\r\n\t\t\tfor (const token of targeted) {\r\n\t\t\t\tawait deleteFilters(token, filterId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deleting filters on selected placeable(s)\r\n\tasync function deleteFiltersOnSelected(filterId = null) {\r\n\t\tlet placeables = getControlledPlaceables();\r\n\t\tif (!(placeables == null) && placeables.length > 0) {\r\n\t\t\tfor (const placeable of placeables) {\r\n\t\t\t\tawait deleteFilters(placeable, filterId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deleting all filters on a placeable in parameter\r\n\tasync function deleteFilters(placeable, filterId = null) {\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (filterId == null) {\r\n\t\t\tawait placeable._TMFXunsetFlag();\r\n\t\t\tawait placeable._TMFXunsetAnimeFlag();\r\n\t\t} else if (typeof filterId === 'string') {\r\n\t\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\t\treturn;\r\n\t\t\t} // nothing to delete...\r\n\r\n\t\t\tlet workingFlags = [];\r\n\t\t\tflags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilters.tmFilterId !== filterId) {\r\n\t\t\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (workingFlags.length > 0) await placeable._TMFXsetFlag(workingFlags);\r\n\t\t\telse await placeable._TMFXunsetFlag();\r\n\r\n\t\t\tflags = placeable.document.getFlag('tokenmagic', 'animeInfo');\r\n\t\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\t\treturn;\r\n\t\t\t} // nothing to delete...\r\n\r\n\t\t\tworkingFlags = [];\r\n\t\t\tflags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilterId !== filterId) {\r\n\t\t\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (workingFlags.length > 0) await placeable._TMFXsetAnimeFlag(workingFlags);\r\n\t\t\telse await placeable._TMFXunsetAnimeFlag();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hasFilterType(placeable, filterType) {\r\n\t\tif (placeable == null || filterType == null || !(placeable instanceof PlaceableObject)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst found = flags.find((flag) => flag.tmFilters.tmFilterType === filterType);\r\n\t\tif (found === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction isApplicableUser(tmParams) {\r\n\t\tconst hasUser = (arr) => {\r\n\t\t\treturn arr.includes(game.user.name) || arr.includes(game.user.id);\r\n\t\t};\r\n\r\n\t\tif (\r\n\t\t\t(tmParams.users?.include?.length && !hasUser(tmParams.users.include)) ||\r\n\t\t\t(tmParams.users?.exclude?.length && hasUser(tmParams.users?.exclude))\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction hasFilterId(placeable, filterId) {\r\n\t\tif (placeable == null || !(placeable instanceof PlaceableObject)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\treturn _checkFilterId(placeable, filterId, flags);\r\n\t}\r\n\r\n\tfunction _checkFilterId(placeable, filterId, flags) {\r\n\t\tif (placeable == null || filterId == null || !(placeable instanceof PlaceableObject)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst found = flags.find((flag) => flag.tmFilters.tmFilterId === filterId);\r\n\t\tif (found === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setFilter(placeable, filter) {\r\n\t\tplaceable._TMFXsetRawFilters(filter);\r\n\t}\r\n\r\n\tfunction _loadPersistedValues(params, animeInfos) {\r\n\t\tif (!params.hasOwnProperty('animated')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!animeInfos || animeInfos.length <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const effect of Object.keys(params.animated)) {\r\n\t\t\tfor (const animeInfo of animeInfos.values()) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tanimeInfo.tmFilterId === params.filterId &&\r\n\t\t\t\t\tanimeInfo.tmFilterInternalId === params.filterInternalId &&\r\n\t\t\t\t\tanimeInfo.tmFilterEffect === effect\r\n\t\t\t\t) {\r\n\t\t\t\t\tparams.animated[effect].active = false;\r\n\t\t\t\t\tparams[effect] = animeInfo.tmFilterEffectValue;\r\n\r\n\t\t\t\t\t// special case for halfCosOscillation\r\n\t\t\t\t\tif (params.animated[effect].animType === 'halfCosOscillation') {\r\n\t\t\t\t\t\tif (params.animated[effect].val1 !== animeInfo.tmFilterEffectValue) {\r\n\t\t\t\t\t\t\tparams.animated[effect].val2 = params.animated[effect].val1;\r\n\t\t\t\t\t\t\tparams.animated[effect].val1 = animeInfo.tmFilterEffectValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _assignFilters(placeable, filters, bulkLoading = false) {\r\n\t\tif (filters == null || placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Assign all filters to the placeable\r\n\t\tlet animeInfos = placeable.document.getFlag('tokenmagic', 'animeInfo');\r\n\t\tfor (const filterInfo of filters) {\r\n\t\t\t// if bulkloading is on, we update with terminal value if it exists\r\n\t\t\tif (bulkLoading) {\r\n\t\t\t\tlet params = filterInfo.tmFilters.tmParams;\r\n\t\t\t\t_loadPersistedValues(params, animeInfos);\r\n\t\t\t}\r\n\t\t\t_assignFilter(placeable, filterInfo);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _assignFilter(placeable, filterInfo) {\r\n\t\tif (filterInfo == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Do not assign the filter if it has been explicitly set as not applicable to the current user\r\n\t\tif (!isApplicableUser(filterInfo.tmFilters.tmParams)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet workingFilterInfo = duplicate(filterInfo);\r\n\t\tworkingFilterInfo.tmFilters.tmParams.placeableId = placeable.id;\r\n\t\tworkingFilterInfo.tmFilters.tmParams.placeableType = placeable._TMFXgetPlaceableType();\r\n\t\tlet filter = new FilterType[workingFilterInfo.tmFilters.tmFilterType](workingFilterInfo.tmFilters.tmParams);\r\n\t\tsetFilter(placeable, filter);\r\n\t}\r\n\r\n\tfunction _loadFilters(placeables, bulkLoading = true) {\r\n\t\tif (!(placeables == null)) {\r\n\t\t\tplaceables\r\n\t\t\t\t.slice()\r\n\t\t\t\t.reverse()\r\n\t\t\t\t.forEach((placeable) => {\r\n\t\t\t\t\t_singleLoadFilters(placeable, bulkLoading);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _singleLoadFilters(placeable, bulkLoading = false) {\r\n\t\tlet placeableType = placeable._TMFXgetPlaceableType();\r\n\t\tif (placeableType === PlaceableType.TEMPLATE) {\r\n\t\t\tlet updateData = placeable.document.getFlag('tokenmagic', 'templateData');\r\n\t\t\tif (!(updateData == null)) {\r\n\t\t\t\tplaceable.document.tmfxTextureAlpha = placeable._TMFXgetSprite().alpha = updateData.opacity;\r\n\t\t\t\tplaceable.document.tmfxTint = updateData.tint;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet filters = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (!(filters == null)) {\r\n\t\t\tif (placeableType === PlaceableType.TEMPLATE) {\r\n\t\t\t\t// get the first filterId to assign tmfxPreset\r\n\t\t\t\tplaceable.document.tmfxPreset = filters[0].tmFilters.tmFilterId;\r\n\t\t\t}\r\n\t\t\t_assignFilters(placeable, filters, bulkLoading);\r\n\t\t}\r\n\t\tplaceable.loadingRequest = false;\r\n\t}\r\n\r\n\tfunction _fxPseudoEqual(flagObject, filterObject) {\r\n\t\tfunction isObject(object) {\r\n\t\t\treturn object != null && typeof object === 'object';\r\n\t\t}\r\n\r\n\t\tconst flagKeys = Object.keys(flagObject);\r\n\r\n\t\tfor (const flagKey of flagKeys) {\r\n\t\t\tlet flagValue = flagObject[flagKey];\r\n\t\t\tconst filterValue = filterObject[flagKey];\r\n\t\t\tconst areObjects = isObject(flagValue) && isObject(filterValue);\r\n\r\n\t\t\tif (areObjects && !_fxPseudoEqual(flagValue, filterValue)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// handling the Infinity exception with loops... thanks to JSON serialization...\r\n\t\t\tif (!areObjects && flagKey === 'loops' && flagValue === null) {\r\n\t\t\t\tflagValue = Infinity; // not nice, but works ! :-)=\r\n\t\t\t}\r\n\r\n\t\t\tif (!areObjects && flagValue !== filterValue) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _updateTemplateData(data, options, placeableType) {\r\n\t\tif (!options.hasOwnProperty('flags') || !options.flags.hasOwnProperty('tokenmagic')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (data == null || !data.hasOwnProperty('_id')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet placeable = getPlaceableById(data._id, placeableType);\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet updateData = placeable.document.getFlag('tokenmagic', 'templateData');\r\n\t\tif (!(updateData == null)) {\r\n\t\t\tplaceable._TMFXgetSprite().alpha = updateData.opacity;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _updateFilters(data, options, placeableType) {\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\toptions.hasOwnProperty('flags') &&\r\n\t\t\t\toptions.flags.hasOwnProperty('tokenmagic') &&\r\n\t\t\t\t(options.flags.tokenmagic.hasOwnProperty('filters') || options.flags.tokenmagic.hasOwnProperty('-=filters'))\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (data == null || !data.hasOwnProperty('_id')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet placeable = getPlaceableById(data._id, placeableType);\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Shortcut when all filters are deleted\r\n\t\tif (options.flags.tokenmagic.hasOwnProperty('-=filters')) {\r\n\t\t\tAnime.removeAnimation(data._id); // removing animations on this placeable\r\n\t\t\tthis._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet filters = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (filters == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// CROSS-RESEARCH between the anime map and tokenmagic flags to add, delete or update filters on this placeable\r\n\r\n\t\t// we begin by detecting deleted filters\r\n\t\tfor (let anime of Anime.getAnimeMap().values()) {\r\n\t\t\t// we test all the animes that are supposed to be on the placeable\r\n\t\t\tif (anime.puppet.placeableId === placeable.id) {\r\n\t\t\t\t// is the animation present in the tokenmagic flags for this placeable ?\r\n\t\t\t\t// and is it applicable to the current user?\r\n\t\t\t\tlet foundFilter = false;\r\n\t\t\t\tfilters.forEach((filterFlag) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tanime.puppet.filterId === filterFlag.tmFilters.tmFilterId &&\r\n\t\t\t\t\t\tanime.puppet.filterInternalId === filterFlag.tmFilters.tmFilterInternalId &&\r\n\t\t\t\t\t\tanime.puppet.placeableId === filterFlag.tmFilters.tmParams.placeableId &&\r\n\t\t\t\t\t\tisApplicableUser(filterFlag.tmFilters.tmParams)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// we find it !\r\n\t\t\t\t\t\tfoundFilter = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Not found, the animation is removed from the AnimeMap as well as the filter on the placeable\r\n\t\t\t\tif (!foundFilter) {\r\n\t\t\t\t\tAnime.removeAnimationByFilterId(data._id, anime.puppet.filterId);\r\n\t\t\t\t\tthis._clearImgFiltersByPlaceable(placeable, anime.puppet.filterId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// we test each tokenmagic filter flag in the placeable\r\n\t\tfilters.forEach((filterFlag) => {\r\n\t\t\tif (filterFlag.tmFilters.hasOwnProperty('tmParams')) {\r\n\t\t\t\t// we get the puppets in anime corresponding to this placeable\r\n\t\t\t\tlet puppets = Anime.getPuppetsByParams(filterFlag.tmFilters.tmParams);\r\n\t\t\t\tif (puppets.length > 0) {\r\n\t\t\t\t\t// we found corresponding filters\r\n\t\t\t\t\tfor (const puppet of puppets) {\r\n\t\t\t\t\t\t// we update if needed\r\n\t\t\t\t\t\tif (!_fxPseudoEqual(filterFlag.tmFilters.tmParams, puppet)) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!puppet.hasOwnProperty('updateId') ||\r\n\t\t\t\t\t\t\t\t(puppet.hasOwnProperty('updateId') && puppet.updateId !== filterFlag.tmFilters.tmParams.updateId)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tpuppet.setTMParams(duplicate(filterFlag.tmFilters.tmParams));\r\n\t\t\t\t\t\t\t\tpuppet.normalizeTMParams();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this is a new filter, we assign it to the placeable\r\n\t\t\t\t\t_assignFilter(placeable, filterFlag);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction _clearImgFiltersByPlaceable(placeable, filterId = null) {\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet filterById = filterId != null && typeof filterId === 'string';\r\n\r\n\t\tfunction destroyClearedFilters(theFilters) {\r\n\t\t\tif (theFilters instanceof Array) {\r\n\t\t\t\tlet tmFilters = theFilters.filter((filter) =>\r\n\t\t\t\t\tfilterById\r\n\t\t\t\t\t\t? filter.hasOwnProperty('filterId') && filter.filterId === filterId\r\n\t\t\t\t\t\t: filter.hasOwnProperty('filterId')\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfor (const filter of tmFilters) {\r\n\t\t\t\t\tfilter.enabled = false;\r\n\t\t\t\t\tfilter.destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction filterTheFiltering(theFilters) {\r\n\t\t\tif (theFilters instanceof Array) {\r\n\t\t\t\tlet tmFilters = theFilters.filter((filter) =>\r\n\t\t\t\t\tfilterById\r\n\t\t\t\t\t\t? !(filter.hasOwnProperty('filterId') && filter.filterId === filterId)\r\n\t\t\t\t\t\t: !filter.hasOwnProperty('filterId')\r\n\t\t\t\t);\r\n\t\t\t\treturn tmFilters.length === 0 ? null : tmFilters;\r\n\t\t\t}\r\n\t\t\treturn theFilters;\r\n\t\t}\r\n\r\n\t\tlet sprite = placeable._TMFXgetSprite();\r\n\t\tif (sprite != null) {\r\n\t\t\tdestroyClearedFilters(sprite.filters);\r\n\t\t\tsprite.filters = filterTheFiltering(sprite.filters);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function _importPresetContent(content, options = {}) {\r\n\t\t// In internal, we can force overwrite\r\n\t\tif (!options.hasOwnProperty('overwrite')) {\r\n\t\t\toptions.overwrite = game.settings.get('tokenmagic', 'importOverwrite');\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////\r\n\t\t// Checking the imported object format\r\n\r\n\t\tlog('import -> checking import file format...');\r\n\t\tif (!(content instanceof Array) || content.length < 1) {\r\n\t\t\terror('import -> file format check KO !');\r\n\t\t\terror(i18n('TMFX.preset.import.format.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlog('import -> file format check OK !');\r\n\t\t// check object format end\r\n\t\t/////////////////////////////////////////////////\r\n\r\n\t\tlet check = true;\r\n\r\n\t\t///////////////////////////////////////////////\r\n\t\t// Checking the imported content\r\n\t\tlog('import -> checking import file content...');\r\n\t\tfor (const element of content) {\r\n\t\t\tif (\r\n\t\t\t\telement.hasOwnProperty('name') &&\r\n\t\t\t\ttypeof element.name === 'string' &&\r\n\t\t\t\telement.hasOwnProperty('params') &&\r\n\t\t\t\telement.params instanceof Array\r\n\t\t\t) {\r\n\t\t\t\tfor (const effect of element.params) {\r\n\t\t\t\t\tif (!(effect.hasOwnProperty('filterType') && FilterType.hasOwnProperty(effect.filterType))) {\r\n\t\t\t\t\t\tcheck = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!check) break;\r\n\t\t\t} else {\r\n\t\t\t\tcheck = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!check) {\r\n\t\t\terror('import -> file content check KO !');\r\n\t\t\terror(i18n('TMFX.preset.import.format.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlog('import -> file content check OK !');\r\n\r\n\t\t// check content end\r\n\t\t/////////////////////////////////////////////////\r\n\r\n\t\t// The preset libray must be replaced ?\r\n\t\tif (options.hasOwnProperty('replaceLibrary') && options.replaceLibrary) {\r\n\t\t\tawait game.settings.set('tokenmagic', 'presets', content);\r\n\t\t\tlog('import -> preset library replaced');\r\n\t\t\tlog(i18n('TMFX.preset.import.success'));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tlet it = 0;\r\n\t\tfor (const element of content) {\r\n\t\t\tconst preset = pst.find((el) => el.name === element.name);\r\n\t\t\tif (preset == null) {\r\n\t\t\t\tlog('import -> add: ' + element.name);\r\n\t\t\t\tpst.push(element);\r\n\t\t\t\tit++;\r\n\t\t\t} else {\r\n\t\t\t\tif (options.hasOwnProperty('overwrite') && options.overwrite) {\r\n\t\t\t\t\tconst index = pst.indexOf(preset);\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlog('import -> overwrite: ' + element.name);\r\n\t\t\t\t\t\tpst[index] = element;\r\n\t\t\t\t\t\tit++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twarn('import -> ignored: ' + element.name + ' -> already exists');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait game.settings.set('tokenmagic', 'presets', pst);\r\n\t\tlog('import -> ' + it + ' preset(s) added to the library');\r\n\t\tlog(i18n('TMFX.preset.import.success'));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync function _importTemplateSettingsContent(content, options = {}) {\r\n\t\t///////////////////////////////////////////////\r\n\t\t// Checking the imported object format\r\n\r\n\t\tlog('import -> checking import file format...');\r\n\t\tif (!(content instanceof Object)) {\r\n\t\t\terror('import -> file format check KO !');\r\n\t\t\terror(i18n('TMFX.preset.import.format.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlog('import -> file format check OK !');\r\n\r\n\t\t// check object format end\r\n\t\t/////////////////////////////////////////////////\r\n\r\n\t\tawait game.settings.set('tokenmagic', 'autoTemplateSettings', content);\r\n\t\tlog('import -> automatic template settings replaced');\r\n\t\tlog(i18n('TMFX.preset.import.success'));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync function resetPresetLibrary() {\r\n\t\tif (!game.user.isGM) return;\r\n\r\n\t\tif (confirm(i18n('TMFX.preset.reset.message'))) {\r\n\t\t\ttry {\r\n\t\t\t\tawait game.settings.set('tokenmagic', 'presets', allPresets);\r\n\t\t\t\tui.notifications.info(i18n('TMFX.preset.reset.success'));\r\n\t\t\t} catch (e) {\r\n\t\t\t\terror(e.message);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importPresetLibraryFromURL(url, options = {}) {\r\n\t\ttry {\r\n\t\t\t$.getJSON(url, async function (content) {\r\n\t\t\t\treturn await _importPresetContent(content, options);\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\terror(e.message);\r\n\t\t\terror(i18n('TMFX.preset.import.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importPresetLibraryFromPath(path, options = {}) {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(path);\r\n\t\t\tconst content = await response.json();\r\n\r\n\t\t\treturn await _importPresetContent(content, options);\r\n\t\t} catch (e) {\r\n\t\t\terror(e.message);\r\n\t\t\terror(i18n('TMFX.preset.import.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importTemplateSettingsFromPath(path, options = {}) {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(path);\r\n\t\t\tconst content = await response.json();\r\n\r\n\t\t\treturn await _importTemplateSettingsContent(content, options);\r\n\t\t} catch (e) {\r\n\t\t\terror(e.message);\r\n\t\t\terror(i18n('TMFX.preset.import.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importPresetLibrary() {\r\n\t\tconst path = 'modules/tokenmagic/import';\r\n\t\tnew FilePicker({\r\n\t\t\ttype: 'json',\r\n\t\t\tcurrent: path,\r\n\t\t\tcallback: importPresetLibraryFromPath,\r\n\t\t}).browse();\r\n\t}\r\n\r\n\tfunction exportPresetLibrary(exportName = 'tmfx-presets') {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null || typeof pst !== 'object') return false;\r\n\t\texportObjectAsJson(pst, exportName);\r\n\t}\r\n\r\n\tasync function importTemplateSettings() {\r\n\t\tconst path = 'modules/tokenmagic/import';\r\n\t\tnew FilePicker({\r\n\t\t\ttype: 'json',\r\n\t\t\tcurrent: path,\r\n\t\t\tcallback: importTemplateSettingsFromPath,\r\n\t\t}).browse();\r\n\t}\r\n\r\n\tfunction exportTemplateSettings(exportName = 'tmfx-template-settings') {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'autoTemplateSettings');\r\n\t\tif (pst == null || typeof pst !== 'object') return false;\r\n\t\texportObjectAsJson(pst, exportName);\r\n\t}\r\n\r\n\tfunction getPresets(libraryName = PresetsLibrary.MAIN) {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null || typeof pst !== 'object') return [];\r\n\t\treturn pst.filter((preset) => preset.library === libraryName);\r\n\t}\r\n\r\n\tfunction _getPresetTemplateDefaultTexture(presetName, presetLibrary = PresetsLibrary.TEMPLATE) {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tconst preset = pst.find((el) => el['name'] === presetName && el['library'] === presetLibrary);\r\n\t\tif (!(preset == null) && preset.hasOwnProperty('defaultTexture')) return fixPath(preset.defaultTexture);\r\n\t\telse return null;\r\n\t}\r\n\r\n\tfunction getPreset(presetName) {\r\n\t\tlet pName = null,\r\n\t\t\tpLibrary = null;\r\n\t\tlet argIsObj = presetName instanceof Object;\r\n\t\tconst { name, library, ...adjustmentProp } = argIsObj ? presetName : {};\r\n\t\tif (argIsObj) {\r\n\t\t\tif (presetName.hasOwnProperty('name')) {\r\n\t\t\t\tpName = presetName.name;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('library')) {\r\n\t\t\t\tpLibrary = presetName.library;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpName = presetName;\r\n\t\t}\r\n\r\n\t\tif (pLibrary == null || typeof pLibrary !== 'string') {\r\n\t\t\tpLibrary = PresetsLibrary.MAIN;\r\n\t\t}\r\n\r\n\t\tif (typeof pName !== 'string') return undefined;\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null || typeof pst !== 'object') return undefined;\r\n\r\n\t\tconst preset = pst.find((el) => el['name'] === pName && el['library'] === pLibrary);\r\n\t\tif (!(preset == null) && preset.hasOwnProperty('params') && preset.params instanceof Array) {\r\n\t\t\tfor (const [filterProp, filterPropVal] of Object.entries(adjustmentProp)) {\r\n\t\t\t\t//log(`getPreset ${filterProp}: ${filterPropVal}`);\r\n\t\t\t\tfor (const param of preset.params) {\r\n\t\t\t\t\tif (param.hasOwnProperty(filterProp)) {\r\n\t\t\t\t\t\tparam[filterProp] = filterPropVal;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn deepClone(preset.params);\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tasync function deletePreset(presetName, silent = false) {\r\n\t\tif (!game.user.isGM) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.delete.permission.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet pName = null,\r\n\t\t\tpLibrary = null;\r\n\r\n\t\tif (presetName instanceof Object) {\r\n\t\t\tif (presetName.hasOwnProperty('name')) {\r\n\t\t\t\tpName = presetName.name;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('library')) {\r\n\t\t\t\tpLibrary = presetName.library;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpName = presetName;\r\n\t\t}\r\n\r\n\t\tif (pLibrary == null || typeof pLibrary !== 'string') {\r\n\t\t\tpLibrary = PresetsLibrary.MAIN;\r\n\t\t}\r\n\r\n\t\tif (typeof pName !== 'string') {\r\n\t\t\tif (!silent) ui.notifications.error(i18n('TMFX.preset.delete.params.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.delete.empty.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet state = true;\r\n\t\tconst preset = pst.find((el) => el['name'] === pName && el['library'] === pLibrary);\r\n\r\n\t\tif (preset == null) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.delete.notfound.failure'));\r\n\t\t\tstate = false;\r\n\t\t} else {\r\n\t\t\tconst index = pst.indexOf(preset);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tpst.splice(index, 1);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait game.settings.set('tokenmagic', 'presets', pst);\r\n\t\t\t\t\tif (!silent) ui.notifications.info(i18n('TMFX.preset.delete.success'));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (!silent) ui.notifications.error(e.message);\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\tstate = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn state;\r\n\t}\r\n\r\n\tasync function addPreset(presetName, params, silent = false) {\r\n\t\tif (!game.user.isGM) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.add.permission.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet pName = null,\r\n\t\t\tpLibrary = null,\r\n\t\t\tpDefaultTexture = null;\r\n\t\tif (presetName instanceof Object) {\r\n\t\t\tif (presetName.hasOwnProperty('name')) {\r\n\t\t\t\tpName = presetName.name;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('library')) {\r\n\t\t\t\tpLibrary = presetName.library;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('defaultTexture')) {\r\n\t\t\t\tpDefaultTexture = fixPath(presetName.defaultTexture);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpName = presetName;\r\n\t\t}\r\n\r\n\t\tif (pLibrary == null || typeof pLibrary !== 'string') {\r\n\t\t\tpLibrary = PresetsLibrary.MAIN;\r\n\t\t}\r\n\r\n\t\tif (typeof pDefaultTexture !== 'string') {\r\n\t\t\tpDefaultTexture = null;\r\n\t\t}\r\n\r\n\t\tif (typeof pName !== 'string' && !(params instanceof Array)) {\r\n\t\t\tif (!silent) ui.notifications.error(i18n('TMFX.preset.add.params.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (const param of params) {\r\n\t\t\tparam.filterId = pName;\r\n\t\t}\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tlet presetObject = {};\r\n\t\tpresetObject.name = pName;\r\n\t\tpresetObject.library = pLibrary;\r\n\t\tpresetObject.params = params;\r\n\t\tif (pDefaultTexture != null) {\r\n\t\t\tpresetObject.defaultTexture = pDefaultTexture;\r\n\t\t}\r\n\r\n\t\tlet state = true;\r\n\t\tif (pst == null) {\r\n\t\t\tpst = [presetObject];\r\n\t\t} else {\r\n\t\t\tconst preset = pst.find((el) => el['name'] === pName && el['library'] === pLibrary);\r\n\t\t\tif (preset == null) pst.push(presetObject);\r\n\t\t\telse {\r\n\t\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.add.duplicate.failure'));\r\n\t\t\t\tstate = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state) {\r\n\t\t\ttry {\r\n\t\t\t\tawait game.settings.set('tokenmagic', 'presets', pst);\r\n\t\t\t\tif (!silent) ui.notifications.info(i18n('TMFX.preset.add.success'));\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!silent) ui.notifications.error(e.message);\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t\tstate = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn state;\r\n\t}\r\n\r\n\treturn {\r\n\t\taddFilters: addFilters,\r\n\t\taddFiltersOnSelected: addFiltersOnSelected,\r\n\t\taddFiltersOnTargeted: addFiltersOnTargeted,\r\n\t\taddUpdateFilters: addUpdateFilters,\r\n\t\taddUpdateFiltersOnSelected: addUpdateFiltersOnSelected,\r\n\t\taddUpdateFiltersOnTargeted: addUpdateFiltersOnTargeted,\r\n\t\tdeleteFilters: deleteFilters,\r\n\t\tdeleteFiltersOnSelected: deleteFiltersOnSelected,\r\n\t\tdeleteFiltersOnTargeted: deleteFiltersOnTargeted,\r\n\t\tupdateFilters: updateFilters,\r\n\t\tupdateFiltersOnSelected: updateFiltersOnSelected,\r\n\t\tupdateFiltersOnTargeted: updateFiltersOnTargeted,\r\n\t\tupdateFiltersByPlaceable: updateFiltersByPlaceable,\r\n\t\thasFilterType: hasFilterType,\r\n\t\thasFilterId: hasFilterId,\r\n\t\timportTemplateSettings: importTemplateSettings,\r\n\t\timportTemplateSettingsFromPath: importTemplateSettingsFromPath,\r\n\t\texportTemplateSettings: exportTemplateSettings,\r\n\t\texportPresetLibrary: exportPresetLibrary,\r\n\t\timportPresetLibrary: importPresetLibrary,\r\n\t\timportPresetLibraryFromURL: importPresetLibraryFromURL,\r\n\t\timportPresetLibraryFromPath: importPresetLibraryFromPath,\r\n\t\tresetPresetLibrary: resetPresetLibrary,\r\n\t\tgetPresets: getPresets,\r\n\t\tgetPreset: getPreset,\r\n\t\taddPreset: addPreset,\r\n\t\tdeletePreset: deletePreset,\r\n\t\tgetControlledPlaceables: getControlledPlaceables,\r\n\t\tgetTargetedTokens: getTargetedTokens,\r\n\t\tgetPlaceableById: getPlaceableById,\r\n\t\tget filterTypes() {\r\n\t\t\treturn FilterType;\r\n\t\t},\r\n\t\t_assignFilters: _assignFilters,\r\n\t\t_loadFilters: _loadFilters,\r\n\t\t_clearImgFiltersByPlaceable: _clearImgFiltersByPlaceable,\r\n\t\t_getAnimeMap: Anime.getAnimeMap,\r\n\t\t_updateFilters: _updateFilters,\r\n\t\t_updateTemplateData: _updateTemplateData,\r\n\t\t_singleLoadFilters: _singleLoadFilters,\r\n\t\t_cachedContainer: _cachedContainer,\r\n\t\t_checkFilterId: _checkFilterId,\r\n\t\t_getPresetTemplateDefaultTexture: _getPresetTemplateDefaultTexture,\r\n\t};\r\n}\r\n\r\nexport const Magic = TokenMagic();\r\n\r\nasync function compilingShaders() {\r\n\t// Caching filters to prevent freezing on first-time loading (shader compilation time)\r\n\t// https://www.html5gamedevs.com/topic/43652-shader-compile-performance/\r\n\r\n\tlet params = { enabled: true, dummy: true };\r\n\r\n\tMagic._cachedContainer.filters = [];\r\n\tconst filterTypes = Object.keys(FilterType);\r\n\tfor (const filterType of filterTypes) {\r\n\t\tparams.filterType = filterType;\r\n\t\tlog(`Caching ${filterType}`);\r\n\t\tMagic._cachedContainer.filters.push(new FilterType[filterType](params));\r\n\t}\r\n\r\n\tlog('Compiling shaders...');\r\n\tlet tmpRenderTexture = new PIXI.RenderTexture.create({ width: 4, height: 4 });\r\n\t// A call to render triggers the compilation of all the shaders bound to the filters.\r\n\tcanvas.app.renderer.render(Magic._cachedContainer, { renderTexture: tmpRenderTexture });\r\n\tlog('Shaders compiled for the GPU and ready!');\r\n}\r\n\r\nfunction initSocketListener() {\r\n\t// Activate the listener only for the One\r\n\tconst theOne = game.users.find((user) => user.isGM && user.active);\r\n\tif (theOne && game.user !== theOne) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Listener the listening\r\n\tgame.socket.on(moduleTM, async (data) => {\r\n\t\tif (data == null || !data.hasOwnProperty('tmAction')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasync function updateFlags(targetFlag) {\r\n\t\t\t// getting the scene coming from the socket\r\n\t\t\tlet scene = game.scenes.get(data.tmViewedScene);\r\n\t\t\tif (scene == null) return;\r\n\r\n\t\t\t// preparing flag data (with -= if the data is null)\r\n\t\t\tlet updateData;\r\n\t\t\tif (data.tmFlag == null) updateData = { [`flags.tokenmagic.-=${targetFlag}`]: null };\r\n\t\t\telse updateData = { [`flags.tokenmagic.${targetFlag}`]: data.tmFlag };\r\n\t\t\tupdateData['_id'] = data.tmPlaceableId;\r\n\r\n\t\t\t// updating the placeable in the scene\r\n\t\t\tawait scene.updateEmbeddedDocuments(data.tmPlaceableType, [updateData]);\r\n\t\t}\r\n\r\n\t\tswitch (data.tmAction) {\r\n\t\t\tcase SocketAction.SET_FLAG:\r\n\t\t\t\tawait updateFlags(`filters`);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SocketAction.SET_ANIME_FLAG:\r\n\t\t\t\tawait updateFlags(`animeInfo`);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nasync function requestLoadFilters(placeable, startTimeout = 0) {\r\n\tlet reqTimer;\r\n\tplaceable.loadingRequest = true;\r\n\r\n\tfunction launchRequest(placeable) {\r\n\t\treqTimer = setTimeout(() => {\r\n\t\t\tif (placeable == null) return;\r\n\t\t\tlet check = placeable._TMFXcheckSprite();\r\n\t\t\tif (check == null) {\r\n\t\t\t\tplaceable.loadingRequest = false;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (check) Magic._singleLoadFilters(placeable);\r\n\t\t\telse launchRequest(placeable);\r\n\t\t}, 35);\r\n\t}\r\n\r\n\tfunction setRequestTimeOut() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tclearTimeout(reqTimer);\r\n\t\t}, 2000);\r\n\t}\r\n\r\n\tsetTimeout(() => {\r\n\t\tsetRequestTimeOut();\r\n\t\tlaunchRequest(placeable);\r\n\t}, startTimeout);\r\n}\r\n\r\nfunction getAnchor(direction, angle, shapeType) {\r\n\tif (shapeType === 'circle' || shapeType === 'rect') return { x: 0.5, y: 0.5 };\r\n\r\n\t// Compute emanation anchor point from the orthonormal bounding rect containing the polygon.\r\n\t// Not complete (to rework later), but ok with cardinal and half-cardinal directions\r\n\tlet dirRad = (direction * Math.PI) / 180;\r\n\tlet angleRad = (angle * Math.PI) / 180;\r\n\r\n\tlet cosRa1 = Math.cos(dirRad - angleRad / 2);\r\n\tlet rsinRa1 = -Math.sin(dirRad - angleRad / 2);\r\n\tlet cosRa2 = Math.cos(dirRad + angleRad / 2);\r\n\tlet rsinRa2 = -Math.sin(dirRad + angleRad / 2);\r\n\r\n\tlet x = 0,\r\n\t\ty = 1;\r\n\r\n\tif (cosRa1 < 0 && cosRa2 < 0) {\r\n\t\tx = 1;\r\n\t} else if (cosRa1 < 0 || cosRa2 < 0) {\r\n\t\tx = (Math.sin(-dirRad - Math.PI / 2) + 1) / 2;\r\n\t}\r\n\r\n\tif (rsinRa1 < 0 && rsinRa2 < 0) {\r\n\t\ty = 0;\r\n\t} else if (rsinRa1 < 0 || rsinRa2 < 0) {\r\n\t\ty = (Math.cos(-dirRad - Math.PI / 2) + 1) / 2;\r\n\t}\r\n\r\n\treturn { x: x, y: y };\r\n}\r\n\r\nfunction onMeasuredTemplateConfig(data, html) {\r\n\tif (!isVideoDisabled()) {\r\n\t\thtml[0].querySelector('.file-picker').dataset.type = 'imagevideo';\r\n\t}\r\n\r\n\tfunction compare(a, b) {\r\n\t\tif (a.name < b.name) return -1;\r\n\t\tif (a.name > b.name) return 1;\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tlet tmTemplate = data.object;\r\n\r\n\tif (isNewerVersion(game.version, '0.8')) {\r\n\t\ttmTemplate = tmTemplate.object;\r\n\t}\r\n\r\n\tlet opacity = tmTemplate.template.alpha;\r\n\tlet tint = '';\r\n\tlet currentPreset = emptyPreset;\r\n\r\n\t// getting custom data\r\n\tlet tmfxTemplateData = tmTemplate.document.getFlag('tokenmagic', 'templateData');\r\n\tif (!(tmfxTemplateData == null) && tmfxTemplateData instanceof Object) {\r\n\t\topacity = tmTemplate.document.tmfxTextureAlpha = tmfxTemplateData.opacity;\r\n\t\ttint = tmTemplate.document.tmfxTint = tmfxTemplateData.tint ? PIXI.utils.hex2string(tmfxTemplateData.tint) : '';\r\n\r\n\t\tif (tmfxTemplateData.preset !== undefined) currentPreset = tmfxTemplateData.preset;\r\n\t}\r\n\tlet filters = tmTemplate.document.getFlag('tokenmagic', 'filters');\r\n\tlet presets = Magic.getPresets(PresetsLibrary.TEMPLATE);\r\n\r\n\tif (filters && filters instanceof Array && filters.length >= 1) currentPreset = filters[0].tmFilters.tmFilterId;\r\n\r\n\t// forming our injected html\r\n\tlet tmfxValues = '';\r\n\tlet selected = '';\r\n\ttmfxValues += `<option value=\"${emptyPreset}\"></option>`;\r\n\tpresets.sort(compare).forEach((preset) => {\r\n\t\tselected = preset.name === currentPreset ? ' selected' : '';\r\n\t\ttmfxValues += `<option value=\"${preset.name}\"${selected}>${preset.name}</option>`;\r\n\t});\r\n\r\n\tlet divPreset = `\r\n    <div class=\"form-group\">\r\n        <label>${i18n('TMFX.template.opacity')}</label>\r\n        <div class=\"form-fields\">\r\n            <input type=\"range\" name=\"flags.tokenmagic.templateData.opacity\" value=\"${opacity}\" min=\"0.0\" max=\"1.0\" step=\"0.05\" data-dtype=\"Number\"/>\r\n            <span class=\"range-value\">${opacity}</span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${i18n('TMFX.template.fx')}</label>\r\n        <select class=\"tmfx\" name=\"flags.tokenmagic.templateData.preset\" data-dtype=\"String\">\r\n        ${tmfxValues}\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${i18n('TMFX.template.tint')}</label>\r\n        <div class=\"form-fields\">\r\n            <input class=\"color\" type=\"text\" name=\"flags.tokenmagic.templateData.tint\" value=\"${tint}\"/>\r\n            <input type=\"color\" value=\"${tint}\" data-edit=\"flags.tokenmagic.templateData.tint\"/>\r\n        </div>\r\n    </div>\r\n    `;\r\n\r\n\t// injecting\r\n\tconst htmlForm = html.find('.form-group');\r\n\thtmlForm.last().after(divPreset);\r\n\r\n\t$(html).css({ 'min-height': '525px' });\r\n}\r\n\r\n/* -------------------------------------------- */\r\n/*  Setup Management                            */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('ready', () => {\r\n\tlog('Hook -> ready');\r\n\ttmfxDataMigration();\r\n\tinitSocketListener();\r\n\twindow.TokenMagic = Magic;\r\n\r\n\tif (!game.modules.get('lib-wrapper')?.active && game.user.isGM)\r\n\t\tui.notifications.warn(\"The 'Token Magic FX' module recommends to install and activate the 'libWrapper' module.\");\r\n\r\n\tHooks.on('renderMeasuredTemplateConfig', onMeasuredTemplateConfig);\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Canvas Management                           */\r\n/* -------------------------------------------- */\r\n\r\nHooks.once('canvasInit', (canvas) => {\r\n\tif (!isFilterCachingDisabled()) {\r\n\t\tlog('Init -> canvasInit -> caching shaders');\r\n\t\tcompilingShaders();\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('canvasInit', (canvas) => {\r\n\tlog('Hook -> canvasInit');\r\n\tautosetPaddingMode();\r\n\tAnime.deactivateAnimation();\r\n\tAnime.resetAnimation();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('canvasReady', (canvas) => {\r\n\tlog('Hook -> canvasReady');\r\n\tif (!window.hasOwnProperty('TokenMagic')) {\r\n\t\twindow.TokenMagic = Magic;\r\n\t}\r\n\tif (canvas == null) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst tokens = canvas.tokens.placeables;\r\n\tMagic._loadFilters(tokens);\r\n\tconst tiles = canvas.tiles.placeables;\r\n\tMagic._loadFilters(tiles);\r\n\tconst drawings = canvas.drawings.placeables;\r\n\tMagic._loadFilters(drawings);\r\n\tconst templates = canvas.templates.placeables;\r\n\tMagic._loadFilters(templates);\r\n\r\n\tAnime.activateAnimation();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Scenes Management                           */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteScene', (document) => {\r\n\tif (document.id !== game.user.viewedScene) return;\r\n\tAnime.deactivateAnimation();\r\n\tAnime.resetAnimation();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Settings Management                         */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('closeSettingsConfig', () => {\r\n\tautosetPaddingMode();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Tokens Management                           */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createToken', (document) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (document.flags?.tokenmagic?.filters) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.TOKEN);\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteToken', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateToken', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (['img', 'tint', 'height', 'width', 'name'].some((k) => k in options)) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.TOKEN);\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t} else {\r\n\t\tMagic._updateFilters(document, options, PlaceableType.TOKEN);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Tiles Management                            */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createTile', (document) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (document.flags?.tokenmagic?.filters) {\r\n\t\tconst placeable = getPlaceableById(document._id, PlaceableType.TILE);\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteTile', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateTile', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (options.texture?.src || options.overhead) {\r\n\t\tconst placeable = getPlaceableById(document._id, PlaceableType.TILE);\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t} else {\r\n\t\tMagic._updateFilters(document, options, PlaceableType.TILE);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Drawings Management                         */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createDrawing', (document) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (document.flags?.tokenmagic?.filters) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.DRAWING);\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteDrawing', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateDrawing', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (!options.flags?.tokenmagic || options.x || options.y) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.DRAWING);\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t} else {\r\n\t\tMagic._updateFilters(document, options, PlaceableType.DRAWING);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Measured Templates Management               */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createMeasuredTemplate', (document) => {\r\n\tconst scene = document.parent;\r\n\tif (!(scene == null) && scene.id === game.user.viewedScene && document.flags?.tokenmagic?.filters) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.TEMPLATE);\r\n\t\trequestLoadFilters(placeable, 250); // request to load filters (when pixi containers are ready)\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteMeasuredTemplate', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateMeasuredTemplate', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\tlet placeable = getPlaceableById(document._id, PlaceableType.TEMPLATE);\r\n\tif (!placeable) return;\r\n\r\n\tif (options.texture) {\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250); // querying filters reload (when pixi containers are ready)\r\n\t} else {\r\n\t\tif (!placeable.loadingRequest) {\r\n\t\t\tMagic._updateFilters(document, options, PlaceableType.TEMPLATE);\r\n\t\t\tMagic._updateTemplateData(document, options, PlaceableType.TEMPLATE);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('preUpdateMeasuredTemplate', async (document, options) => {\r\n\tfunction getTint() {\r\n\t\tif (options.flags?.tokenmagic?.templateData?.tint !== undefined) {\r\n\t\t\treturn options.flags.tokenmagic.templateData.tint;\r\n\t\t} else if (document.flags?.tokenmagic?.tint !== undefined) {\r\n\t\t\treturn document.flags.tokenmagic.tint;\r\n\t\t} else return '';\r\n\t}\r\n\r\n\tfunction getFX() {\r\n\t\tif (options.flags?.tokenmagic?.templateData?.preset !== undefined) {\r\n\t\t\treturn options.flags.tokenmagic.templateData.preset;\r\n\t\t} else if (document.flags?.tokenmagic?.templateData?.preset !== undefined) {\r\n\t\t\treturn document.flags.tokenmagic.templateData.preset;\r\n\t\t} else if (document.tmfxPreset !== undefined) {\r\n\t\t\treturn document.tmfxPreset;\r\n\t\t} else return emptyPreset;\r\n\t}\r\n\r\n\tfunction getDirection() {\r\n\t\tif (options.direction) {\r\n\t\t\treturn options.direction;\r\n\t\t} else if (document.direction) {\r\n\t\t\treturn document.direction;\r\n\t\t} else return 0;\r\n\t}\r\n\r\n\tfunction getAngle() {\r\n\t\tif (options.angle) {\r\n\t\t\treturn options.angle;\r\n\t\t} else if (document.angle) {\r\n\t\t\treturn document.angle;\r\n\t\t} else return 0;\r\n\t}\r\n\r\n\tfunction getShapeType() {\r\n\t\tif (options.t) {\r\n\t\t\treturn options.t;\r\n\t\t} else if (document.t) {\r\n\t\t\treturn document.t;\r\n\t\t} else return 'ITSBAD';\r\n\t}\r\n\r\n\tlet measuredTemplateInstance = canvas.templates.get(document._id);\r\n\tlet templateTint = getTint();\r\n\tlet presetUpdate = options.flags?.tokenmagic?.templateData?.preset !== undefined;\r\n\tlet tintUpdate = options.flags?.tokenmagic?.templateData?.tint !== undefined;\r\n\tlet directionUpdate = options.hasOwnProperty('direction');\r\n\tlet angleUpdate = options.hasOwnProperty('angle');\r\n\tlet typeUpdate = options.hasOwnProperty('t');\r\n\r\n\tif (tintUpdate)\r\n\t\toptions.flags.tokenmagic.templateData.tint = templateTint !== '' ? Color.from(templateTint).valueOf() : null;\r\n\r\n\tif (presetUpdate || tintUpdate || directionUpdate || typeUpdate || angleUpdate) {\r\n\t\tlet templateFX = getFX();\r\n\t\tif (templateFX !== emptyPreset) {\r\n\t\t\tlet anchor = getAnchor(getDirection(), getAngle(), getShapeType());\r\n\t\t\tlet presetOptions = {\r\n\t\t\t\tname: templateFX,\r\n\t\t\t\tlibrary: PresetsLibrary.TEMPLATE,\r\n\t\t\t\tanchorX: anchor.x,\r\n\t\t\t\tanchorY: anchor.y,\r\n\t\t\t};\r\n\t\t\tif (templateTint && templateTint !== '') {\r\n\t\t\t\tpresetOptions.color = Color.from(templateTint).valueOf();\r\n\t\t\t}\r\n\t\t\tlet preset = Magic.getPreset(presetOptions);\r\n\t\t\tif (!(preset == null)) {\r\n\t\t\t\tif (presetUpdate) await measuredTemplateInstance.TMFXaddFilters(preset, true);\r\n\t\t\t\telse await measuredTemplateInstance.TMFXaddUpdateFilters(preset);\r\n\t\t\t}\r\n\t\t} else await measuredTemplateInstance.TMFXdeleteFilters();\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('preCreateMeasuredTemplate', (document) => {\r\n\t// Do nothing if we're on a 3D Canvas scene\r\n\tif (game.Levels3DPreview?._active) return;\r\n\r\n\t// Apply auto-preset if needed\r\n\tconst templates = TokenMagicSettings.getSystemTemplates();\r\n\tif (templates?.enabled) {\r\n\t\ttemplates.preCreateMeasuredTemplate?.(document);\r\n\t}\r\n\r\n\tconst hasFlags = document.flags;\r\n\tlet hasPreset = false;\r\n\tlet hasTint = false;\r\n\tlet hasOpacity = false;\r\n\tlet hasFlagsNoOptions = false;\r\n\r\n\tif (hasFlags && document.flags.tokenmagic?.options) {\r\n\t\tconst opt = document.flags.tokenmagic.options;\r\n\t\tif (opt.tmfxPreset) {\r\n\t\t\tdocument.tmfxPreset = opt.tmfxPreset;\r\n\t\t\thasPreset = true;\r\n\t\t}\r\n\t\tif (opt.tmfxTint) {\r\n\t\t\tdocument.tmfxTint = opt.tmfxTint;\r\n\t\t\thasTint = true;\r\n\t\t}\r\n\t\tif (opt.tmfxTextureAlpha) {\r\n\t\t\tdocument.tmfxTextureAlpha = opt.tmfxTextureAlpha;\r\n\t\t\thasOpacity = true;\r\n\t\t}\r\n\t\tif (opt.tmfxTexture) {\r\n\t\t\tdocument.texture = opt.tmfxTexture;\r\n\t\t\tdocument.updateSource({ texture: opt.tmfxTexture });\r\n\t\t}\r\n\t} else hasFlagsNoOptions = true;\r\n\r\n\tlet hasTexture = document.texture && document.texture !== '';\r\n\tlet newFilters = [];\r\n\r\n\tlet tmfxBaseFlags = { tokenmagic: { filters: null, templateData: null, options: null } };\r\n\tif (hasFlags && hasFlagsNoOptions) {\r\n\t\t// the measured template comes with tokenmagic flags ? It is a copy ! We do nothing.\r\n\t\tif (document.flags.tokenmagic) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdocument.flags = mergeObject(document.flags, tmfxBaseFlags, true, true);\r\n\t}\r\n\r\n\t// normalizing color to value if needed\r\n\tif (hasTint && typeof document.tmfxTint !== 'number') {\r\n\t\tdocument.tmfxTint = Color.from(document.tmfxTint).valueOf();\r\n\t}\r\n\r\n\tlet tmfxFiltersData = null;\r\n\r\n\t// FX to add ?\r\n\tif (hasPreset) {\r\n\t\t// Compute shader anchor point\r\n\t\tlet anchor = getAnchor(document.direction, document.angle, document.t);\r\n\r\n\t\t// Constructing the preset search object\r\n\t\tlet pstSearch = {\r\n\t\t\tname: document.tmfxPreset,\r\n\t\t\tlibrary: PresetsLibrary.TEMPLATE,\r\n\t\t\tanchorX: anchor.x,\r\n\t\t\tanchorY: anchor.y,\r\n\t\t};\r\n\r\n\t\t// Adding tint if needed\r\n\t\tif (hasTint) pstSearch.color = document.tmfxTint;\r\n\r\n\t\t// Retrieving the preset\r\n\t\tlet preset = Magic.getPreset(pstSearch);\r\n\r\n\t\tif (!(preset == null) && preset instanceof Array) {\r\n\t\t\tlet defaultTex = Magic._getPresetTemplateDefaultTexture(pstSearch.name);\r\n\t\t\tif (!(defaultTex == null) && !hasTexture) {\r\n\t\t\t\tdocument.updateSource({ texture: defaultTex });\r\n\t\t\t}\r\n\r\n\t\t\tlet persist = true;\r\n\r\n\t\t\t// Constructing the filter flag parameters\r\n\t\t\tfor (const params of preset) {\r\n\t\t\t\tif (!params.filterType || !FilterType.hasOwnProperty(params.filterType)) {\r\n\t\t\t\t\t// one invalid ? all rejected.\r\n\t\t\t\t\tpersist = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// getPreset MUST provide a filter id\r\n\t\t\t\tif (!params.filterId) {\r\n\t\t\t\t\tpersist = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.enabled || !(typeof params.enabled === 'boolean')) {\r\n\t\t\t\t\tparams.enabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.placeableId = null;\r\n\t\t\t\tparams.filterInternalId = randomID();\r\n\t\t\t\tparams.filterOwner = game.data.userId;\r\n\t\t\t\tparams.placeableType = PlaceableType.TEMPLATE;\r\n\r\n\t\t\t\tnewFilters.push({\r\n\t\t\t\t\ttmFilters: {\r\n\t\t\t\t\t\ttmFilterId: params.filterId,\r\n\t\t\t\t\t\ttmFilterInternalId: params.filterInternalId,\r\n\t\t\t\t\t\ttmFilterType: params.filterType,\r\n\t\t\t\t\t\ttmFilterOwner: params.filterOwner,\r\n\t\t\t\t\t\ttmParams: params,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (persist) tmfxFiltersData = newFilters;\r\n\t\t}\r\n\t} else {\r\n\t\tdocument.tmfxPreset = emptyPreset;\r\n\t}\r\n\r\n\tif (!hasOpacity) document.tmfxTextureAlpha = 1;\r\n\tif (!hasTint) document.tmfxTint = null;\r\n\r\n\tlet tmfxFlags = {\r\n\t\ttemplateData: {\r\n\t\t\topacity: document.tmfxTextureAlpha,\r\n\t\t\ttint: document.tmfxTint,\r\n\t\t},\r\n\t\tfilters: tmfxFiltersData,\r\n\t\toptions: null,\r\n\t};\r\n\tdocument.updateSource({ flags: { tokenmagic: tmfxFlags } });\r\n});\r\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterAdjustment extends PIXI.filters.AdjustmentFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.gamma = 1;\n\t\tthis.saturation = 1;\n\t\tthis.contrast = 1;\n\t\tthis.brightness = 1;\n\t\tthis.red = 1;\n\t\tthis.green = 1;\n\t\tthis.blue = 1;\n\t\tthis.alpha = 1;\n\t\tthis.zOrder = 30;\n\t\tthis.animating = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { isAnimationDisabled } from '../module/tokenmagic.js';\n\nexport class Anime {\n\tconstructor(puppet) {\n\t\tconst self = this;\n\t\tthis.puppet = puppet;\n\t\tthis.animated = null;\n\t\tthis.animeId = randomID();\n\n\t\t// Time/synchronization related variables\n\t\tthis.frameTime = {};\n\t\tthis.elapsedTime = {};\n\t\tthis.loopElapsedTime = {};\n\t\tthis.loops = {};\n\t\tthis.internalLoops = {};\n\t\tthis.ping = {};\n\t\tthis.pauseBetweenElapsedTime = {};\n\t\tthis.pauseBetween = {};\n\t\tthis.shutdown = {};\n\n\t\tif (!(this.puppet == null)) {\n\t\t\tif (\n\t\t\t\tthis.puppet.hasOwnProperty('animated') &&\n\t\t\t\t!(this.puppet.animated == null) &&\n\t\t\t\ttypeof this.puppet.animated === 'object' &&\n\t\t\t\tObject.keys(this.puppet.animated).length > 0\n\t\t\t) {\n\t\t\t\tthis.initAnimatedInternals(this.puppet.animated);\n\t\t\t\tthis.animated = this.puppet.animated; // easy access to the puppet's animodes\n\t\t\t}\n\t\t\tAnime.addAnimation(self); // ready to tick\n\t\t}\n\t}\n\n\tstatic rgbToValue(r, g, b) {\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n\n\tstatic valueToRgb(bin) {\n\t\tconst r = bin >> 16;\n\t\tconst g = (bin >> 8) & 0xff;\n\t\tconst b = bin & 0xff;\n\t\treturn [r, g, b];\n\t}\n\n\tstatic oscillation(elapsed, loopDuration, syncShift, val1, val2, func, isSync, xpi = Anime.twoPi) {\n\t\treturn (\n\t\t\t((val1 - val2) *\n\t\t\t\t(func(\n\t\t\t\t\txpi * (isSync ? Anime.getSynchronizedTime(loopDuration, syncShift) : elapsed / loopDuration + syncShift)\n\t\t\t\t) +\n\t\t\t\t\t1)) /\n\t\t\t\t2 +\n\t\t\tval2\n\t\t);\n\t}\n\n\tstatic colOscillation(elapsed, loopDuration, syncShift, val1, val2, isSync, xpi = Anime.twoPi) {\n\t\tconst rgbValue1 = Anime.valueToRgb(val1);\n\t\tconst rgbValue2 = Anime.valueToRgb(val2);\n\n\t\treturn Anime.rgbToValue(\n\t\t\tMath.floor(\n\t\t\t\tAnime.oscillation(elapsed, loopDuration, syncShift, rgbValue1[0], rgbValue2[0], Math.cos, isSync, xpi)\n\t\t\t),\n\t\t\tMath.floor(\n\t\t\t\tAnime.oscillation(elapsed, loopDuration, syncShift, rgbValue1[1], rgbValue2[1], Math.cos, isSync, xpi)\n\t\t\t),\n\t\t\tMath.floor(Anime.oscillation(elapsed, loopDuration, syncShift, rgbValue1[2], rgbValue2[2], Math.cos, isSync, xpi))\n\t\t);\n\t}\n\n\tstatic getSynchronizedTime(loopDuration, syncShift) {\n\t\treturn Anime._lastTime / loopDuration + syncShift;\n\t}\n\n\tstatic getSynchronizedRotation(loopDuration, syncShift) {\n\t\treturn (360 * ((Anime._lastTime + syncShift) % loopDuration)) / loopDuration;\n\t}\n\n\tstatic getPuppetsByParams(params) {\n\t\tlet puppetArray = [];\n\t\tAnime._animeMap.forEach((anime, id) => {\n\t\t\tif (\n\t\t\t\tanime.puppet.placeableId === params.placeableId &&\n\t\t\t\tanime.puppet.filterId === params.filterId &&\n\t\t\t\t(!anime.puppet.hasOwnProperty('filterInternalId') || anime.puppet.filterInternalId === params.filterInternalId)\n\t\t\t) {\n\t\t\t\tpuppetArray.push(anime.puppet);\n\t\t\t}\n\t\t});\n\t\treturn puppetArray;\n\t}\n\n\tstatic addAnimation(anime) {\n\t\tAnime._animeMap.set(anime.animeId, anime);\n\t\tAnime._resumeAnimation();\n\t}\n\n\tstatic removeAnimation(placeableId) {\n\t\tAnime._animeMap.forEach((anime, id) => {\n\t\t\tif (anime.puppet.placeableId === placeableId) {\n\t\t\t\tAnime._animeMap.delete(id);\n\t\t\t}\n\t\t});\n\t\tif (Anime._animeMap.size === 0) {\n\t\t\tAnime._suspendAnimation();\n\t\t}\n\t}\n\n\tstatic removeAnimationByFilterId(placeableId, filterId) {\n\t\tAnime._animeMap.forEach((anime, id) => {\n\t\t\tif (anime.puppet.placeableId === placeableId && anime.puppet.filterId === filterId) {\n\t\t\t\tAnime._animeMap.delete(id);\n\t\t\t}\n\t\t});\n\t\tif (Anime._animeMap.size === 0) {\n\t\t\tAnime._suspendAnimation();\n\t\t}\n\t}\n\n\tstatic resetAnimation() {\n\t\tAnime._animeMap = new Map();\n\t\tAnime._suspended = true;\n\t}\n\n\tstatic tick() {\n\t\tAnime._lastTime = canvas.app.ticker.lastTime;\n\t\tAnime._frameTime = Anime._lastTime - Anime._prevTime;\n\n\t\tfor (const [id, anime] of Anime._animeMap) {\n\t\t\tif (anime.puppet.enabled) {\n\t\t\t\tif (anime.puppet.hasOwnProperty('preComputation') && anime.puppet.placeableImg != null) {\n\t\t\t\t\tanime.puppet.preComputation();\n\t\t\t\t}\n\t\t\t\tif (anime.puppet.hasOwnProperty('animated') && !(anime.puppet.animated == null)) {\n\t\t\t\t\tanime.animate(Anime._frameTime);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tAnime._prevTime = Anime._lastTime;\n\t}\n\n\tstatic _suspendAnimation() {\n\t\tif (Anime._activated && !Anime._suspended && !isAnimationDisabled()) {\n\t\t\tAnime._detachFromTicker();\n\t\t}\n\t\tAnime._suspended = true;\n\t}\n\n\tstatic _resumeAnimation() {\n\t\tif (Anime._activated && Anime._suspended && !isAnimationDisabled()) {\n\t\t\tAnime._attachToTicker();\n\t\t}\n\t\tAnime._suspended = false;\n\t}\n\n\tstatic activateAnimation() {\n\t\tif (!Anime._activated && !Anime._suspended && !isAnimationDisabled()) {\n\t\t\tAnime._attachToTicker();\n\t\t}\n\t\tAnime._activated = true;\n\t}\n\n\tstatic deactivateAnimation() {\n\t\tif (Anime._activated && !Anime._suspended && !isAnimationDisabled()) {\n\t\t\tAnime._detachFromTicker();\n\t\t}\n\t\tAnime._activated = false;\n\t}\n\n\tstatic _attachToTicker() {\n\t\tcanvas.app.ticker.add(Anime.tick, this, PIXI.UPDATE_PRIORITY.LOW + 1);\n\t\tAnime._lastTime = canvas.app.ticker.lastTime;\n\t\tAnime._prevTime = Anime._lastTime;\n\t}\n\n\tstatic _detachFromTicker() {\n\t\tcanvas.app.ticker.remove(Anime.tick, this);\n\t\tAnime._lastTime = 0;\n\t\tAnime._prevTime = 0;\n\t}\n\n\tstatic getAnimeMap() {\n\t\treturn Anime._animeMap;\n\t}\n\n\tinitAnimatedInternals(animated) {\n\t\tObject.keys(animated).forEach((effect) => {\n\t\t\t// Internals init\n\t\t\tthis.initInternals(effect);\n\t\t});\n\t}\n\n\tinitInternals(effect) {\n\t\tthis.elapsedTime[effect] = 0;\n\t\tthis.loopElapsedTime[effect] = 0;\n\t\tthis.pauseBetweenElapsedTime[effect] = 0;\n\t\tthis.loops[effect] = 0;\n\t\tthis.internalLoops[effect] = 0;\n\t\tthis.frameTime[effect] = 0;\n\t\tthis.pauseBetween[effect] = false;\n\t\tthis.ping[effect] = false;\n\t\tthis.shutdown[effect] = false;\n\t}\n\n\thasInternals(effect) {\n\t\treturn this.elapsedTime.hasOwnProperty(effect);\n\t}\n\n\tanimate(frameTime) {\n\t\tfor (const effect of Object.keys(this.puppet.animated)) {\n\t\t\tif (this.animated[effect].active && this.cycleCheck(effect, frameTime)) {\n\t\t\t\tif (this[this.animated[effect].animType] != null) {\n\t\t\t\t\tthis[this.animated[effect].animType](effect);\n\t\t\t\t}\n\t\t\t\tif (this.shutdown[effect]) {\n\t\t\t\t\tthis.animated[effect].active = false;\n\t\t\t\t\tthis.shutdown[effect] = false;\n\n\t\t\t\t\t// persists the value of an effect which is terminated.\n\t\t\t\t\tthis.persistTerminatedEffect(effect);\n\t\t\t\t} else {\n\t\t\t\t\tthis.loopElapsedTime[effect] += frameTime;\n\t\t\t\t\tthis.elapsedTime[effect] += frameTime;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.autoDisableCheck();\n\t}\n\n\tcycleCheck(effect, frameTime) {\n\t\tthis.frameTime[effect] = frameTime;\n\n\t\tif (this.isPauseBetweenLoop(effect, frameTime)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.loopElapsedTime[effect] > this.animated[effect].loopDuration) {\n\t\t\tthis.loopElapsedTime[effect] -= this.animated[effect].loopDuration;\n\t\t\tthis.ping[effect] = true;\n\n\t\t\tif (this.animated[effect].loops !== Infinity) {\n\t\t\t\tthis.loops[effect]++;\n\t\t\t\tthis.internalLoops[effect]++;\n\t\t\t}\n\n\t\t\tif (this.loops[effect] >= this.animated[effect].loops) {\n\t\t\t\t// correction to stop exactly on the target value when the last loop end.\n\t\t\t\tthis.elapsedTime[effect] = this.internalLoops[effect] * this.animated[effect].loopDuration;\n\t\t\t\tthis.loops[effect] = 0;\n\t\t\t\tthis.loopElapsedTime[effect] = 0;\n\t\t\t\tthis.shutdown[effect] = true;\n\t\t\t} else if (this.animated[effect].pauseBetweenDuration > 0) {\n\t\t\t\tthis.elapsedTime[effect] = this.animated[effect].loopDuration;\n\t\t\t\tthis.pauseBetween[effect] = true;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync persistTerminatedEffect(effect) {\n\t\tif (!(this.puppet.filterOwner === game.data.userId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet animeInfo;\n\t\tlet doInit = true;\n\t\tlet flag = this.puppet.targetPlaceable.document.getFlag('tokenmagic', 'animeInfo');\n\n\t\tif (flag) {\n\t\t\t// fastest than array.find\n\t\t\tfor (const animeinfo of flag.values()) {\n\t\t\t\tif (\n\t\t\t\t\tanimeinfo.tmFilterId === this.puppet.filterId &&\n\t\t\t\t\tanimeinfo.tmFilterInternalId === this.puppet.filterInternalId &&\n\t\t\t\t\tanimeinfo.tmFilterEffect === effect\n\t\t\t\t) {\n\t\t\t\t\tif (animeinfo && animeinfo instanceof Object) {\n\t\t\t\t\t\tanimeinfo.tmFilterEffectValue = this.puppet[effect];\n\t\t\t\t\t\tdoInit = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (doInit) {\n\t\t\tanimeInfo = [\n\t\t\t\t{\n\t\t\t\t\ttmFilterId: this.puppet.filterId,\n\t\t\t\t\ttmFilterInternalId: this.puppet.filterInternalId,\n\t\t\t\t\ttmFilterEffect: effect,\n\t\t\t\t\ttmFilterEffectValue: this.puppet[effect],\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tif (flag) flag = flag.concat(animeInfo);\n\t\t\telse flag = animeInfo;\n\t\t}\n\n\t\tflag = duplicate(flag);\n\t\tawait this.puppet.targetPlaceable._TMFXsetAnimeFlag(flag);\n\t}\n\n\tautoDisableCheck() {\n\t\tif (!(this.puppet.autoDisable || this.puppet.autoDestroy)) {\n\t\t\treturn;\n\t\t}\n\t\tif (!(this.puppet.filterOwner === game.data.userId)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.puppet.enabled === false && !this.puppet.autoDestroy) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (Object.values(this.animated).every((animeEffect) => animeEffect.active === false)) {\n\t\t\tthis.disableOrDestroy();\n\t\t}\n\t}\n\n\tasync disableOrDestroy() {\n\t\tif (this.puppet == null) return;\n\t\tconst placeable = this.puppet.targetPlaceable;\n\t\tif (placeable == null) return;\n\n\t\tif (this.puppet.autoDestroy) {\n\t\t\tawait window.TokenMagic.deleteFilters(placeable, this.puppet.filterId);\n\t\t} else {\n\t\t\tlet params = {};\n\t\t\tparams.filterType = this.puppet.filterType;\n\t\t\tparams.filterId = this.puppet.filterId;\n\t\t\tparams.enabled = false;\n\t\t\tawait window.TokenMagic.updateFiltersByPlaceable(placeable, [params]);\n\t\t}\n\t}\n\n\tisPauseBetweenLoop(effect, frametime) {\n\t\tif (this.pauseBetween[effect] && this.animated[effect].pauseBetweenDuration > 0) {\n\t\t\tthis.pauseBetweenElapsedTime[effect] += frametime;\n\t\t\tif (this.pauseBetweenElapsedTime[effect] < this.animated[effect].pauseBetweenDuration) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.pauseBetweenElapsedTime[effect] = 0;\n\t\t\t\treturn (this.pauseBetween[effect] = false);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpauseBetweenCheck(effect, frametime) {\n\t\tif (this.pauseStart[effect] && this.animated[effect].pauseStartDuration > 0) {\n\t\t\tthis.pauseStartElapsedTime[effect] += frametime;\n\t\t\tif (this.pauseStartElapsedTime[effect] < this.animated[effect].pauseStartDuration) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tthis.pauseStart[effect] = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tmoveToward(effect) {\n\t\tthis.puppet[effect] =\n\t\t\t((this.animated[effect].val1 - this.animated[effect].val2) / this.animated[effect].loopDuration) *\n\t\t\tthis.elapsedTime[effect];\n\t}\n\n\tcolorOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.colOscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tfalse\n\t\t);\n\t}\n\n\thalfColorOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.colOscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tfalse,\n\t\t\tMath.PI\n\t\t);\n\t}\n\n\tsyncColorOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.colOscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\ttrue\n\t\t);\n\t}\n\n\tcosOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.cos,\n\t\t\tfalse\n\t\t);\n\t}\n\n\thalfCosOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.cos,\n\t\t\tfalse,\n\t\t\tMath.PI\n\t\t);\n\t}\n\n\tsinOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.sin,\n\t\t\tfalse\n\t\t);\n\t}\n\n\thalfSinOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.sin,\n\t\t\tfalse,\n\t\t\tMath.PI\n\t\t);\n\t}\n\n\tchaoticOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.cos,\n\t\t\tfalse\n\t\t);\n\t}\n\n\tsyncCosOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.cos,\n\t\t\ttrue\n\t\t);\n\t}\n\n\tsyncSinOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.sin,\n\t\t\ttrue\n\t\t);\n\t}\n\n\tsyncChaoticOscillation(effect) {\n\t\tthis.puppet[effect] = Anime.oscillation(\n\t\t\tthis.elapsedTime[effect],\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor,\n\t\t\tthis.animated[effect].val1,\n\t\t\tthis.animated[effect].val2,\n\t\t\tMath.cos,\n\t\t\ttrue\n\t\t);\n\t}\n\n\trotation(effect) {\n\t\tconst computedRotation = (360 * this.elapsedTime[effect]) / this.animated[effect].loopDuration;\n\t\tthis.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\n\t}\n\n\tsyncRotation(effect) {\n\t\tconst computedRotation = Anime.getSynchronizedRotation(\n\t\t\tthis.animated[effect].loopDuration,\n\t\t\tthis.animated[effect].syncShift\n\t\t);\n\t\tthis.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\n\t}\n\n\trandomNumber(effect) {\n\t\tconst randomNumber =\n\t\t\tMath.random() * (this.animated[effect].val2 - this.animated[effect].val1) + this.animated[effect].val1;\n\t\tif (this.animated[effect].wantInteger) {\n\t\t\tthis.puppet[effect] = Math.floor(randomNumber);\n\t\t} else {\n\t\t\tthis.puppet[effect] = randomNumber;\n\t\t}\n\t}\n\n\trandomNumberPerLoop(effect) {\n\t\tif (this._ringing(effect)) {\n\t\t\tthis.randomNumber(effect);\n\t\t}\n\t}\n\n\trandomColor(effect) {\n\t\tthis.puppet[effect] = Math.floor(Math.random() * 16777215);\n\t}\n\n\trandomColorPerLoop(effect) {\n\t\tif (this._ringing(effect)) {\n\t\t\tthis.randomColor(effect);\n\t\t}\n\t}\n\n\tmove(effect) {\n\t\tthis.puppet[effect] += this.animated[effect].speed * this.frameTime[effect];\n\t}\n\n\t_ringing(effect) {\n\t\tif (this.ping[effect]) {\n\t\t\tthis.ping[effect] = false;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nAnime._lastTime = 0;\nAnime._prevTime = 0;\nAnime._frameTime = 0;\nAnime._animeMap = new Map();\nAnime.twoPi = Math.PI * 2;\nAnime._activated = false;\nAnime._suspended = true;\n","import { getPlaceableById, getMinPadding, PlaceableType } from '../../../module/tokenmagic.js';\nimport '../../../module/proto/PlaceableObjectProto.js';\n\nPIXI.Filter.prototype.setTMParams = function (params) {\n\tthis.autoDisable = false;\n\tthis.autoDestroy = false;\n\tthis.gridPadding = 0;\n\tthis.boundsPadding = new PIXI.Point(0, 0);\n\tthis.currentPadding = 0;\n\tthis.recalculatePadding = true;\n\tthis.dummy = false;\n\tfoundry.utils.mergeObject(this, params);\n\tif (!this.dummy) {\n\t\tthis.rawPadding = this.rawPadding ?? this.padding ?? 0;\n\t\tthis.originalPadding = Math.max(this.rawPadding, getMinPadding());\n\t\tthis.assignPlaceable();\n\t\tthis.activateTransform();\n\t\tObject.defineProperty(this, 'padding', {\n\t\t\tget: function () {\n\t\t\t\tif (this.recalculatePadding) this.calculatePadding();\n\t\t\t\treturn this.currentPadding;\n\t\t\t},\n\t\t\tset: function (padding) {\n\t\t\t\tthis.rawPadding = padding;\n\t\t\t\tthis.originalPadding = Math.max(padding, getMinPadding());\n\t\t\t},\n\t\t});\n\t} else {\n\t\tthis.apply = function (filterManager, input, output, clear) {\n\t\t\tfilterManager.applyFilter(this, input, output, clear);\n\t\t};\n\t}\n};\n\nPIXI.Filter.prototype.getPlaceable = function () {\n\treturn getPlaceableById(this.placeableId, this.placeableType);\n};\n\nPIXI.Filter.prototype.getPlaceableType = function () {\n\treturn this.placeableType;\n};\n\nPIXI.Filter.prototype.calculatePadding = function () {\n\tconst target = this.placeableImg;\n\tlet width;\n\tlet height;\n\n\t{\n\t\tconst ang = !this.sticky && this.placeableType !== PlaceableType.TOKEN ? target.rotation : 0;\n\t\tconst sin = Math.sin(ang);\n\t\tconst cos = Math.cos(ang);\n\t\twidth = Math.abs(target.width * cos) + Math.abs(target.height * sin);\n\t\theight = Math.abs(target.width * sin) + Math.abs(target.height * cos);\n\t}\n\n\tif (this.gridPadding > 0) {\n\t\tconst gridSize = canvas.dimensions.size;\n\t\tthis.boundsPadding.x = this.boundsPadding.y = (this.gridPadding - 1) * gridSize;\n\t\tthis.boundsPadding.x += (gridSize - 1 - ((width + gridSize - 1) % gridSize)) / 2;\n\t\tthis.boundsPadding.y += (gridSize - 1 - ((height + gridSize - 1) % gridSize)) / 2;\n\t} else {\n\t\tthis.boundsPadding.x = this.boundsPadding.y = this.rawPadding;\n\t}\n\n\t{\n\t\tconst ang = this.sticky ? target.rotation : 0;\n\t\tconst sin = Math.sin(ang);\n\t\tconst cos = Math.cos(ang);\n\t\tthis.currentPadding =\n\t\t\tMath.max(\n\t\t\t\tMath.abs(this.boundsPadding.x * cos) + Math.abs(this.boundsPadding.y * sin),\n\t\t\t\tMath.abs(this.boundsPadding.x * sin) + Math.abs(this.boundsPadding.y * cos)\n\t\t\t) +\n\t\t\t(this.originalPadding - this.rawPadding);\n\t}\n\n\tthis.boundsPadding.x += (width - target.width) / 2;\n\tthis.boundsPadding.y += (height - target.height) / 2;\n\n\tconst scale = this.targetPlaceable.worldTransform.a;\n\n\tthis.boundsPadding.x *= scale;\n\tthis.boundsPadding.y *= scale;\n\tthis.currentPadding *= scale;\n};\n\nPIXI.Filter.prototype.assignPlaceable = function () {\n\tthis.targetPlaceable = this.getPlaceable();\n\tthis.targetPlaceable != null\n\t\t? (this.placeableImg = this.targetPlaceable._TMFXgetSprite())\n\t\t: (this.placeableImg = null);\n};\n\nPIXI.Filter.prototype.activateTransform = function () {\n\tthis.preComputation = this.filterTransform;\n\tthis.filterTransform();\n\n\tconst apply = this.apply;\n\tthis.apply = function (filterManager, input, output, clear, state) {\n\t\tif ('handleTransform' in this) {\n\t\t\tthis.handleTransform(state);\n\t\t}\n\t\treturn apply.apply(this, arguments);\n\t};\n};\n\nPIXI.Filter.prototype.filterTransform = function () {\n\tif (this.hasOwnProperty('zIndex')) {\n\t\tthis.targetPlaceable.zIndex = this.zIndex;\n\t}\n};\n\nPIXI.Filter.prototype.normalizeTMParams = function () {\n\tif (this.hasOwnProperty('animated') && !(this.animated == null)) {\n\t\t// Normalize animations properties\n\t\tObject.keys(this.animated).forEach((effect) => {\n\t\t\tif (this.animated[effect].active == null || typeof this.animated[effect].active != 'boolean') {\n\t\t\t\tthis.animated[effect].active = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.animated[effect].loops == null ||\n\t\t\t\ttypeof this.animated[effect].loops != 'number' ||\n\t\t\t\tthis.animated[effect].loops <= 0\n\t\t\t) {\n\t\t\t\tthis.animated[effect].loops = Infinity;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.animated[effect].loopDuration == null ||\n\t\t\t\ttypeof this.animated[effect].loopDuration != 'number' ||\n\t\t\t\tthis.animated[effect].loopDuration <= 0\n\t\t\t) {\n\t\t\t\tthis.animated[effect].loopDuration = 3000;\n\t\t\t}\n\t\t\tif (this.animated[effect].clockWise == null || typeof this.animated[effect].clockWise != 'boolean') {\n\t\t\t\tthis.animated[effect].clockWise = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.animated[effect].pauseBetweenDuration == null ||\n\t\t\t\ttypeof this.animated[effect].pauseBetweenDuration != 'number' ||\n\t\t\t\tthis.animated[effect].pauseBetweenDuration <= 0\n\t\t\t) {\n\t\t\t\tthis.animated[effect].pauseBetweenDuration = 0;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.animated[effect].syncShift == null ||\n\t\t\t\ttypeof this.animated[effect].syncShift != 'number' ||\n\t\t\t\tthis.animated[effect].syncShift < 0\n\t\t\t) {\n\t\t\t\tthis.animated[effect].syncShift = 0;\n\t\t\t}\n\t\t\tif (this.animated[effect].val1 == null || typeof this.animated[effect].val1 != 'number') {\n\t\t\t\tthis.animated[effect].val1 = 0;\n\t\t\t}\n\t\t\tif (this.animated[effect].val2 == null || typeof this.animated[effect].val2 != 'number') {\n\t\t\t\tthis.animated[effect].val2 = 0;\n\t\t\t}\n\t\t\tif (this.anime[this.animated[effect].animType] === undefined) {\n\t\t\t\tthis.animated[effect].animType = null;\n\t\t\t}\n\t\t\tif (this.animated[effect].speed == null || typeof this.animated[effect].speed != 'number') {\n\t\t\t\tthis.animated[effect].speed = 0;\n\t\t\t}\n\t\t\tif (this.animated[effect].chaosFactor == null || typeof this.animated[effect].chaosFactor != 'number') {\n\t\t\t\tthis.animated[effect].chaosFactor = 0.25;\n\t\t\t}\n\t\t\tif (this.animated[effect].wantInteger == null || typeof this.animated[effect].wantInteger != 'boolean') {\n\t\t\t\tthis.animated[effect].wantInteger = false;\n\t\t\t}\n\n\t\t\tif (!this.anime.hasInternals(effect)) {\n\t\t\t\tthis.anime.initInternals(effect);\n\t\t\t}\n\n\t\t\tthis.anime.animated = this.animated;\n\t\t});\n\t}\n};\n","import { PlaceableType, Magic, broadcast, SocketAction, mustBroadCast, isZOrderConfig } from '../tokenmagic.js';\nimport { emptyPreset, autoMinRank } from '../constants.js';\n\nexport var gMaxRank = autoMinRank;\n\nPlaceableObject.prototype.TMFXaddFilters = async function (paramsArray, replace = false) {\n\tawait Magic.addFilters(this, paramsArray, replace);\n};\n\nPlaceableObject.prototype.TMFXupdateFilters = async function (paramsArray) {\n\tawait Magic.updateFiltersByPlaceable(this, paramsArray);\n};\n\nPlaceableObject.prototype.TMFXaddUpdateFilters = async function (paramsArray) {\n\tawait Magic.addUpdateFilters(this, paramsArray);\n};\n\nPlaceableObject.prototype.TMFXdeleteFilters = async function (filterId = null) {\n\tawait Magic.deleteFilters(this, filterId);\n};\n\nPlaceableObject.prototype.TMFXhasFilterType = function (filterType) {\n\treturn Magic.hasFilterType(this, filterType);\n};\n\nPlaceableObject.prototype.TMFXhasFilterId = function (filterId) {\n\treturn Magic.hasFilterId(this, filterId);\n};\n\nPlaceableObject.prototype._TMFXsetFlag = async function (flag) {\n\tif (mustBroadCast()) broadcast(this, flag, SocketAction.SET_FLAG);\n\telse await this.document.setFlag('tokenmagic', 'filters', flag);\n};\n\nPlaceableObject.prototype._TMFXsetAnimeFlag = async function (flag) {\n\tif (mustBroadCast()) broadcast(this, flag, SocketAction.SET_ANIME_FLAG);\n\telse await this.document.setFlag('tokenmagic', 'animeInfo', flag);\n};\n\nPlaceableObject.prototype._TMFXunsetFlag = async function () {\n\tif (mustBroadCast()) broadcast(this, null, SocketAction.SET_FLAG);\n\telse await this.document.unsetFlag('tokenmagic', 'filters');\n};\n\nPlaceableObject.prototype._TMFXunsetAnimeFlag = async function () {\n\tif (mustBroadCast()) broadcast(this, null, SocketAction.SET_ANIME_FLAG);\n\telse await this.document.unsetFlag('tokenmagic', 'animeInfo');\n};\n\nPlaceableObject.prototype._TMFXgetSprite = function () {\n\tconst type = this._TMFXgetPlaceableType();\n\tswitch (type) {\n\t\tcase PlaceableType.TOKEN:\n\t\t\treturn this.mesh;\n\t\tcase PlaceableType.TILE:\n\t\t\treturn this.mesh ?? this.bg;\n\t\tcase PlaceableType.TEMPLATE:\n\t\t\treturn this.template;\n\t\tcase PlaceableType.DRAWING:\n\t\t\treturn this.hasText ? this.text : this.shape;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nPlaceableObject.prototype._TMFXgetPlaceablePadding = function () {\n\t// get the placeable padding, by taking into account all filters and options\n\tlet accPadding = 0;\n\tconst filters = this._TMFXgetSprite().filters;\n\tif (filters instanceof Array) {\n\t\tfor (const filter of filters) {\n\t\t\tif (!filter.enabled) continue;\n\t\t\tif (canvas.app.renderer.filter.useMaxPadding) {\n\t\t\t\taccPadding = Math.max(accPadding, filter.padding);\n\t\t\t} else {\n\t\t\t\taccPadding += filter.padding;\n\t\t\t}\n\t\t}\n\t}\n\treturn accPadding;\n};\n\nPlaceableObject.prototype._TMFXcheckSprite = function () {\n\tconst type = this._TMFXgetPlaceableType();\n\tswitch (type) {\n\t\tcase PlaceableType.TOKEN:\n\t\tcase PlaceableType.TILE:\n\t\t\treturn !(this.mesh == null);\n\t\tcase PlaceableType.TEMPLATE:\n\t\t\treturn !(this.template == null);\n\t\tcase PlaceableType.DRAWING:\n\t\t\treturn !(this.shape == null);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nPlaceableObject.prototype._TMFXgetMaxFilterRank = function () {\n\tconst sprite = this._TMFXgetSprite();\n\tif (sprite == null) {\n\t\treturn gMaxRank++;\n\t}\n\tif (sprite.filters == null) {\n\t\treturn gMaxRank++;\n\t} else {\n\t\tlet maxRank = Math.max(...sprite.filters.map((f) => f.rank), autoMinRank);\n\t\tgMaxRank = Math.max(maxRank, gMaxRank) + 1;\n\t\treturn gMaxRank;\n\t}\n};\n\nPlaceableObject.prototype._TMFXsetRawFilters = function (filters) {\n\tfunction insertFilter(filters) {\n\t\tfunction filterZOrderCompare(a, b) {\n\t\t\tif (a.zOrder < b.zOrder) return -1;\n\t\t\tif (a.zOrder > b.zOrder) return 1;\n\t\t\treturn 0;\n\t\t}\n\n\t\tfunction filterRankCompare(a, b) {\n\t\t\tif (a.rank < b.rank) return -1;\n\t\t\tif (a.rank > b.rank) return 1;\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (!isZOrder) {\n\t\t\tif (!filters.hasOwnProperty('rank')) {\n\t\t\t\tlet maxRank = Math.max(...sprite.filters.map((f) => f.rank), autoMinRank);\n\t\t\t\tfilters.rank = maxRank + 1;\n\t\t\t}\n\t\t}\n\n\t\tsprite.filters.push(filters);\n\t\tisZOrder ? sprite.filters.sort(filterZOrderCompare) : sprite.filters.sort(filterRankCompare);\n\t}\n\n\tfunction addFilter(filters) {\n\t\tif (!isZOrder && !filters.hasOwnProperty('rank')) {\n\t\t\tfilters.rank = autoMinRank;\n\t\t}\n\t\tsprite.filters = [filters];\n\t}\n\n\tconst isZOrder = isZOrderConfig();\n\tconst sprite = this._TMFXgetSprite();\n\tif (sprite == null) {\n\t\treturn false;\n\t}\n\n\tif (filters == null) {\n\t\tsprite.filters = null;\n\t} else {\n\t\tsprite.filters == null ? addFilter(filters) : insertFilter(filters);\n\t}\n\n\treturn true;\n};\n\nPlaceableObject.prototype._TMFXunsetRawFilters = function () {\n\treturn this._TMFXsetRawFilters(null);\n};\n\nPlaceableObject.prototype._TMFXgetPlaceableType = function () {\n\tif (\n\t\t[PlaceableType.TOKEN, PlaceableType.TEMPLATE, PlaceableType.TILE, PlaceableType.DRAWING].includes(\n\t\t\tthis.constructor.embeddedName\n\t\t)\n\t)\n\t\treturn this.constructor.embeddedName;\n\treturn PlaceableType.NOT_SUPPORTED;\n};\n","export const defaultOpacity = 0.5;\nexport const emptyPreset = 'NOFX';\nexport const autoMinRank = 10000;\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterAscii extends PIXI.filters.AsciiFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.size = 8;\n\t\tthis.zOrder = 310;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterXBloom extends PIXI.filters.AdvancedBloomFilter {\n\tconstructor(params) {\n\t\tsuper();\n\n\t\tthis.enabled = false;\n\t\tthis.threshold = 0.5;\n\t\tthis.bloomScale = 1.0;\n\t\tthis.brightness = 1.0;\n\t\tthis.blur = 4.0;\n\t\tthis.quality = 4.0;\n\t\tthis.zOrder = 40;\n\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterDot extends PIXI.filters.DotFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.scale = 1;\n\t\tthis.angle = 5;\n\t\tthis.grayscale = true;\n\t\tthis.zOrder = 330;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\nimport { fixPath } from '../../module/tokenmagic.js';\n\nexport class FilterDistortion extends PIXI.filters.DisplacementFilter {\n\tconstructor(params) {\n\t\t// Loading distortion sprite\n\t\tvar displacementSpriteMask;\n\t\tvar spriteMaskPath;\n\t\tspriteMaskPath = params.hasOwnProperty('maskPath')\n\t\t\t? fixPath(params.maskPath)\n\t\t\t: 'modules/tokenmagic/fx/assets/distortion-1.png';\n\t\tdisplacementSpriteMask = PIXI.Sprite.from(spriteMaskPath);\n\t\tsuper(displacementSpriteMask);\n\n\t\t// Configuring distortion sprite\n\t\tthis.sprite = displacementSpriteMask;\n\t\tthis.wrapMode = PIXI.WRAP_MODES.REPEAT;\n\t\tthis.position = new PIXI.Point();\n\t\tthis.skew = new PIXI.Point();\n\t\tthis.pivot = new PIXI.Point();\n\t\tthis.anchorSet = 0.5;\n\t\tthis.transition = null;\n\t\tthis.padding = 15; // conf\n\t\tthis.enabled = false;\n\t\tthis.maskSpriteX = 0;\n\t\tthis.maskSpriteY = 0;\n\t\tthis.maskSpriteScaleX = 4;\n\t\tthis.maskSpriteScaleY = 4;\n\t\tthis.maskSpriteSkewX = 0;\n\t\tthis.maskSpriteSkewY = 0;\n\t\tthis.maskSpriteRotation = 0;\n\t\tthis.zOrder = 4000;\n\t\tthis.sticky = true;\n\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tthis.maskPath = spriteMaskPath;\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t\tthis.sprite.anchor.set(this.anchorSet);\n\t\t\tthis.sprite.texture.baseTexture.wrapMode = this.wrapMode;\n\t\t}\n\t}\n\n\tset maskSpriteX(value) {\n\t\tthis.position.x = value;\n\t}\n\n\tset maskSpriteY(value) {\n\t\tthis.position.y = value;\n\t}\n\n\tget maskSpriteX() {\n\t\treturn this.position.x;\n\t}\n\n\tget maskSpriteY() {\n\t\treturn this.position.y;\n\t}\n\n\tset maskSpriteScaleX(value) {\n\t\tthis.scale.x = value;\n\t}\n\n\tset maskSpriteScaleY(value) {\n\t\tthis.scale.y = value;\n\t}\n\n\tget maskSpriteScaleX() {\n\t\treturn this.scale.x;\n\t}\n\n\tget maskSpriteScaleY() {\n\t\treturn this.scale.y;\n\t}\n\n\tset maskSpriteRotation(value) {\n\t\tthis.rotation = value;\n\t}\n\n\tget maskSpriteRotation() {\n\t\treturn this.rotation;\n\t}\n\n\tset maskSpriteSkewX(value) {\n\t\tthis.skew.x = value;\n\t}\n\n\tget maskSpriteSkewX() {\n\t\treturn this.skew.x;\n\t}\n\n\tset maskSpriteSkewY(value) {\n\t\tthis.skew.y = value;\n\t}\n\n\tget maskSpriteSkewY() {\n\t\treturn this.skew.y;\n\t}\n\n\tset maskSpritePivotX(value) {\n\t\tthis.pivot.x = value;\n\t}\n\n\tget maskSpritePivotX() {\n\t\treturn this.pivot.x;\n\t}\n\n\tset maskSpritePivotY(value) {\n\t\tthis.pivot.y = value;\n\t}\n\n\tget maskSpritePivotY() {\n\t\treturn this.pivot.y;\n\t}\n\n\thandleTransform() {\n\t\tthis.sprite.position.x = this.targetPlaceable.x + this.placeableImg.x + this.position.x;\n\t\tthis.sprite.position.y = this.targetPlaceable.y + this.placeableImg.y + this.position.y;\n\t\tthis.sprite.skew.x = this.skew.x;\n\t\tthis.sprite.skew.x = this.skew.y;\n\t\tthis.sprite.rotation = this.rotation;\n\t\tthis.sprite.pivot.x = this.pivot.x;\n\t\tthis.sprite.pivot.y = this.pivot.y;\n\n\t\tif (this.sticky) this.sprite.rotation += this.placeableImg.rotation;\n\n\t\tthis.sprite.transform.updateTransform(canvas.stage.transform);\n\t}\n\n\tapply(filterManager, input, output, clear) {\n\t\tthis.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, this.maskSprite);\n\t\tthis.uniforms.scale.x = this.scale.x;\n\t\tthis.uniforms.scale.y = this.scale.y;\n\n\t\tconst wt = this.maskSprite.worldTransform;\n\t\tthis.uniforms.rotation[0] = wt.a;\n\t\tthis.uniforms.rotation[1] = wt.b;\n\t\tthis.uniforms.rotation[2] = wt.c;\n\t\tthis.uniforms.rotation[3] = wt.d;\n\n\t\tfilterManager.applyFilter(this, input, output, clear);\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterOldFilm extends PIXI.filters.OldFilmFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.vignetting = 0;\n\t\tthis.noise = 0.08;\n\t\tthis.scratch = 0.1;\n\t\tthis.scratchDensity = 0.1;\n\t\tthis.seed = 0;\n\t\tthis.zOrder = 60;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterGlow extends PIXI.filters.GlowFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.padding = 15;\n\t\tthis.enabled = false;\n\t\tthis.innerStrength = 0;\n\t\tthis.outerStrength = 6.5;\n\t\tthis.color = 0x0020ff;\n\t\tthis.quality = 1;\n\t\tthis.alpha = 1;\n\t\tthis.zOrder = 70;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\t// Imposed value. Should not be a shader uniform\n\t\tthis.distance = 10;\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterOutline extends PIXI.filters.OutlineFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.blendMode = PIXI.BLEND_MODES.NORMAL;\n\t\tthis.padding = 5;\n\t\tthis.enabled = false;\n\t\tthis.thickness = 3;\n\t\tthis.color = 0x000000;\n\t\tthis.quality = 1;\n\t\tthis.zOrder = 50;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterBevel extends PIXI.filters.BevelFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.blendMode = PIXI.BLEND_MODES.NORMAL;\n\t\tthis.padding = 10;\n\t\tthis.enabled = false;\n\t\tthis.rotation = 0;\n\t\tthis.thickness = 5;\n\t\tthis.lightColor = 0xffffff;\n\t\tthis.lightAlpha = 0.95;\n\t\tthis.shadowColor = 0x000000;\n\t\tthis.shadowAlpha = 0.95;\n\t\tthis.zOrder = 90;\n\t\tthis.quality = 1;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\nimport { FilterDropShadowEx } from './FilterDropShadowEx.js';\n\nexport class FilterDropShadow extends FilterDropShadowEx {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.rotation = 45;\n\t\tthis.distance = 5;\n\t\tthis.color = 0x000000;\n\t\tthis.alpha = 0.5;\n\t\tthis.shadowOnly = false;\n\t\tthis.blur = 2;\n\t\tthis.quality = 3;\n\t\tthis.padding = 10;\n\t\tthis.zOrder = 110;\n\t\tthis.animated = {};\n\t\tthis.resolution = game.settings.get('core', 'pixelRatioResolutionScaling')\n\t\t\t? window.devicePixelRatio\n\t\t\t: PIXI.settings.FILTER_RESOLUTION;\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t\tthis.autoFit = false;\n\t}\n}\n","import { CustomFilter } from './CustomFilter.js';\nimport { dropShadow } from '../glsl/fragmentshaders/dropshadow.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport './proto/FilterProto.js';\n\nexport class FilterDropShadowEx extends CustomFilter {\n\tshadowOnly;\n\tangle = 45;\n\n\t_distance = 5;\n\t_resolution = PIXI.settings.FILTER_RESOLUTION;\n\t_tintFilter;\n\t_blurFilter;\n\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tconst opt = options ? { ...FilterDropShadowEx.defaults, ...options } : FilterDropShadowEx.defaults;\n\n\t\tconst { kernels, blur, quality, resolution } = opt;\n\n\t\tthis._tintFilter = new PIXI.Filter(customVertex2D, dropShadow);\n\t\tthis._tintFilter.uniforms.color = new Float32Array(4);\n\t\tthis._tintFilter.uniforms.shift = new PIXI.Point();\n\t\tthis._tintFilter.resolution = resolution;\n\t\tthis._blurFilter = kernels\n\t\t\t? new PIXI.filters.KawaseBlurFilter(kernels)\n\t\t\t: new PIXI.filters.KawaseBlurFilter(blur, quality);\n\n\t\tthis._pixelSize = 1.0;\n\t\tthis.resolution = resolution;\n\n\t\tconst { shadowOnly, rotation, distance, alpha, color } = opt;\n\n\t\tthis.shadowOnly = shadowOnly;\n\t\tthis.rotation = rotation;\n\t\tthis.distance = distance;\n\t\tthis.alpha = alpha;\n\t\tthis.color = color;\n\t}\n\n\tapply(filterManager, input, output, clear) {\n\t\tthis._updateShiftAndScale();\n\t\tconst target = filterManager.getFilterTexture();\n\n\t\tthis._tintFilter.apply(filterManager, input, target, 1);\n\t\tthis._blurFilter.apply(filterManager, target, output, clear);\n\n\t\tif (this.shadowOnly !== true) {\n\t\t\tfilterManager.applyFilter(this, input, output, 0);\n\t\t}\n\n\t\tfilterManager.returnFilterTexture(target);\n\t}\n\n\t_updateShiftAndScale() {\n\t\tconst scale = this.targetPlaceable?.worldTransform.a ?? 1.0;\n\t\tthis._tintFilter.uniforms.shift.set(\n\t\t\tthis.distance * Math.cos(this.angle) * scale,\n\t\t\tthis.distance * Math.sin(this.angle) * scale\n\t\t);\n\t\tthis._pixelSize = Math.max(1.0, 1.0 * scale);\n\t}\n\n\tget resolution() {\n\t\treturn this._resolution;\n\t}\n\tset resolution(value) {\n\t\tthis._resolution = value;\n\n\t\tif (this._tintFilter) {\n\t\t\tthis._tintFilter.resolution = value;\n\t\t}\n\t\tif (this._blurFilter) {\n\t\t\tthis._blurFilter.resolution = value;\n\t\t}\n\t}\n\n\tget distance() {\n\t\treturn this._distance;\n\t}\n\tset distance(value) {\n\t\tthis._distance = value;\n\t}\n\n\tget rotation() {\n\t\treturn this.angle / PIXI.DEG_TO_RAD;\n\t}\n\tset rotation(value) {\n\t\tthis.angle = value * PIXI.DEG_TO_RAD;\n\t}\n\n\tget alpha() {\n\t\treturn this._tintFilter.uniforms.alpha;\n\t}\n\tset alpha(value) {\n\t\tthis._tintFilter.uniforms.alpha = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this._tintFilter.uniforms.color);\n\t}\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this._tintFilter.uniforms.color);\n\t}\n\n\tget kernels() {\n\t\treturn this._blurFilter.kernels;\n\t}\n\tset kernels(value) {\n\t\tthis._blurFilter.kernels = value;\n\t}\n\n\tget blur() {\n\t\treturn this._blurFilter.blur;\n\t}\n\tset blur(value) {\n\t\tthis._blurFilter.blur = value;\n\t}\n\n\tget quality() {\n\t\treturn this._blurFilter.quality;\n\t}\n\tset quality(value) {\n\t\tthis._blurFilter.quality = value;\n\t}\n\n\tget _pixelSize() {\n\t\treturn this._blurFilter.pixelSize;\n\t}\n\tset _pixelSize(value) {\n\t\tthis._blurFilter.pixelSize = value;\n\t}\n}\n\nFilterDropShadowEx.defaults = {\n\trotation: 45,\n\tdistance: 5,\n\tcolor: 0x000000,\n\talpha: 0.5,\n\tshadowOnly: false,\n\tkernels: null,\n\tblur: 2,\n\tquality: 3,\n\tresolution: PIXI.settings.FILTER_RESOLUTION,\n};\n","const _tempRect = new PIXI.Rectangle();\n\nexport class CustomFilter extends PIXI.Filter {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tif (!this.uniforms.filterMatrix || !this.uniforms.filterMatrixInverse)\n\t\t\tthis.uniforms.filterMatrix = new PIXI.Matrix();\n\n\t\tif (!this.uniforms.filterMatrixInverse) this.uniforms.filterMatrixInverse = new PIXI.Matrix();\n\t}\n\n\tapply(filterManager, input, output, clear) {\n\t\tconst filterMatrix = this.uniforms.filterMatrix;\n\n\t\tif (filterMatrix) {\n\t\t\tconst { sourceFrame, destinationFrame, target } = filterManager.activeState;\n\n\t\t\tfilterMatrix.set(destinationFrame.width, 0, 0, destinationFrame.height, sourceFrame.x, sourceFrame.y);\n\n\t\t\tconst worldTransform = PIXI.Matrix.TEMP_MATRIX;\n\n\t\t\tconst localBounds = target.getLocalBounds(_tempRect);\n\n\t\t\tif (this.sticky) {\n\t\t\t\tworldTransform.copyFrom(target.transform.worldTransform);\n\t\t\t\tworldTransform.invert();\n\n\t\t\t\tconst rotation = target.transform.rotation;\n\t\t\t\tconst sin = Math.sin(rotation);\n\t\t\t\tconst cos = Math.cos(rotation);\n\t\t\t\tconst scaleX = Math.hypot(\n\t\t\t\t\tcos * worldTransform.a + sin * worldTransform.c,\n\t\t\t\t\tcos * worldTransform.b + sin * worldTransform.d\n\t\t\t\t);\n\t\t\t\tconst scaleY = Math.hypot(\n\t\t\t\t\t-sin * worldTransform.a + cos * worldTransform.c,\n\t\t\t\t\t-sin * worldTransform.b + cos * worldTransform.d\n\t\t\t\t);\n\n\t\t\t\tlocalBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\n\t\t\t} else {\n\t\t\t\tconst transform = target.transform;\n\t\t\t\tworldTransform.a = transform.scale.x;\n\t\t\t\tworldTransform.b = 0;\n\t\t\t\tworldTransform.c = 0;\n\t\t\t\tworldTransform.d = transform.scale.y;\n\t\t\t\tworldTransform.tx = transform.position.x - transform.pivot.x * transform.scale.x;\n\t\t\t\tworldTransform.ty = transform.position.y - transform.pivot.y * transform.scale.y;\n\t\t\t\tworldTransform.prepend(target.parent.transform.worldTransform);\n\t\t\t\tworldTransform.invert();\n\n\t\t\t\tconst scaleX = Math.hypot(worldTransform.a, worldTransform.b);\n\t\t\t\tconst scaleY = Math.hypot(worldTransform.c, worldTransform.d);\n\n\t\t\t\tlocalBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\n\t\t\t}\n\n\t\t\tfilterMatrix.prepend(worldTransform);\n\t\t\tfilterMatrix.translate(-localBounds.x, -localBounds.y);\n\t\t\tfilterMatrix.scale(1.0 / localBounds.width, 1.0 / localBounds.height);\n\n\t\t\tconst filterMatrixInverse = this.uniforms.filterMatrixInverse;\n\n\t\t\tif (filterMatrixInverse) {\n\t\t\t\tfilterMatrixInverse.copyFrom(filterMatrix);\n\t\t\t\tfilterMatrixInverse.invert();\n\t\t\t}\n\t\t}\n\n\t\tfilterManager.applyFilter(this, input, output, clear);\n\t}\n}\n","export const dropShadow = `\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float alpha;\nuniform vec3 color;\n\nuniform vec2 shift;\nuniform vec4 inputSize;\n\nvoid main(void){\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\n\n    // Premultiply alpha\n    sample.rgb = color.rgb * sample.a;\n\n    // alpha user alpha\n    sample *= alpha;\n\n    gl_FragColor = sample;\n}\n`;\n","// Custom vertex shader with filterLocalCoord()\n\nexport const customVertex2D = `\nprecision mediump float;\n\nattribute vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\nuniform mat3 filterMatrix;\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0., 1.);\n}\n\nvec2 filterTextureCoord( void )\n{\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void)\n{\n    gl_Position = filterVertexPosition();\n    vTextureCoord = filterTextureCoord();\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\n}\n`;\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterTwist extends PIXI.filters.TwistFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.radiusPercent = 50;\n\t\tthis.angle = 4;\n\t\tthis.zOrder = 240;\n\t\tthis.animated = {};\n\t\tthis.offset = [0, 0];\n\t\tthis.autoFit = false;\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\thandleTransform() {\n\t\tthis.offset[0] = this.placeableImg.worldTransform.tx;\n\t\tthis.offset[1] = this.placeableImg.worldTransform.ty;\n\t\tthis.radius =\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\n\t\t\t\tthis.radiusPercent) /\n\t\t\t200;\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterZoomBlur extends PIXI.filters.ZoomBlurFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.strength = 0.1;\n\t\tthis.radiusPercent = 50;\n\t\tthis.innerRadiusPercent = 10;\n\t\tthis.zOrder = 300;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\thandleTransform(state) {\n\t\tthis.center[0] = 0.5 * state.sourceFrame.width;\n\t\tthis.center[1] = 0.5 * state.sourceFrame.height;\n\t\tthis.radius =\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\n\t\t\t\tthis.radiusPercent) /\n\t\t\t200;\n\t\tthis.innerRadius =\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\n\t\t\t\tthis.innerRadiusPercent) /\n\t\t\t200;\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\nimport { FilterBlurEx } from './FilterBlurEx.js';\n\nexport class FilterBlur extends FilterBlurEx {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.blur = 2;\n\t\tthis.quality = 4;\n\t\tthis.zOrder = 290;\n\t\tthis.repeatEdgePixels = false;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget blur() {\n\t\treturn this.strengthX;\n\t}\n\n\tset blur(value) {\n\t\tthis.strengthX = this.strengthY = value;\n\t}\n\n\tget blurX() {\n\t\treturn this.strengthX;\n\t}\n\n\tset blurX(value) {\n\t\tthis.strengthX = value;\n\t}\n\n\tget blurY() {\n\t\treturn this.strengthY;\n\t}\n\n\tset blurY(value) {\n\t\tthis.strengthY = value;\n\t}\n\n\tcalculatePadding() {\n\t\tconst scale = this.targetPlaceable.worldTransform.a;\n\t\tthis.blurXFilter.blur = scale * this.strengthX;\n\t\tthis.blurYFilter.blur = scale * this.strengthY;\n\t\tthis.updatePadding();\n\t\tsuper.calculatePadding();\n\t}\n}\n","import { CustomFilter } from './CustomFilter.js';\n\nexport class FilterBlurEx extends CustomFilter {\n\tblurXFilter;\n\tblurYFilter;\n\n\t_repeatEdgePixels;\n\n\tconstructor(strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5) {\n\t\tsuper();\n\n\t\tthis.blurXFilter = new BlurFilterPassEx(true, strength, quality, resolution, kernelSize);\n\t\tthis.blurYFilter = new BlurFilterPassEx(false, strength, quality, resolution, kernelSize);\n\n\t\tthis.resolution = resolution;\n\t\tthis.quality = quality;\n\t\tthis.blur = strength;\n\n\t\tthis.repeatEdgePixels = false;\n\t}\n\n\tapply(filterManager, input, output, clearMode) {\n\t\tconst xStrength = Math.abs(this.blurXFilter.strength);\n\t\tconst yStrength = Math.abs(this.blurYFilter.strength);\n\n\t\tif (xStrength && yStrength) {\n\t\t\tconst renderTarget = filterManager.getFilterTexture();\n\n\t\t\tthis.blurXFilter.apply(filterManager, input, renderTarget, PIXI.CLEAR_MODES.CLEAR);\n\t\t\tthis.blurYFilter.apply(filterManager, renderTarget, output, clearMode);\n\n\t\t\tfilterManager.returnFilterTexture(renderTarget);\n\t\t} else if (yStrength) {\n\t\t\tthis.blurYFilter.apply(filterManager, input, output, clearMode);\n\t\t} else {\n\t\t\tthis.blurXFilter.apply(filterManager, input, output, clearMode);\n\t\t}\n\t}\n\n\tupdatePadding() {\n\t\tif (this._repeatEdgePixels) {\n\t\t\tthis.padding = 0;\n\t\t} else {\n\t\t\tthis.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n\t\t}\n\t}\n\n\tget blur() {\n\t\treturn this.blurXFilter.blur;\n\t}\n\n\tset blur(value) {\n\t\tthis.blurXFilter.blur = this.blurYFilter.blur = value;\n\t\tthis.updatePadding();\n\t}\n\n\tget quality() {\n\t\treturn this.blurXFilter.quality;\n\t}\n\n\tset quality(value) {\n\t\tthis.blurXFilter.quality = this.blurYFilter.quality = value;\n\t}\n\n\tget blurX() {\n\t\treturn this.blurXFilter.blur;\n\t}\n\n\tset blurX(value) {\n\t\tthis.blurXFilter.blur = value;\n\t\tthis.updatePadding();\n\t}\n\n\tget blurY() {\n\t\treturn this.blurYFilter.blur;\n\t}\n\n\tset blurY(value) {\n\t\tthis.blurYFilter.blur = value;\n\t\tthis.updatePadding();\n\t}\n\n\tget blendMode() {\n\t\treturn this.blurYFilter.blendMode;\n\t}\n\n\tset blendMode(value) {\n\t\tthis.blurYFilter.blendMode = value;\n\t}\n\n\tget repeatEdgePixels() {\n\t\treturn this._repeatEdgePixels;\n\t}\n\n\tset repeatEdgePixels(value) {\n\t\tthis._repeatEdgePixels = value;\n\t\tthis.updatePadding();\n\t}\n}\n\nexport class BlurFilterPassEx extends CustomFilter {\n\thorizontal;\n\tstrength;\n\tpasses;\n\t_quality;\n\n\tconstructor(horizontal, strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5) {\n\t\tconst vertSrc = generateBlurVertSource(kernelSize, horizontal);\n\t\tconst fragSrc = generateBlurFragSource(kernelSize);\n\n\t\tsuper(\n\t\t\t// vertex shader\n\t\t\tvertSrc,\n\t\t\t// fragment shader\n\t\t\tfragSrc\n\t\t);\n\n\t\tthis.horizontal = horizontal;\n\n\t\tthis.resolution = resolution;\n\n\t\tthis._quality = 0;\n\n\t\tthis.quality = quality;\n\n\t\tthis.blur = strength;\n\t}\n\n\tapply(filterManager, input, output, clearMode) {\n\t\tif (output) {\n\t\t\tif (this.horizontal) {\n\t\t\t\tthis.uniforms.strength = (1 / output.width) * (output.width / input.width);\n\t\t\t} else {\n\t\t\t\tthis.uniforms.strength = (1 / output.height) * (output.height / input.height);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.horizontal) {\n\t\t\t\tthis.uniforms.strength = (1 / filterManager.renderer.width) * (filterManager.renderer.width / input.width);\n\t\t\t} else {\n\t\t\t\tthis.uniforms.strength = (1 / filterManager.renderer.height) * (filterManager.renderer.height / input.height);\n\t\t\t}\n\t\t}\n\n\t\t// screen space!\n\t\tthis.uniforms.strength *= this.strength;\n\t\tthis.uniforms.strength /= this.passes;\n\n\t\tif (this.passes === 1) {\n\t\t\tfilterManager.applyFilter(this, input, output, clearMode);\n\t\t} else {\n\t\t\tconst renderTarget = filterManager.getFilterTexture();\n\t\t\tconst renderer = filterManager.renderer;\n\n\t\t\tlet flip = input;\n\t\t\tlet flop = renderTarget;\n\n\t\t\tthis.state.blend = false;\n\t\t\tfilterManager.applyFilter(this, flip, flop, PIXI.CLEAR_MODES.CLEAR);\n\n\t\t\tfor (let i = 1; i < this.passes - 1; i++) {\n\t\t\t\tfilterManager.bindAndClear(flip, PIXI.CLEAR_MODES.BLIT);\n\n\t\t\t\tthis.uniforms.uSampler = flop;\n\n\t\t\t\tconst temp = flop;\n\n\t\t\t\tflop = flip;\n\t\t\t\tflip = temp;\n\n\t\t\t\trenderer.shader.bind(this);\n\t\t\t\trenderer.geometry.draw(5);\n\t\t\t}\n\n\t\t\tthis.state.blend = true;\n\t\t\tfilterManager.applyFilter(this, flop, output, clearMode);\n\t\t\tfilterManager.returnFilterTexture(renderTarget);\n\t\t}\n\t}\n\n\tget blur() {\n\t\treturn this.strength;\n\t}\n\n\tset blur(value) {\n\t\tthis.padding = 1 + Math.abs(value) * 2;\n\t\tthis.strength = value;\n\t}\n\n\tget quality() {\n\t\treturn this._quality;\n\t}\n\n\tset quality(value) {\n\t\tthis._quality = value;\n\t\tthis.passes = value;\n\t}\n}\n\nconst GAUSSIAN_VALUES = {\n\t5: [0.153388, 0.221461, 0.250301],\n\t7: [0.071303, 0.131514, 0.189879, 0.214607],\n\t9: [0.028532, 0.067234, 0.124009, 0.179044, 0.20236],\n\t11: [0.0093, 0.028002, 0.065984, 0.121703, 0.175713, 0.198596],\n\t13: [0.002406, 0.009255, 0.027867, 0.065666, 0.121117, 0.174868, 0.197641],\n\t15: [0.000489, 0.002403, 0.009246, 0.02784, 0.065602, 0.120999, 0.174697, 0.197448],\n};\n\nconst fragTemplate = [\n\t'varying vec2 vBlurTexCoords[%size%];',\n\t'uniform sampler2D uSampler;',\n\n\t'void main(void)',\n\t'{',\n\t'    gl_FragColor = vec4(0.0);',\n\t'    %blur%',\n\t'}',\n].join('\\n');\n\nexport function generateBlurFragSource(kernelSize) {\n\tconst kernel = GAUSSIAN_VALUES[kernelSize];\n\tconst halfLength = kernel.length;\n\n\tlet fragSource = fragTemplate;\n\n\tlet blurLoop = '';\n\tconst template = 'gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;';\n\tlet value;\n\n\tfor (let i = 0; i < kernelSize; i++) {\n\t\tlet blur = template.replace('%index%', i.toString());\n\n\t\tvalue = i;\n\n\t\tif (i >= halfLength) {\n\t\t\tvalue = kernelSize - i - 1;\n\t\t}\n\n\t\tblur = blur.replace('%value%', kernel[value].toString());\n\n\t\tblurLoop += blur;\n\t\tblurLoop += '\\n';\n\t}\n\n\tfragSource = fragSource.replace('%blur%', blurLoop);\n\tfragSource = fragSource.replace('%size%', kernelSize.toString());\n\n\treturn fragSource;\n}\n\nconst vertTemplate = `\n    attribute vec2 aVertexPosition;\n    uniform mat3 projectionMatrix;\n    uniform float strength;\n    varying vec2 vBlurTexCoords[%size%];\n    uniform vec4 inputSize;\n    uniform vec4 outputFrame;\n    vec4 filterVertexPosition( void )\n    {\n        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n    }\n    vec2 filterTextureCoord( void )\n    {\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\n    }\n    void main(void)\n    {\n        gl_Position = filterVertexPosition();\n        vec2 textureCoord = filterTextureCoord();\n        %blur%\n    }`;\n\nexport function generateBlurVertSource(kernelSize, x) {\n\tconst halfLength = Math.ceil(kernelSize / 2);\n\n\tlet vertSource = vertTemplate;\n\n\tlet blurLoop = '';\n\tlet template;\n\n\tif (x) {\n\t\ttemplate = 'vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);';\n\t} else {\n\t\ttemplate = 'vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);';\n\t}\n\n\tfor (let i = 0; i < kernelSize; i++) {\n\t\tlet blur = template.replace('%index%', i.toString());\n\n\t\tblur = blur.replace('%sampleIndex%', `${i - (halfLength - 1)}.0`);\n\n\t\tblurLoop += blur;\n\t\tblurLoop += '\\n';\n\t}\n\n\tvertSource = vertSource.replace('%blur%', blurLoop);\n\tvertSource = vertSource.replace('%size%', kernelSize.toString());\n\n\treturn vertSource;\n}\n\nexport function getMaxKernelSize(gl) {\n\tconst maxVaryings = PIXI.gl.getParameter(PIXI.gl.MAX_VARYING_VECTORS);\n\tlet kernelSize = 15;\n\n\twhile (kernelSize > maxVaryings) {\n\t\tkernelSize -= 2;\n\t}\n\n\treturn kernelSize;\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterShockwave extends PIXI.filters.ShockwaveFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\n\t\tthis.time = 0;\n\t\tthis.amplitude = 5;\n\t\tthis.wavelength = 100;\n\t\tthis.speed = 50.0;\n\t\tthis.brightness = 1.5;\n\t\tthis.radius = 200;\n\n\t\tthis.zOrder = 220;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\thandleTransform(state) {\n\t\tthis.center[0] = 0.5 * state.sourceFrame.width;\n\t\tthis.center[1] = 0.5 * state.sourceFrame.height;\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterBulgePinch extends PIXI.filters.BulgePinchFilter {\n\tconstructor(params) {\n\t\tsuper();\n\n\t\tthis.strength = 0;\n\t\tthis.radiusPercent = 100;\n\t\tthis.zOrder = 140;\n\t\tthis.autoFit = false;\n\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\n\t\t// Anchor point\n\t\tthis.center = [0.5, 0.5];\n\t}\n\n\thandleTransform() {\n\t\tthis.radius =\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\n\t\t\t\tthis.radiusPercent) /\n\t\t\t200;\n\t}\n}\n","import { removeShadowFrag } from '../glsl/fragmentshaders/removeshadow.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterRemoveShadow extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { alphaTolerance } = Object.assign({}, FilterRemoveShadow.defaults, params);\n\n\t\t// using the default vertex shader and the specific fragment shader\n\t\tsuper(undefined, removeShadowFrag);\n\n\t\tObject.assign(this, {\n\t\t\talphaTolerance,\n\t\t});\n\n\t\tthis.zOrder = 10;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget alphaTolerance() {\n\t\treturn this.uniforms.alphaTolerance;\n\t}\n\tset alphaTolerance(value) {\n\t\tthis.uniforms.alphaTolerance = value;\n\t}\n}\n\nFilterRemoveShadow.defaults = {\n\talphaTolerance: 0.8,\n};\n","export const removeShadowFrag = `\nprecision mediump float;\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float alphaTolerance;\n\nvoid main(void) {\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a <= alphaTolerance) {\n        pixel = vec4(0.);\n    } \n    gl_FragColor = pixel;\n}\n`;\n","import { cosmicRayFrag } from '../glsl/fragmentshaders/cosmicray.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterRays extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, divisor, alpha, anchorX, anchorY, dimX, dimY, alphaDiscard } = Object.assign(\n\t\t\t{},\n\t\t\tFilterRays.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, cosmicRayFrag);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 0.55]);\n\t\tthis.uniforms.anchor = new Float32Array([0.5, 0.5]);\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tdivisor,\n\t\t\talpha,\n\t\t\tanchorX,\n\t\t\tanchorY,\n\t\t\tdimX,\n\t\t\tdimY,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 120;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget divisor() {\n\t\treturn this.uniforms.divisor;\n\t}\n\n\tset divisor(value) {\n\t\tthis.uniforms.divisor = value;\n\t}\n\n\tget alpha() {\n\t\treturn this.uniforms.color[3];\n\t}\n\n\tset alpha(value) {\n\t\tif (value >= 0 && value <= 1) {\n\t\t\tthis.uniforms.color[3] = value;\n\t\t}\n\t}\n\n\tget anchorX() {\n\t\treturn this.uniforms.anchor[0];\n\t}\n\n\tset anchorX(value) {\n\t\tthis.uniforms.anchor[0] = value;\n\t}\n\n\tget anchorY() {\n\t\treturn this.uniforms.anchor[1];\n\t}\n\n\tset anchorY(value) {\n\t\tthis.uniforms.anchor[1] = value;\n\t}\n\n\tget dimX() {\n\t\treturn this.uniforms.dimensions[0];\n\t}\n\n\tset dimX(value) {\n\t\tthis.uniforms.dimensions[0] = value;\n\t}\n\n\tget dimY() {\n\t\treturn this.uniforms.dimensions[1];\n\t}\n\n\tset dimY(value) {\n\t\tthis.uniforms.dimensions[1] = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n}\n\nFilterRays.defaults = {\n\ttime: 0.0,\n\tcolor: 0xff8010,\n\tdivisor: 16,\n\talpha: 0.55,\n\tanchorX: 0.5,\n\tanchorY: 0.5,\n\tdimX: 100,\n\tdimY: 100,\n\talphaDiscard: false,\n};\n","export const cosmicRayFrag = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uSampler;\nuniform float time;\nuniform vec2 dimensions;\nuniform vec2 anchor;\nuniform vec4 color;\nuniform float divisor;\nuniform bool alphaDiscard;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nfloat PI = 3.14159265359;\nfloat speed = 1.2;\nfloat width = 0.5;\nfloat subdivide = 512.0;\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec2 uv = (vFilterCoord - anchor) / dimensions;    \n    float len = length(uv *0.5),\n   \t\tangle = ( atan(uv.x, uv.y) / ( 2. * PI) ) + 1.5,\n    \twobble = 48. + 24. * cos(time/5.),\n    \twhite = fract((angle) * divisor + sin((sqrt(len) * wobble) - time * speed));\n    \n    white  = 2.* cos(white / (PI * 0.1));\n    white *= floor(fract(angle * divisor + sin(time / speed - (len * 1.2) * wobble)) *subdivide) / subdivide;\n    \n    vec4 color1 = smoothstep(0., 1., white * color);\n    vec4 result = mix(pixel, color1, color1.a);\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.05)))) discard;\n    gl_FragColor = result*pixel.a;\n}\n`;\n","import { innerFog } from '../glsl/fragmentshaders/fog.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\n\nexport class FilterFog extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, density, dimX, dimY } = Object.assign({}, FilterFog.defaults, params);\n\n\t\t// specific vertex and fragment shaders\n\t\tsuper(customVertex2D, innerFog);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 0.55]);\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tdensity,\n\t\t\tdimX,\n\t\t\tdimY,\n\t\t});\n\n\t\tthis.zOrder = 190;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget density() {\n\t\treturn this.uniforms.density;\n\t}\n\n\tset density(value) {\n\t\tthis.uniforms.density = value;\n\t}\n\n\tget dimX() {\n\t\treturn this.uniforms.dimensions[0];\n\t}\n\n\tset dimX(value) {\n\t\tthis.uniforms.dimensions[0] = value;\n\t}\n\n\tget dimY() {\n\t\treturn this.uniforms.dimensions[1];\n\t}\n\n\tset dimY(value) {\n\t\tthis.uniforms.dimensions[1] = value;\n\t}\n}\n\nFilterFog.defaults = {\n\ttime: 0.0,\n\tcolor: 0xffffff,\n\tdensity: 0.5,\n\tdimX: 1.0,\n\tdimY: 1.0,\n};\n","export const innerFog = `\nprecision mediump float;\n\nuniform float time;\nuniform vec3 color;\nuniform float density;\nuniform vec2 dimensions;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n// generates pseudo-random based on screen position\nfloat random(vec2 pos) \n{\n\treturn fract(sin(dot(pos.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\n// perlin noise\nfloat noise(vec2 pos) \n{\n\tvec2 i = floor(pos);\n\tvec2 f = fract(pos);\n\tfloat a = random(i + vec2(0.0, 0.0));\n\tfloat b = random(i + vec2(1.0, 0.0));\n\tfloat c = random(i + vec2(0.0, 1.0));\n\tfloat d = random(i + vec2(1.0, 1.0));\n\tvec2 u = f * f * (3.0 - 2.0 * f);\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n// fractional brownian motion\nfloat fbm(vec2 pos) \n{\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100.);\n\tmat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.5));\n\tfor (int i=0; i<16; i++) \n\t{\n\t\tv = (sin(v*1.07)) + ( a * noise(pos) );\n\t\tpos = rot * pos * 1.9 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\nmat4 contrastMatrix(float contrast)\n{\n\tfloat t = ( 1.0 - contrast ) * 0.5;\n    \n    return mat4( contrast, 0, 0, 0,\n                 0, contrast, 0, 0,\n                 0, 0, contrast, 0,\n                 t, t, t, 1 );\n}\n\nvec4 fog()\n{\n\tvec2 p = (vFilterCoord.xy * 8. - vFilterCoord.xy) * dimensions;\n\t\n\tfloat time2 = time * 0.0025;\n\t\n\tvec2 q = vec2(0.0);\n\tq.x = fbm(p);\n\tq.y = fbm(p);\n\tvec2 r = vec2(-1.0);\n\tr.x = fbm(p * q + vec2(1.7, 9.2) + .15 * time2);\n\tr.y = fbm(p * q + vec2(9.3, 2.8) + .35 * time2);\n\tfloat f = fbm(p*.2 + r*3.102);\n\n\tvec4 fogPixel = mix(\n\t\tvec4(color,1.0),\n\t\tvec4(1.5, 1.5, 1.5, 1.5),\n\t\tclamp(length(r.x), 0.4, 1.)\n\t);\n\n\treturn (f *f * f + 0.6 * f * f + 0.5 * f) * fogPixel;\n}\n\nvoid main(void) \n{\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n\n    // to avoid computation on an invisible pixel.\n    if (pixel.a == 0.) {\n\t\tgl_FragColor = pixel;\n\t\treturn;\n    }\n\n\tvec4 fogPixel = contrastMatrix(3.0)*fog();\n    gl_FragColor = mix(pixel, fogPixel, 1.*density) * pixel.a;\n}\n`;\n","import { xFog } from '../glsl/fragmentshaders/xfog.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\n\nexport class FilterXFog extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, alphaDiscard } = Object.assign({}, FilterXFog.defaults, params);\n\n\t\t// specific vertex and fragment shaders\n\t\tsuper(customVertex2D, xFog);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 0.55]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 230;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n}\n\nFilterXFog.defaults = {\n\ttime: 0.0,\n\tcolor: 0xffffff,\n\talphaDiscard: false,\n};\n","export const xFog = `\nprecision mediump float;\n\nuniform float time;\nuniform vec3 color;\nuniform bool alphaDiscard;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265;\nconst mat3 rotationMatrix = mat3(1.0,0.0,0.0,0.0,0.47,-0.88,0.0,0.88,0.47);\n\t\nfloat hash(float p)\n{\n    return fract(sin(dot(vec2(p*0.00010,0.),vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise( vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n    return mix(mix(mix( hash(n+0.0  ), hash(n+1.0),f.x),mix( hash(n+57.0 ), hash(n+58.0 ),f.x),f.y),\n           mix(mix( hash(n+113.0), hash(n+114.0),f.x),mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n} \n\nvec4 map( vec3 p )\n{\n\tfloat d = 0.2 - p.y;\t\n\tvec3 q = p  - vec3(0.0,1.0,0.0)*time;\n\tfloat f  = 0.5*noise( q ); q = q*2.02 - vec3(0.25,0.25,0.25)*time*0.4;\n\tf += 0.25*noise( q ); \n    q = q*2.03 - vec3(0.0,1.0,0.0)*time*0.2;\n\tf += 0.125*noise( q ); \n\td = clamp( d + 4.5*f, 0.0, 1.0 );\n\tvec3 col = mix( vec3(0.9,0.9,0.9), vec3(0.1,0.1,0.1), d ) + 0.05*sin(p);\n\treturn vec4( col, d );\n}\n\nvec3 cloudify( vec3 ro, vec3 rd )\n{\n\tvec4 s = vec4(0.);\n\tfloat t = 0.0;\n    vec3 col = color*0.75;\n    vec3 p;\n    vec4 k;\n\n\tfor( int i=0; i<90; i++ )\n\t{\n\t\tif( s.a > 0.97 ) break;\n\t\tp = ro + t*rd;\n\t\tk = map( p );\n\t\tk.rgb *= mix( col, color, clamp( (p.y-0.2)*0.5, 0.0, 1.0 ) );\n\t\tk.a *= 0.5;\n\t\tk.rgb *= k.a;\n\t\ts = s + k*(1.0-s.a);\t\n\t\tt += 0.05;\n\t}\n\treturn clamp( s.xyz, 0.0, 1.0 );\n}\n\nvec4 xfog()\n{\n\tvec3 vo = vec3(0.0,4.9,-40.);\n\tvec3 vd = normalize(vec3(vFilterCoord.xy, 1.)) * rotationMatrix * 2.25;\n\tvec3 volume = cloudify( vo, vd );\n\tvolume *= volume;\n\treturn vec4( volume, 1.0 );\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a == 0.) discard;\n    vec4 result = max( xfog(), pixel) * pixel.a;\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.15)))) discard;\n    gl_FragColor = result;\n}\n`;\n","import { zapElectricity } from '../glsl/fragmentshaders/electricity.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterElectric extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, blend, color } = Object.assign({}, FilterElectric.defaults, params);\n\n\t\tvar shaderFragment;\n\t\tif (params.hasOwnProperty('intensity') && typeof params.intensity === 'number') {\n\t\t\tvar intensityVal = Math.floor(params.intensity);\n\t\t\tshaderFragment = zapElectricity.replace('#define INTENSITY 5', '#define INTENSITY ' + intensityVal);\n\t\t} else {\n\t\t\tshaderFragment = zapElectricity;\n\t\t}\n\n\t\tsuper(customVertex2D, shaderFragment);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0, 1.0]);\n\t\tthis.uniforms.blend = 2;\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tblend,\n\t\t\tcolor,\n\t\t});\n\n\t\tthis.zOrder = 160;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\n\t\tthis.quality = 0.5;\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n}\n\nFilterElectric.defaults = {\n\ttime: 0.0,\n\tblend: 1,\n\tcolor: 0xffffff,\n};\n","export const zapElectricity = `\nprecision mediump float;\nprecision mediump int;\n\n#define INTENSITY 5\n\nconst float PI = 3.14159265358979323846264;\n\nuniform sampler2D uSampler;\nuniform vec4 color;\nvarying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\nuniform float time;\nuniform int blend;\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nfloat Perlin(vec3 P)\n{\n    vec3 Pi = floor(P);\n    vec3 Pf = P - Pi;\n    vec3 Pf_min1 = Pf - 1.0;\n\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;\n    vec3 Pi_inc1 = step(Pi, vec3(69.0 - 1.5)) * (Pi + 1.0);\n\n    vec4 Pt = vec4(Pi.xy, Pi_inc1.xy) + vec2(50.0, 161.0).xyxy;\n    Pt *= Pt;\n    Pt = Pt.xzxz * Pt.yyww;\n    const vec3 SOMELARGEFLOATS = vec3(635.298681, 682.357502, 668.926525);\n    const vec3 ZINC = vec3(48.500388, 65.294118, 63.934599);\n    vec3 lowz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi.zzz * ZINC));\n    vec3 highz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi_inc1.zzz * ZINC));\n    vec4 hashx0 = fract(Pt * lowz_mod.xxxx);\n    vec4 hashx1 = fract(Pt * highz_mod.xxxx);\n    vec4 hashy0 = fract(Pt * lowz_mod.yyyy);\n    vec4 hashy1 = fract(Pt * highz_mod.yyyy);\n    vec4 hashz0 = fract(Pt * lowz_mod.zzzz);\n    vec4 hashz1 = fract(Pt * highz_mod.zzzz);\n\n    vec4 grad_x0 = hashx0 - 0.49999;\n    vec4 grad_y0 = hashy0 - 0.49999;\n    vec4 grad_z0 = hashz0 - 0.49999;\n    vec4 grad_x1 = hashx1 - 0.49999;\n    vec4 grad_y1 = hashy1 - 0.49999;\n    vec4 grad_z1 = hashz1 - 0.49999;\n    vec4 grad_results_0 = inversesqrt(grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x0 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y0 + Pf.zzzz * grad_z0);\n    vec4 grad_results_1 = inversesqrt(grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x1 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1);\n\n    vec3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);\n    vec4 res0 = mix(grad_results_0, grad_results_1, blend.z);\n    vec4 blend2 = vec4(blend.xy, vec2(1.0 - blend.xy));\n    float final = dot(res0, blend2.zxzx * blend2.wwyy);\n    return (final * 1.1547005383792515290182975610039);  // scale things to a strict -1.0->1.0 range  *= 1.0/sqrt(0.75)\n}\n\nfloat fbm(vec3 p)\n{\n    float v = 0.0;\n    v += Perlin(p * 0.9) * 1.5 * cos(PI * time * 0.48);\n    v += Perlin(p * 3.99) * 0.5 * sin(PI * time * 0.4);\n    v += Perlin(p * 8.01) * 0.4 * cos(PI * time * 0.4);\n    v += Perlin(p * 15.05) * 0.05 * sin(PI * time * 0.8);\n\n    return v;\n}\n\nvec4 electric() {\n    vec3 noiseVec = vec3(vFilterCoord, 1.);\n    vec3 color = vec3(0.0);\n    for (int i = 0; i < INTENSITY; ++i ) {\n        noiseVec = noiseVec.yxz;\n        float t = abs(2.0 / (fbm(noiseVec + vec3(0.0, time / float(i + 4), 0.0)) * 120.0));\n        color += t * vec3(float(i + 1) * 0.1 + 0.1, 0.5, 2.0);\n    }\n    return vec4(color, 1.);\n}\n\nvoid main() {\n \n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    \n    // to avoid computation of invisible pixels\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n    \n    vec4 electric = electric();\n    electric *= color;\n\n    gl_FragColor = blenderVec3(blend,pixel,electric)*pixel.a;\n}\n`;\n","import { magicWaves } from '../glsl/fragmentshaders/waves.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterWaves extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, inward, frequency, strength, minIntensity, maxIntensity, anchorX, anchorY } = Object.assign(\n\t\t\t{},\n\t\t\tFilterWaves.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, magicWaves);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.anchor = new Float32Array([0.5, 0.5]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tinward,\n\t\t\tfrequency,\n\t\t\tstrength,\n\t\t\tminIntensity,\n\t\t\tmaxIntensity,\n\t\t\tanchorX,\n\t\t\tanchorY,\n\t\t});\n\n\t\tthis.zOrder = 280;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget inward() {\n\t\treturn this.uniforms.inward;\n\t}\n\n\tset inward(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.inward = value;\n\t\t}\n\t}\n\n\tget anchorX() {\n\t\treturn this.uniforms.anchor[0];\n\t}\n\n\tset anchorX(value) {\n\t\tthis.uniforms.anchor[0] = value;\n\t}\n\n\tget anchorY() {\n\t\treturn this.uniforms.anchor[1];\n\t}\n\n\tset anchorY(value) {\n\t\tthis.uniforms.anchor[1] = value;\n\t}\n\n\tget frequency() {\n\t\treturn this.uniforms.frequency;\n\t}\n\n\tset frequency(value) {\n\t\tthis.uniforms.frequency = value;\n\t}\n\n\tget strength() {\n\t\treturn this.uniforms.strength;\n\t}\n\n\tset strength(value) {\n\t\tthis.uniforms.strength = value;\n\t}\n\n\tget minIntensity() {\n\t\treturn this.uniforms.minIntensity;\n\t}\n\n\tset minIntensity(value) {\n\t\tthis.uniforms.minIntensity = value;\n\t}\n\n\tget maxIntensity() {\n\t\treturn this.uniforms.maxIntensity;\n\t}\n\n\tset maxIntensity(value) {\n\t\tthis.uniforms.maxIntensity = value;\n\t}\n}\n\nFilterWaves.defaults = {\n\ttime: 0,\n\tcolor: 0xffffff,\n\tinward: false,\n\tfrequency: 35,\n\tstrength: 0.01,\n\tminIntensity: 1.2,\n\tmaxIntensity: 3.5,\n\tanchorX: 0.5,\n\tanchorY: 0.5,\n};\n","export const magicWaves = `\nprecision mediump float;\nprecision mediump int;\n\nuniform vec3 color;\nuniform vec2 anchor;\nuniform float time;\nuniform bool inward;\nuniform float frequency;\nuniform float strength;\nuniform float minIntensity;\nuniform float maxIntensity;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\nuniform sampler2D uSampler;\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    float speed = inward ? 1.0 : -1.0;\n\n    vec2 centeredUVs = vFilterCoord - anchor;\n    float dist = length(centeredUVs);\n    float sinVal = sin((time * speed) + (dist * frequency));\n    \n    float sinValNormalized = sinVal * 0.5 + 0.5;\n    float lerp = ((maxIntensity - minIntensity) * sinValNormalized) + minIntensity;\n    \n    float rotationAmount = strength * sinVal;\n\n    float sinX = sin ( rotationAmount );\n    float cosX = cos ( rotationAmount );\n    mat2 rotationMatrix = mat2( cosX, -sinX, sinX, cosX);\n    vec2 newTextureCoord = vTextureCoord - vec2(0.5,0.5);\n\n    newTextureCoord = vec2(newTextureCoord * rotationMatrix ); \n    newTextureCoord = newTextureCoord + vec2(0.5, 0.5);     \n    vec4 col = texture2D(uSampler, newTextureCoord);\n    \n    col.rgb = col.rgb * color * lerp;\n    if (col.r != 0. && col.g != 0. && col.b != 0.) {\n       col.a = pixel.a;\n    }\n\n    gl_FragColor = col * pixel.a;\n}\n`;\n","import { burnFire } from '../glsl/fragmentshaders/fire.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterFire extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, amplitude, intensity, fireBlend, blend, anchorX, anchorY, alphaDiscard } = Object.assign(\n\t\t\t{},\n\t\t\tFilterFire.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, burnFire);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.anchor = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tamplitude,\n\t\t\tintensity,\n\t\t\tfireBlend,\n\t\t\tblend,\n\t\t\tanchorX,\n\t\t\tanchorY,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 150;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget amplitude() {\n\t\treturn this.uniforms.amplitude;\n\t}\n\n\tset amplitude(value) {\n\t\tthis.uniforms.amplitude = value;\n\t}\n\n\tget intensity() {\n\t\treturn this.uniforms.intensity;\n\t}\n\n\tset intensity(value) {\n\t\tthis.uniforms.intensity = value;\n\t}\n\n\tget fireBlend() {\n\t\treturn this.uniforms.fireBlend;\n\t}\n\n\tset fireBlend(value) {\n\t\tthis.uniforms.fireBlend = Math.floor(value);\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget anchorX() {\n\t\treturn this.uniforms.anchor[0];\n\t}\n\n\tset anchorX(value) {\n\t\tthis.uniforms.anchor[0] = value;\n\t}\n\n\tget anchorY() {\n\t\treturn this.uniforms.anchor[1];\n\t}\n\n\tset anchorY(value) {\n\t\tthis.uniforms.anchor[1] = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n}\n\nFilterFire.defaults = {\n\ttime: 0,\n\tcolor: 0xffffff,\n\tamplitude: 1,\n\tintensity: 1,\n\tfireBlend: 1,\n\tblend: 2,\n\tanchorX: 1,\n\tanchorY: 1,\n\talphaDiscard: false,\n};\n","export const burnFire = `\nprecision mediump float;\n\nuniform float time;\nuniform float amplitude;\nuniform float intensity;\nuniform int fireBlend;\nuniform int blend;\nuniform bool alphaDiscard;\nuniform vec2 anchor;\nuniform vec3 color;\n\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nfloat rand(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < 7; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 fire() \n{\n    const vec3 c1 = vec3(0.1, 0.0, 0.);\n\tconst vec3 c2 = vec3(0.7, 0.0, 0.);\n\tconst vec3 c3 = vec3(0.2, 0.0, 0.);\n\tconst vec3 c4 = vec3(1.0, 0.9, 0.);\n\tconst vec3 c5 = vec3(0.1);\n\tconst vec3 c6 = vec3(0.9);\n    vec2 uv = vFilterCoord - anchor;\n\tvec2 p = uv.xy * 8.0;\n\tfloat q = fbm(p - time * 0.1);\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n\treturn vec4(c * cos(1.57/(intensity-0.03) * uv.y), 1.0);\n}\n\nvec4 fireBlending()\n{\n    vec4 fire = fire();\n    vec4 tint = vec4(color,1.0);\n    return blenderVec3(fireBlend,fire,tint);\n}\n\nvec4 resultBlending(vec4 pixel, vec4 fire)\n{\n    vec4 result = blenderVec3(blend,pixel,fire);\n    return result;\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec4 result = resultBlending(pixel, fireBlending())*pixel.a;\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.50)))) discard;\n\tgl_FragColor = result;\n}\n`;\n","import { fumes } from '../glsl/fragmentshaders/fumes.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterFumes extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, blend, dimX, dimY } = Object.assign({}, FilterFumes.defaults, params);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, fumes);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tblend,\n\t\t\tdimX,\n\t\t\tdimY,\n\t\t});\n\n\t\tthis.zOrder = 210;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget dimX() {\n\t\treturn this.uniforms.dimensions[0];\n\t}\n\n\tset dimX(value) {\n\t\tthis.uniforms.dimensions[0] = value;\n\t}\n\n\tget dimY() {\n\t\treturn this.uniforms.dimensions[1];\n\t}\n\n\tset dimY(value) {\n\t\tthis.uniforms.dimensions[1] = value;\n\t}\n}\n\nFilterFumes.defaults = {\n\ttime: 0,\n\tcolor: 0xffffff,\n\tblend: 2,\n\tdimX: 1,\n\tdimY: 1,\n};\n","export const fumes = `\nprecision mediump float;\nprecision mediump int;\n\nuniform float time;\nuniform vec2 dimensions;\nuniform int blend;\nuniform vec3 color;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n#define TWOPI 6.28318530718\n\nvec4 toGray(in vec4 color)\n{\n  float average = (color.r + color.g + color.b) * 0.33333334;\n  return vec4(average, average, average, 1.0);\n}\n\nvec4 colorize(in vec4 grayscale, in vec4 color)\n{\n    return (grayscale * color);\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nvec4 fog(vec2 fragCoord)\n{\n    float t = time * 0.26 + 23.0;\n    vec2 uv = fragCoord.xy * dimensions.xy;\n\n    vec2 p = mod(uv * TWOPI, TWOPI) - 250.0;\n    vec2 i = vec2(p);\n    float c = 0.75;\n    float intensity = 0.014;\n\n    for (int n = 0; n < 4; n++) {\n        float t = t * (1.0 - (3.5 / float(n + 1)));\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n        c += 1.0 / length(vec2(.5 * p.x / (sin(0.40 * i.x + t) / intensity), p.y / (cos(i.y + t) / intensity)));\n    }\n\n    c *= 0.16666667;\n    c = 1.17 - pow(c, 1.4);\n    vec3 colour = vec3(pow(abs(c), 8.0));\n\n    return vec4(colour * colour, 1.);\n}\n\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    // to avoid computation on an invisible pixel.\n    if (pixel.a==0.) {\n        gl_FragColor = pixel;\n        return;\n    }\n\n    // fog generation.\n    vec4 fog = colorize(\n               toGray(\n                 fog(vFilterCoord.xy) \n               + fog(-vFilterCoord.xy * 0.65))\n                    ,vec4(color/3., 1.)) * 0.9;\n\n    // we put the fog and the pixel into the blender, and we serve, adjusted by the pixel alpha.\n\tgl_FragColor = blenderVec3(blend, fog, pixel) * pixel.a;\n}\n`;\n","import { seaFlood } from '../glsl/fragmentshaders/flood.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterFlood extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, scale, glint, billowy, color, shiftX, shiftY, tintIntensity } = Object.assign(\n\t\t\t{},\n\t\t\tFilterFlood.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, seaFlood);\n\n\t\tthis.uniforms.waterColor = new Float32Array([0.0, 0.18, 0.54]);\n\t\tthis.uniforms.shift = new Float32Array([0.0, 0.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tscale,\n\t\t\tglint,\n\t\t\tbillowy,\n\t\t\tcolor,\n\t\t\tshiftX,\n\t\t\tshiftY,\n\t\t\ttintIntensity,\n\t\t});\n\n\t\tthis.zOrder = 170;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.waterColor);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.waterColor);\n\t}\n\n\tget scale() {\n\t\treturn this.uniforms.scale;\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale = value;\n\t}\n\n\tget glint() {\n\t\treturn this.uniforms.glint;\n\t}\n\n\tset glint(value) {\n\t\tthis.uniforms.glint = value;\n\t}\n\n\tget billowy() {\n\t\treturn this.uniforms.billowy;\n\t}\n\n\tset billowy(value) {\n\t\tthis.uniforms.billowy = value;\n\t}\n\n\tget tintIntensity() {\n\t\treturn this.uniforms.tintIntensity;\n\t}\n\n\tset tintIntensity(value) {\n\t\tthis.uniforms.tintIntensity = value;\n\t}\n\n\tget shiftX() {\n\t\treturn this.uniforms.shift[0];\n\t}\n\n\tset shiftX(value) {\n\t\tthis.uniforms.shift[0] = value;\n\t}\n\n\tget shiftY() {\n\t\tthis.uniforms.shift[1];\n\t}\n\n\tset shiftY(value) {\n\t\tthis.uniforms.shift[1] = value;\n\t}\n}\n\nFilterFlood.defaults = {\n\ttime: 0,\n\tglint: 0.5,\n\tscale: 70,\n\tbillowy: 0.5,\n\tcolor: 0x0020a9,\n\tshiftX: 0,\n\tshiftY: 0,\n\ttintIntensity: 0.2,\n};\n","export const seaFlood = `\nprecision mediump float;\n\nuniform float time;\nuniform float scale;\nuniform float glint;\nuniform float billowy;\nuniform float tintIntensity;\nuniform vec2 shift;\nuniform vec3 waterColor;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\nuniform sampler2D uSampler;\nuniform mat3 filterMatrixInverse;\n\nconst float timeSpeed = 3.;\n\n#define TWOPI 6.28318531\n\nfloat randomVal (float inVal)\n{\n    return fract(sin(mod(dot(vec2(inVal, 2523.2361) , vec2(12.9898,78.233)), TWOPI)) * 43758.5453)-0.5;\n}\n\nvec2 randomVec2 (float inVal)\n{\n    return normalize(vec2(randomVal(inVal), randomVal(inVal+151.523)));\n}\n\nfloat makeWaves(vec2 uv, float theTime, float offset)\n{\n    float result = 0.0;\n    float direction = 0.0;\n    float sineWave = 0.0;\n    vec2 randVec = vec2(0.0,0.0);\n    float i;\n    for(int n = 0; n < 16; n++)\n    {\n        i = float(n)+offset;\n        randVec = randomVec2(float(i));\n  \t\tdirection = (uv.x*randVec.x+uv.y*randVec.y);\n        sineWave = sin(mod(direction*randomVal(i+1.6516)+theTime*timeSpeed, TWOPI));\n        sineWave = smoothstep(0.2,1.,sineWave);\n    \tresult += randomVal(i+123.0)*sineWave;\n    }\n    return result;\n}\n\nvec4 water( vec2 fragCoord )\n{\n    vec4 fragColor;\n\tvec2 uv = fragCoord.xy * 0.5;\n    \n    vec2 uv2 = uv * scale;\n    \n    uv *= 2.0;\n\n    float result = 0.0;\n    float result2 = 0.0;\n    \n    result = makeWaves( uv2+vec2(time*timeSpeed,0.0), time, 0.1);\n    result2 = makeWaves( uv2-vec2(time*0.8*timeSpeed,0.0), time*0.8+1.06, 0.26);\n    \n    result *= 0.2;\n    \n    result = smoothstep(0.35,1.1,1.0-abs(result));\n    result2 = smoothstep(0.35,1.1,1.0-abs(result2));\n    \n    result = 2.0*smoothstep(0.35,1.8,(result+result2)*glint);\n\n    vec2 p = vec2(result, result2)*0.019 + (cos( mod(  uv*1.1 - sin(mod(uv.yx + time*timeSpeed/20., TWOPI)), TWOPI) )*0.012);\n    uv.x -= shift.x;\n    uv.y -= shift.y;\n    uv += p * billowy;\n    vec4 pixel = texture2D( uSampler , (filterMatrixInverse * vec3(uv, 1.0)).xy );\n\treturn (vec4(result)*0.9 + pixel)*pixel.a;\n}\n\nvoid main() {\n    vec4 water = water(vFilterCoord);\n    vec4 result = mix(vec4(waterColor,1.0),water,1./(tintIntensity+1.000000001))*water.a;\n    gl_FragColor = result;\n}\n`;\n","import { innerSmoke } from '../glsl/fragmentshaders/smoke.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterSmoke extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, blend, dimX, dimY } = Object.assign({}, FilterSmoke.defaults, params);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, innerSmoke);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tblend,\n\t\t\tdimX,\n\t\t\tdimY,\n\t\t});\n\n\t\tthis.zOrder = 200;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget dimX() {\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset dimX(value) {\n\t\tthis.uniforms.scale[0] = value;\n\t}\n\n\tget dimY() {\n\t\treturn this.uniforms.scale[1];\n\t}\n\n\tset dimY(value) {\n\t\tthis.uniforms.scale[1] = value;\n\t}\n}\n\nFilterSmoke.defaults = {\n\ttime: 0,\n\tcolor: 0xffffff,\n\tblend: 13,\n\tdimX: 1,\n\tdimY: 1,\n};\n","export const innerSmoke = `\nprecision mediump float;\nprecision mediump int;\n\nuniform float time;\nuniform vec2 scale;\nuniform vec3 color;\nuniform int blend;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n#define F4 0.309016994374947451\n#define PI 3.14159\n#define SPEED 0.01\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = fCol + sCol; }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,1.0);\n}\n\nvec4 mod289(vec4 x) \n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat mod289(float x) \n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4(float j, vec4 ip) \n{\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n    return p;\n}\n\nfloat snoise(vec4 v) \n{\n    const vec4  C = vec4( 0.138196601125011,\n                          0.276393202250021,\n                          0.414589803375032,\n                         -0.447213595499958);\n\n    vec4 i  = floor(v + dot(v, vec4(F4)) );\n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n      \n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n      \n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n    \n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n    m0 = m0 * m0;\n    m1 = m1 * m1;\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\nfloat surface( vec4 coord ) \n{\n\tfloat n = 0.0;\n\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\n\t\n\treturn n;\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    // to avoid computation on an invisible pixel\n    if (pixel.a == 0.) {\n        gl_FragColor = pixel;\n        return;\n    }\n\n    vec2 uv = vFilterCoord - vec2(0.375*scale.x,0.375*scale.y);\n    float s = uv.x * scale.x;\n    float t = uv.y * scale.y;\n    \n    float multiplier = 1.0 / ( 2.0 * PI );\n    float nx = cos( s * 2.0 * PI ) * multiplier;\n    float ny = cos( t * 2.0 * PI ) * multiplier;\n    float nz = sin( s * 2.0 * PI ) * multiplier;\n    float nw = sin( t * 2.0 * PI ) * multiplier;\n\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * SPEED );\n    vec4 result = vec4( color * vec3( surf ), 1.0 );\n    \n    gl_FragColor = blenderVec3(blend,pixel,result) * pixel.a;\n}\n`;\n","import { forceField } from '../glsl/fragmentshaders/forcefield.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterForceField extends CustomFilter {\n\tconstructor(params) {\n\t\tlet {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tlightAlpha,\n\t\t\tblend,\n\t\t\tshieldType,\n\t\t\tposLightX,\n\t\t\tposLightY,\n\t\t\tlightSize,\n\t\t\tscale,\n\t\t\tintensity,\n\t\t\tradius,\n\t\t\thideRadius,\n\t\t\tchromatic,\n\t\t\tdiscardThreshold,\n\t\t\talphaDiscard,\n\t\t} = Object.assign({}, FilterForceField.defaults, params);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, forceField);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.posLight = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tlightAlpha,\n\t\t\tblend,\n\t\t\tshieldType,\n\t\t\tposLightX,\n\t\t\tposLightY,\n\t\t\tlightSize,\n\t\t\tscale,\n\t\t\tintensity,\n\t\t\tradius,\n\t\t\thideRadius,\n\t\t\tchromatic,\n\t\t\tdiscardThreshold,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 2000;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget lightAlpha() {\n\t\treturn this.uniforms.lightColorAlpha;\n\t}\n\n\tset lightAlpha(value) {\n\t\tthis.uniforms.lightColorAlpha = value;\n\t}\n\n\tget shieldType() {\n\t\treturn this.uniforms.shieldType;\n\t}\n\n\tset shieldType(value) {\n\t\tthis.uniforms.shieldType = Math.floor(value);\n\t}\n\n\tget posLightX() {\n\t\treturn this.uniforms.posLight[0];\n\t}\n\n\tset posLightX(value) {\n\t\tthis.uniforms.posLight[0] = value;\n\t}\n\n\tget posLightY() {\n\t\treturn this.uniforms.posLight[1];\n\t}\n\n\tset posLightY(value) {\n\t\tthis.uniforms.posLight[1] = value;\n\t}\n\n\tget lightSize() {\n\t\treturn this.uniforms.lightSize;\n\t}\n\n\tset lightSize(value) {\n\t\tthis.uniforms.lightSize = value;\n\t}\n\n\tget scale() {\n\t\treturn this.uniforms.scale;\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale = value;\n\t}\n\n\tget intensity() {\n\t\treturn this.uniforms.intensity;\n\t}\n\n\tset intensity(value) {\n\t\tthis.uniforms.intensity = value;\n\t}\n\n\tget radius() {\n\t\treturn this.uniforms.radius;\n\t}\n\n\tset radius(value) {\n\t\tthis.uniforms.radius = value;\n\t}\n\n\tget hideRadius() {\n\t\treturn this.uniforms.hideRadius;\n\t}\n\n\tset hideRadius(value) {\n\t\tthis.uniforms.hideRadius = value;\n\t}\n\n\tget discardThreshold() {\n\t\treturn this.uniforms.discardThreshold;\n\t}\n\n\tset discardThreshold(value) {\n\t\tthis.uniforms.discardThreshold = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n\n\tget chromatic() {\n\t\treturn this.uniforms.chromatic;\n\t}\n\n\tset chromatic(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.chromatic = value;\n\t\t}\n\t}\n}\n\nFilterForceField.defaults = {\n\ttime: 0,\n\tcolor: 0xbbbbbb,\n\tlightAlpha: 1.0,\n\tblend: 2,\n\tshieldType: 1,\n\tposLightX: 0.65,\n\tposLightY: 0.25,\n\tlightSize: 0.483,\n\tscale: 1,\n\tintensity: 1,\n\tradius: 1,\n\thideRadius: 0,\n\tchromatic: false,\n\tdiscardThreshold: 0.25,\n\talphaDiscard: false,\n};\n","export const forceField = `\nprecision mediump float;\n\nuniform float time;\nuniform int blend;\nuniform int shieldType;\nuniform vec3 color;\nuniform vec2 posLight;\nuniform vec3 ambientColor;\nuniform float intensity;\nuniform float lightColorAlpha;\nuniform float lightSize;\nuniform float scale;\nuniform float radius;\nuniform float hideRadius;\nuniform float discardThreshold;\nuniform bool chromatic;\nuniform bool alphaDiscard;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\n#define SQRT5B20 0.30901699\n#define PI 3.14159265\n#define TWOPI 6.28318531\n#define SPEED 0.01\n#define MU_TWOPI 0.15915494309\n#define MU_289 0.00346020761\n#define MU_3 0.33333333334\n#define MU_1_5 0.66666666667\n\nvec3 hsvToRgb(vec3 hsVcolor)\n{\n    vec4 K = vec4(1., 2.0 * MU_3, 1.0 * MU_3, 3.0);\n    vec3 p = abs(fract(hsVcolor.xxx + K.xyz) \n             * 6.0 - K.www);\n    return hsVcolor.z \n           * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsVcolor.y);\n}\n\nvec3 multihue(vec2 uv) \n{\n    float h = 0.5 + atan(uv.y, uv.x) * MU_TWOPI;\n    vec3 hsv = vec3(h, 1., 1.);\n    return hsvToRgb(hsv);\n}\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec2 random2(vec2 p) \n{\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat bornedCos(float minimum, float maximum)\n{\n    return (maximum-minimum)*(cos(PI*time*0.10 + 1.)*0.5)+minimum;\n}\n\nfloat bornedSin(float minimum, float maximum)\n{\n    return (maximum-minimum)*(sin(PI*time*0.10 + 1.)*0.5)+minimum;\n}\n\nvec4 mod289(vec4 x) \n{\n    return x - floor(x * MU_289) * 289.0;\n}\n\nfloat mod289(float x) \n{\n    return x - floor(x * MU_289) * 289.0;\n}\n\nvec4 permute(vec4 x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) \n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r) \n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4(float j, vec4 ip) \n{\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n    return p;\n}\n\nfloat snoise(vec4 v) \n{\n    const vec4  C = vec4( 0.138196601125011,\n                          0.276393202250021,\n                          0.414589803375032,\n                         -0.447213595499958);\n\n    vec4 i  = floor(v + dot(v, vec4(SQRT5B20)) );\n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n      \n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n      \n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n    \n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n    m0 = m0 * m0;\n    m1 = m1 * m1;\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\nfloat surface( vec4 coord ) \n{\n\tfloat n = 0.0;\n\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\n\t\n\treturn n;\n}\n\nvec4 ambientLight(vec4 pixel, vec2 fragCoord, vec2 posLg) \n{\n  vec3 lightColor = (color+vec3(2.)) * MU_3;\n  vec2 position = posLg;\n  \n  float maxDistance = lightSize;\n  float distance = distance(fragCoord-posLg, position);\n  float value = 1.0 - smoothstep(-0.2, maxDistance, distance);\n  \n  vec3 ambient = pixel.rgb * color * intensity;\n  vec3 light = (lightColor*lightColorAlpha) * clamp(value, 0.0, 1.0);\n  vec3 intensity = ambient + light;\n  vec3 final = pixel.rgb * intensity;\n\n  return vec4(final, 1.0);\n}\n\nvec3 toGray(vec3 color)\n{\n  float average = (color.r + color.g + color.b)*0.3333333;\n  return vec3(average, average, average);\n}\n\nvec3 colorize(vec3 grayscale, vec3 color)\n{\n    return (grayscale * color);\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\n    else if (blend == 13) { fCol = fCol + sCol; return vec4(fCol,0.6); }\n    else if (blend == 14) { return mix(fColv4,sColv4,1.-fColv4.a); }\n    else if (blend == 15) { return mix(fColv4,sColv4,fColv4.a); }\n    else { fCol = fCol + sCol; }\n    \n    return vec4(fCol,(fColv4.a+sColv4.a)*0.5);\n}\n\nfloat hexDist(vec2 p) \n{\n\tp = abs(p);\n\t\n    float c = dot(p, normalize(vec2(1,1.73)));\n    c = max(c, p.x);\n    \n    return c;\n}\n\nvec4 hexCoords(vec2 uv) \n{\n\tconst vec2 r = vec2(1, 1.73);\n    const vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    vec2 gv = dot(a, a) < dot(b,b) ? a : b;\n    \n    float x = atan(gv.x, gv.y);\n    float y = .65-hexDist(gv);\n    vec2 id = uv-gv;\n    return vec4(x, y, id.x,id.y);\n}\n\nvec4 hexa(vec2 fragCoord)\n{\n    float t = time;\n    \n    vec2 uv = fragCoord;\n    vec2 uv1 = uv + vec2(0, sin(uv.x*1. +t)*.25);\n    \n    vec2 uv2 = .5*uv1 + .5*uv + vec2(sin(uv.y*5. + t)*.05, 0);\n    float a = 1. + t*0.1;\n    float c = cos(a);\n    float s = sin(a);\n    uv2 *= mat2(c, -s, s, c);\n    \n    vec3 col = color;\n    col += (smoothstep(abs(uv2.y)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(sin(t)+1.));\n    col += (smoothstep(abs(uv2.x)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(cos(t)+1.));\n\n    return vec4(colorize(toGray(clamp(col,0.,2.)),color),1.);\n}\n\nvec4 voronoi( in vec2 x, float step1, float step2 ) \n{\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n    vec2 mg, mr;\n    float md = 8.0;\n    for (int j= -1; j <= 1; j++) {\n        for (int i= -1; i <= 1; i++) {\n            vec2 g = vec2(float(i),float(j));\n            vec2 o = random2( n + g );\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\n\n            vec2 r = g + o - f;\n            float d = dot(r,r);\n\n            if( d<md ) {\n                md = d;\n                mr = r;\n                mg = g;\n            }\n        }\n    }\n\n    md = 8.0;\n    for (int j= -2; j <= 1; j++) {\n        for (int i= -2; i <= 1; i++) {\n            vec2 g = mg + vec2(float(i),float(j));\n            vec2 o = random2( n + g );\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\n\n            vec2 r = g + o - f;\n\n            if ( dot(mr-r,mr-r)>0.000001 ) {\n                md = min(md, dot( 0.6*(mr+r), normalize(r-mr) ));\n            }\n        }\n    }\n    vec3 intermediate = vec3(md, mr);\n    vec3 final = (intermediate.x*(0.4 + .5*sin(64.0*intermediate.x))*color);\n    final = mix( color, final, smoothstep( step1, step2, intermediate.x*18. ) );\n    return vec4(final,1.);\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = 1.;\n\tfor (int i = 0; i < 7; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nfloat fbm2(vec2 n) \n{\n\tfloat total = 0.0, amp = 1.;\n\tfor (int i = 0; i < 2; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 ripples(vec2 suv) \n{\n    suv.x += time*0.5;\n    vec3 c1 = vec3(0.);\n    vec3 c2 = vec3(c1);\n    vec3 c3 = vec3(c1);\n    vec3 c4 = vec3(color.r*5., color.g*3.333, color.b*2.);\n    vec3 c5 = vec3(c3);\n    vec3 c6 = vec3(c1);\n    vec2 p = suv;\n    float q = 2.*fbm2(p + time*2.);\n    vec2 r = vec2(fbm2(p + q + ( time  ) - p.x - p.y), fbm2(p + p + ( time )));\n    r.x += bornedCos(-0.3,-0.2);\n    r.y += 200.*bornedSin(-1.9,1.9);\n    \n    vec3 c = color * (\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\n    );\n    return vec4(c,1.);\n}\n\nvec4 fire(vec2 suv) \n{\n    vec3 c1 = color+vec3(0.1, 0.0, 0.)*0.666667;\n\tvec3 c2 = color+vec3(0.7, 0.0, 0.)*0.666667;\n\tvec3 c3 = color+vec3(0.2, 0.0, 0.)*0.666667;\n\tvec3 c4 = color+vec3(1.0, 0.9, 0.)*0.666667;\n\tvec3 c5 = vec3(0.1);\n\tvec3 c6 = vec3(0.9);\n    vec2 uv = suv - vec2(0.92,0.26);\n\tvec2 p = uv.xy * 8.0;\n\tfloat q = fbm(p - time * 0.1);\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n\treturn vec4(c * cos(1.57/(1.-0.03) * uv.y), 1.0);\n}\n\nvec4 surface4d(vec2 suv)\n{\n    float s = suv.x + 0.61;\n    float t = suv.y + 0.5;\n    float nx = cos( s * TWOPI ) * MU_TWOPI;\n    float ny = cos( t * TWOPI ) * MU_TWOPI;\n    float nz = sin( s * TWOPI ) * MU_TWOPI;\n    float nw = sin( t * TWOPI ) * MU_TWOPI;\n\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * 0.03 );\n    return vec4( color * vec3( surf ), 1.0 );\n}\n\nvec4 noisy(vec2 suv)\n{\n    vec4 noiseColor;\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time*0.5));\n    noiseColor.a = 1.;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec2 circuit(vec2 p) {\n\tp = fract(p);\n\tfloat r = 0.3;\n\tfloat v = 0.0, g = 1.0;\n\tfloat d;\n\t\n\tconst int iter = 7;\n\tfor(int i = 0; i < iter; i ++)\n\t{\n\t\td = p.x - r;\n\t\tg += pow(clamp(1.0 - abs(d), 0.0, 1.0), 200.0);\n\t\t\n\t\tif(d > 0.0) {\n\t\t\tp.x = (p.x - r) / (1.8 - r);\n\t\t}\n\t\telse {\n\t\t\tp.x = p.x;\n\t\t}\n\t\tp = p.yx;\n\t}\n\tv /= float(iter);\n\treturn vec2(g, v);\n}\n\nvec4 denseSmoke(vec2 suv)\n{\n    vec4 noiseColor;\n    vec2 uv;\n    uv.x = (fbm(suv*2.)-suv.x);\n    uv.y = (suv.y+fbm(suv*2.));\n    noiseColor.rgb = (color.rgb * min(fbm(uv - time*0.5),fbm(uv)*1.5));\n    noiseColor.a = 1.0;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec4 dancingFume(vec2 suv)\n{\n    vec4 noiseColor;\n    vec2 uv;\n    uv.x += noise(suv)+fbm(suv);\n    uv.y += noise(suv)+fbm(suv);\n    uv *= 0.5;\n    noiseColor.rgb = (color.rgb * fbm((uv + suv*0.15) - time));\n    noiseColor.a = 1.0;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec4 hugeSmoke(vec2 suv)\n{\n    vec4 noiseColor;\n    vec2 uv;\n    uv.x += sin(suv.y)+fbm(suv);\n    uv.y += cos(suv.x)+fbm(suv);\n    uv *= 0.5;\n    noiseColor.rgb = (color.rgb * fbm((uv + suv) - time));\n    noiseColor.a = 1.0;\n    return clamp(noiseColor,0.,1.);\n}\n\nvec4 grid(vec2 suv)\n{\n    vec2 uv = suv + vec2(0.,-1.5);\n\tvec2 cid2 = floor(uv);\n\tfloat cid = (cid2.y + cid2.x);\n\n\tvec2 dg = circuit(uv);\n\tfloat d = dg.x;\n\tvec3 col1 = (0.5-vec3(max(min(d, 2.0) - 1., 0.))) * color * 2.;\n    col1.rgb = sqrt(col1.rgb*0.5);\n\tvec3 col2 = vec3(max(d - 1.0, 0.0)) * color * 30. ;\n\n\tfloat f = max(0.7 - mod(sin(-uv.y) - cos(-uv.x) + (time * 1.) + (dg.y * 0.2), 0.9), 0.0) * 1.;\n\tcol2 *= f;\n\n    return vec4(col1 + col2, 1.0);\n}\n\nvec4 galaxy(vec2 suv)\n{\n    vec2 uv = suv*0.166666667 \n        + vec2(bornedCos(0.0,0.7),\n               bornedSin(0.0,0.7));\n\n    float t = 0.44 * time \n            + (( 0.25 + 0.05 * sin( time * 0.44 )) \n            / ( length( uv.xy ) + 0.2 )) * 2.2;\n    \n    float si = sin( t * 1.5 );\n    float co = cos( t * 0.66666667 );\n    mat2 matrix = mat2( -co, si, si, co );\n    \n    float c;\n    float v1 = 0.0;\n    float v2 = 0.0;\n    vec3 uv2 = vec3( uv, 0.0 );\n    \n    for( int i = 0; i < 50; i++ ) {\n        float s = float( i ) * 0.035;\n        vec3 p = s * uv2;\n        p.xy *= matrix;\n        p += vec3( .22,.3, s - 1.5 - sin( t * 0.13 ) * 0.1 );\n\n        for( int i = 0; i < 6; i++ ) {\n            p = abs( p ) / dot( p, p ) - 0.659;\n        }\n\n        v1 += dot( p,p ) * 0.0045 * ( 1.8 + sin( length( uv.xy * 13.0 ) + 0.5 - t * 0.2 ) );\n        v2 += dot( p,p ) * 0.0045 * ( 1.5 + sin( length( uv.xy * 13.5 ) + 2.2 - t * 0.3 ) );\n        c = length( p.xy * 0.5 ) * 1.05;\n    }\n    \n    float len = length( uv );\n    v1 *= smoothstep( 0.7, 0.0, len );\n    v2 *= smoothstep( 0.6, 0.0, len );\n    \n    float r = clamp( c, 0.0, 1.0 );\n    float g = clamp( ( v1 + c ) * 0.25, 0.0, 1.0 );\n    float b = clamp( v2, 0.0, 1.0 );\n    vec3 col = color * vec3( r, g, b ) + smoothstep( 0.15, 0.0, len ) * 0.9;\n\n    return clamp(vec4( col, 1.0 ),0.,1.);\n}\n\nvec2 getSphere(out float alpha, out float r)\n{\n  vec2 tc = vFilterCoord.xy;\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / radius);\n  r = dot(p,p);\n  r > 0.943 ? alpha = max(min(40.*log(1./r),1.),0.) : alpha = 1.;\n  float f = (1.0-sqrt(1.0-r))/(r);\n  vec2 uv;\n  uv.x = p.x*f;\n  uv.y = p.y*f;\n  return uv;\n}\n\nvoid computeHideAlpha(out float alpha)\n{\n  vec2 tc = vFilterCoord.xy;\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / hideRadius);\n  float r = dot(p,p);\n  r > 0.9 ? alpha = 1.-max(min(40.*log(1./r),1.),0.) : alpha = 0.;\n}\n\nvoid main()\n{\n    float a, r, hideAlpha;\n    vec4 result;\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n\n    if (hideRadius > 0.) computeHideAlpha(hideAlpha);\n    else hideAlpha = 1.;\n\n    if (pixel.a == 0. && hideAlpha == 0.) {\n        discard;\n    }\n\n    vec2 uv = getSphere(a, r);\n\n    if (shieldType <= 1) {\n        result = ripples(15.*uv*scale);\n    } else if (shieldType == 2) {\n        result = hexa(uv*scale);\n    } else if (shieldType == 3) {\n        result = fire(uv/1.5*scale);\n    } else if (shieldType == 4) {\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.29,0.0);\n    } else if (shieldType == 5) {\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.0019,1.);\n    } else if (shieldType == 6) {\n        result = 3.*surface4d(uv*scale);\n    } else if (shieldType == 7) {\n        result = noisy(uv*20.*scale);\n    } else if (shieldType == 8) {\n        result = denseSmoke(uv*10.*scale);\n    } else if (shieldType == 9) {\n        result = dancingFume(uv*20.*scale);\n    } else if (shieldType == 10) {\n        result = hugeSmoke(uv*5.*scale);\n    } else if (shieldType == 11) {\n        result = grid(uv*5.*scale);\n    } else if (shieldType == 12) {\n        result = galaxy(uv*5.*scale);\n    } else if (shieldType != 1) {\n        result = vec4(color,1.);\n    }\n\n    vec4 colorized;\n    vec3 chromaOption;\n    if (chromatic) {\n        vec2 vHue = uv;\n        vHue.x -= bornedCos(-0.,+2.2);\n        vHue.y -= bornedSin(-0.,+2.2);\n        chromaOption = multihue(vHue);\n    } else {\n        chromaOption = color;\n    }\n    colorized = (vec4(\n                    colorize(\n                        toGray(result.rgb), chromaOption), result.a) + result)*0.5;\n    vec4 preRenderedResult = clamp(ambientLight(clamp(colorized, 0., 1.)*intensity, uv, posLight-vec2(0.5,0.5)),0.,1.);\n    vec4 final = vec4(preRenderedResult.rgb * hideAlpha, 1.);\n\n    if (alphaDiscard && all(lessThanEqual(final.rgb,vec3(discardThreshold)))) {\n        if (pixel.a == 0.) discard;\n        else {\n            gl_FragColor = pixel;\n            return;\n        }\n    }\n\n    gl_FragColor =\n            r > 1.0\n                ? pixel*(1.-a)\n                : (pixel.a < 1. \n                        ? mix( blenderVec3(13, pixel, final), blenderVec3(blend, pixel, final), pixel.a)\n                        : blenderVec3(blend, pixel, final) * a);\n}\n`;\n","import { mirrorImages } from '../glsl/fragmentshaders/mirrorimages.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterMirrorImages extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, blend, alphaImg, alphaChr, nbImage, ampX, ampY } = Object.assign(\n\t\t\t{},\n\t\t\tFilterMirrorImages.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, mirrorImages);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tblend,\n\t\t\talphaImg,\n\t\t\talphaChr,\n\t\t\tnbImage,\n\t\t\tampX,\n\t\t\tampY,\n\t\t});\n\n\t\tthis.zOrder = 100;\n\t\tthis.autoFit = false;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget alphaImg() {\n\t\treturn this.uniforms.alphaImg;\n\t}\n\n\tset alphaImg(value) {\n\t\tthis.uniforms.alphaImg = value;\n\t}\n\n\tget alphaChr() {\n\t\treturn this.uniforms.alphaChr;\n\t}\n\n\tset alphaChr(value) {\n\t\tthis.uniforms.alphaChr = value;\n\t}\n\n\tget nbImage() {\n\t\treturn this.uniforms.nbImage;\n\t}\n\n\tset nbImage(value) {\n\t\tthis.uniforms.nbImage = Math.floor(value);\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget ampX() {\n\t\treturn this.uniforms.ampX;\n\t}\n\n\tset ampX(value) {\n\t\tthis.uniforms.ampX = value;\n\t}\n\n\tget ampY() {\n\t\treturn this.uniforms.ampY;\n\t}\n\n\tset ampY(value) {\n\t\tthis.uniforms.ampY = value;\n\t}\n}\n\nFilterMirrorImages.defaults = {\n\ttime: 0,\n\tblend: 4,\n\talphaImg: 0.5,\n\talphaChr: 1.0,\n\tnbImage: 4,\n\tampX: 0.15,\n\tampY: 0.15,\n};\n","export const mirrorImages = `\nprecision mediump float;\n\nuniform float time;\nuniform float alphaImg;\nuniform float alphaChr;\nuniform float ampX;\nuniform float ampY;\nuniform int blend;\nuniform int nbImage;\nuniform sampler2D uSampler;\nuniform vec4 inputClamp;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265;\n\nfloat bornedCos(float mi, float ma) {\n    return (ma-mi)*(cos(2.*PI*time*0.2+1.)*0.5)+mi;\n}\n\nfloat bornedSin(float mi, float ma) {\n    return (ma-mi)*(sin(2.*PI*time*0.2+1.)*0.5)+mi;\n}\n\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\n{\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\n\n    fCol.a = max(fCol.a,sCol.a);\n    return fCol;\n}\n\nvec4 renderMirror(vec2 translation, vec4 prevpix)\n{\n    vec2 displaced = vTextureCoord + translation;\n    return blender(blend, prevpix, \n                   texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw)));\n}\n\nvoid main() \n{\n    float x = ampX * bornedCos(0.,1.);\n    float y = ampY * bornedSin(0.,1.);\n    vec4 renderedPixel;\n    vec2 translation;\n\n    if (nbImage >= 1) {\n        translation = vec2(x,y);\n        renderedPixel = texture2D(uSampler, clamp(vTextureCoord + translation, inputClamp.xy, inputClamp.zw));\n    }\n    if (nbImage >= 2) {\n        translation = 0.90*vec2(-x,y*0.5);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 3) {\n        translation = 0.70*vec2(x,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 4) {\n        translation = 0.80*vec2(-x*0.6,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 5) {\n        translation = 1.20*vec2(-x,y*0.4);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 6) {\n        translation = 1.10*vec2(x,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 7) {\n        translation = 0.6*vec2(-x*0.4,-y);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 8) {\n        translation = 1.3*vec2(-x,y*0.70);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    if (nbImage >= 9) {\n        translation = vec2(x*0.5,y*0.85);\n        renderedPixel = renderMirror(translation, renderedPixel);\n    }\n    renderedPixel = renderedPixel*alphaImg;\n    gl_FragColor = blender(blend,texture2D(uSampler, vTextureCoord)*alphaChr , renderedPixel);\n}\n`;\n","import { xRay } from '../glsl/fragmentshaders/xray.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterXRays extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, divisor, intensity, blend, anchorX, anchorY, dimX, dimY } = Object.assign(\n\t\t\t{},\n\t\t\tFilterXRays.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, xRay);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1]);\n\t\tthis.uniforms.anchor = new Float32Array([0.5, -1.0]);\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tdivisor,\n\t\t\tintensity,\n\t\t\tblend,\n\t\t\tanchorX,\n\t\t\tanchorY,\n\t\t\tdimX,\n\t\t\tdimY,\n\t\t});\n\n\t\tthis.zOrder = 130;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget divisor() {\n\t\treturn this.uniforms.divisor;\n\t}\n\n\tset divisor(value) {\n\t\tthis.uniforms.divisor = value;\n\t}\n\n\tget intensity() {\n\t\treturn this.uniforms.intensity;\n\t}\n\n\tset intensity(value) {\n\t\tthis.uniforms.intensity = value;\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget anchorX() {\n\t\treturn this.uniforms.anchor[0];\n\t}\n\n\tset anchorX(value) {\n\t\tthis.uniforms.anchor[0] = value;\n\t}\n\n\tget anchorY() {\n\t\treturn this.uniforms.anchor[1];\n\t}\n\n\tset anchorY(value) {\n\t\tthis.uniforms.anchor[1] = value;\n\t}\n\n\tget dimX() {\n\t\treturn this.uniforms.dimensions[0];\n\t}\n\n\tset dimX(value) {\n\t\tthis.uniforms.dimensions[0] = value;\n\t}\n\n\tget dimY() {\n\t\treturn this.uniforms.dimensions[1];\n\t}\n\n\tset dimY(value) {\n\t\tthis.uniforms.dimensions[1] = value;\n\t}\n}\n\nFilterXRays.defaults = {\n\ttime: 0.0,\n\tcolor: 0xff8010,\n\tdivisor: 40,\n\tintensity: 0.1,\n\tblend: 8,\n\tanchorX: 0.5,\n\tanchorY: -1.0,\n\tdimX: 1,\n\tdimY: 1,\n};\n","export const xRay = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uSampler;\nuniform float time;\nuniform float intensity;\nuniform float divisor;\nuniform int blend;\nuniform vec2 dimensions;\nuniform vec2 anchor;\nuniform vec3 color;\n\nvarying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\n\nconst float MU_TWOPI = 0.15915494309;\nconst float MU_PI5 = 1.59154943092;\nconst float MU_256 = 0.00390625;\n\nvec4 blender(int blend, vec4 fColv4, vec4 sColv4)\n{\n    vec3 fCol = vec3(fColv4);\n    vec3 sCol = vec3(sColv4);\n\n    if ( blend <= 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\n    else if (blend >= 14) { fCol = fCol + sCol; }\n\n    return vec4(fCol,fColv4.a);\n}\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec2 uv = (vFilterCoord - anchor) / dimensions;\n\n    float len = length(uv * 0.5);\n   \tfloat angle = atan(uv.x, uv.y) * MU_TWOPI;\n    float beam = fract((angle) * divisor + sin((sqrt(len) * 0.2) - (time*0.5)));\n    \n    beam  = 2.* cos(beam * MU_PI5);\n    beam *= floor(fract(angle * divisor + sin(time - (len * 1.2) * 0.2)) *256.) * MU_256;\n    \n    float fractburn = fract(beam);\n\n    vec4 color1 = smoothstep(0.0, 1., (beam*(intensity*0.1) + pixel * vec4(color,1.)) / (fractburn == 0. ? fractburn+0.1 : fractburn) * 0.3 );\n    vec4 result = blender(blend, pixel, color1);\n\n    gl_FragColor = result*pixel.a;\n}\n`;\n","import { liquid } from '../glsl/fragmentshaders/liquid.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterLiquid extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, scale, intensity, blend, spectral, alphaDiscard } = Object.assign(\n\t\t\t{},\n\t\t\tFilterLiquid.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, liquid);\n\n\t\tthis.uniforms.color = new Float32Array([0.1, 0.45, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tscale,\n\t\t\tintensity,\n\t\t\tblend,\n\t\t\tspectral,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 180;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget scale() {\n\t\treturn this.uniforms.scale;\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget intensity() {\n\t\treturn this.uniforms.intensity;\n\t}\n\n\tset intensity(value) {\n\t\tthis.uniforms.intensity = value;\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget spectral() {\n\t\treturn this.uniforms.spectral;\n\t}\n\n\tset spectral(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.spectral = value;\n\t\t}\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n}\n\nFilterLiquid.defaults = {\n\ttime: 0.0,\n\tcolor: 0x0595ff,\n\tscale: 1,\n\tintensity: 5,\n\tblend: 4,\n\tspectral: false,\n\talphaDiscard: false,\n};\n","export const liquid = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uSampler;\nuniform mat3 filterMatrixInverse;\nuniform float time;\nuniform float intensity;\nuniform float scale;\nuniform int blend;\nuniform bool spectral;\nuniform bool alphaDiscard;\nuniform vec3 color;\n\nvarying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\n\n#define PI 3.14159265359\n\n#define NUM_OCTAVES 3\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\nvec4 blenderVec3(int blend, vec4 fColv4, vec3 sCol)\n{\n    vec3 fCol = vec3(fColv4);\n    if ( blend == 1) { fCol = fCol * sCol; }\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\n    else if (blend == 3) { fCol = min(fCol, sCol); }\n    else if (blend == 4) { fCol = max(fCol, sCol); }\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\n    else if (blend >= 14) { fCol = fCol + sCol; }\n    \n    return vec4(fCol,fColv4.a);\n}\n\nvoid main() {\n    \n    float distortion1 = fbm( \n        vec2( fbm(  vFilterCoord * 2.5 * scale + time*0.5),\n              fbm( (-vFilterCoord - vec2(0.01)) * 5. * scale + time*0.3333334) )\n                    );\n    \n    float distortion2 = fbm( \n        vec2( fbm( -vFilterCoord * 5. * scale + time*0.5),\n              fbm(  (vFilterCoord + vec2(0.01)) * 2.5 * scale + time*0.3333334) )\n                    );\n    \n    vec2 uv = vFilterCoord;\n    \n    uv.x += 0.8*sin(min(distortion1*0.25,distortion2*0.25));\n    uv.y += 0.8*cos(min(distortion1*0.25,distortion2*0.25));\n    uv *= 1. + 0.11*(cos(sqrt(max(distortion1, distortion2))+1.)*0.5);\n    uv -= vec2(0.036,0.81); \n\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\n    \n    vec4 pixel = texture2D(uSampler, mappedCoord);\n    vec3 aColor = color;\n    if (alphaDiscard) aColor.rgb *= mix(distortion1,distortion2,0.5);\n    else aColor.rgb *= min(distortion1,distortion2);\n    pixel.rgb += aColor*intensity;\n\n    float a = pixel.a;\n\n    if (spectral) pixel.a = max(distortion1,distortion2)*3.75;\n    if (alphaDiscard && all(lessThanEqual(pixel.rgb,vec3(0.50)))) discard;\n\n    gl_FragColor = blenderVec3(blend,pixel,color*0.3333334) * min(pixel.a,a);\n}\n`;\n","import { magicGlow } from '../glsl/fragmentshaders/magicglow.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterGleamingGlow extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, thickness, scale, auraIntensity, subAuraIntensity, discard, threshold, auraType } =\n\t\t\tObject.assign({}, FilterGleamingGlow.defaults, params);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, magicGlow);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 1.0]);\n\t\tthis.uniforms.thickness = new Float32Array([0.01, 0.01]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tthickness,\n\t\t\tscale,\n\t\t\tauraIntensity,\n\t\t\tsubAuraIntensity,\n\t\t\tdiscard,\n\t\t\tthreshold,\n\t\t\tauraType,\n\t\t});\n\n\t\tthis.zOrder = 80;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget scale() {\n\t\treturn this.uniforms.scale;\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale = value;\n\t}\n\n\tget auraIntensity() {\n\t\treturn this.uniforms.auraIntensity;\n\t}\n\n\tset auraIntensity(value) {\n\t\tthis.uniforms.auraIntensity = value;\n\t}\n\n\tget subAuraIntensity() {\n\t\treturn this.uniforms.subAuraIntensity;\n\t}\n\n\tset subAuraIntensity(value) {\n\t\tthis.uniforms.subAuraIntensity = value;\n\t}\n\n\tget threshold() {\n\t\treturn this.uniforms.threshold;\n\t}\n\n\tset threshold(value) {\n\t\tthis.uniforms.threshold = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget discard() {\n\t\treturn this.uniforms.holes;\n\t}\n\n\tset discard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.holes = value;\n\t\t}\n\t}\n\n\tget auraType() {\n\t\treturn this.uniforms.auraType;\n\t}\n\n\tset auraType(value) {\n\t\tthis.uniforms.auraType = Math.floor(value);\n\t}\n\n\tapply(filterManager, input, output, clear) {\n\t\tthis.uniforms.thickness[0] = (this.thickness * this.targetPlaceable.worldTransform.a) / input._frame.width;\n\t\tthis.uniforms.thickness[1] = (this.thickness * this.targetPlaceable.worldTransform.a) / input._frame.height;\n\t\tsuper.apply(filterManager, input, output, clear);\n\t}\n}\n\nFilterGleamingGlow.defaults = {\n\ttime: 0,\n\tcolor: 0xff8010,\n\tthickness: 5,\n\tscale: 1,\n\tauraIntensity: 1,\n\tsubAuraIntensity: 1,\n\tdiscard: false,\n\tthreshold: 0.5,\n\tauraType: 1,\n};\n","export const magicGlow = `\nprecision mediump float;\n\nuniform sampler2D uSampler;\nuniform float time;\nuniform float scale;\nuniform float auraIntensity;\nuniform float subAuraIntensity;\nuniform float threshold;\nuniform int auraType;\nuniform bool holes;\nuniform vec2 thickness;\nuniform vec4 color;\nuniform vec4 inputSize;\nuniform vec4 inputClamp;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst int NUM_OCTAVES = 4;\nconst float PI = 3.14159265358;\nconst float TWOPI = 6.28318530717;\nconst float MAX_TOTAL_ALPHA = 17.2787595915;\n\nfloat rand(vec2 uv)\n{\n    return fract(sin(dot(uv.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p)\n{\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat fbm(vec2 x) \n{\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\nvec4 outlining() \n{\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\n    vec4 curColor;\n    float maxAlpha = 0.;\n    vec2 displaced;\n    for (float angle = 0.; angle <= TWOPI; angle += 0.3141592653) {\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\n        curColor = texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw));\n        maxAlpha = max(maxAlpha, curColor.a);\n    }\n    float resultAlpha = max(maxAlpha, ownColor.a);\n    return vec4((ownColor.rgb + color.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\n\n}\n\nvec4 glowing() \n{\n\tvec2 px = inputSize.zw;\n\n    float totalAlpha = 0.0;\n    float outerStrength = 6.;\n\n    vec2 direction;\n    vec2 displaced;\n    vec4 curColor;\n\n    for (float angle = 0.0; angle < TWOPI; angle += 0.3141592653) {\n       direction = vec2(cos(angle), sin(angle)) * px;\n\n       for (float curDistance = 0.0; curDistance < 10.; curDistance++) {\n           displaced = clamp(vTextureCoord + direction * \n                   (curDistance + 1.0), inputClamp.xy, inputClamp.zw);\n\n           curColor = texture2D(uSampler, displaced);\n           totalAlpha += (10. - curDistance) * curColor.a;\n       }\n    }\n    \n    curColor = texture2D(uSampler, vTextureCoord);\n\n    float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\n    float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\n    float outerGlowStrength = min(1.0 - curColor.a, outerGlowAlpha);\n\n    vec4 outerGlowColor = (outerGlowStrength * (color.rgba*0.1) );\n\n    float resultAlpha = outerGlowAlpha;\n    return vec4(color.rgb * resultAlpha, resultAlpha);\n}\n\nvec4 ripples(vec2 suv) \n{\n    suv.x += time/2.;\n    vec3 c1 = ( 0.0 ) * (color.rgb*10.);\n    vec3 c2 = vec3(c1);\n    vec3 c3 = vec3(c1);\n    vec3 c4 = vec3( color.r*5., color.g*3.3333, color.b*2. );\n    vec3 c5 = vec3(c3);\n    vec3 c6 = vec3(c1);\n    vec2 p = suv;\n    float q = 2.*fbm(p + time*0.2);\n    vec2 r = vec2(fbm(p + q + ( time*0.1  ) - p.x - p.y), fbm(p + p + ( time*0.1 )));\n    vec3 c = color.rgb * (\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\n    );\n    return vec4(c,1.);\n}\n\nvec4 noisy(vec2 suv)\n{\n    vec4 noiseColor;\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time));\n    noiseColor.a = 1.;\n    return clamp(noiseColor,0.,1.);\n}\n\nvoid main(void) \n{\n\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    if (pixel.a == 1.) {\n        gl_FragColor =  pixel;\n    } else {\n        vec4 glowlevel = glowing();\n        vec4 outlinelevel = outlining();\n        vec4 aura;\n        \n        if (auraType <= 1) {\n            aura = ripples(vFilterCoord*20.*scale);\n        } else {\n            aura = noisy(vFilterCoord*20.*scale);\n        }\n\n        vec4 effect;\n        effect = ((glowlevel*subAuraIntensity)*0.1) + ((outlinelevel*auraIntensity)*0.8);\n\n        if (effect.a >= 0.) {effect.rgb = aura.rgb*(max(effect.a,0.));}\n\n        float intensity = effect.r + effect.g + effect.b;\n\t    if(intensity < threshold && effect.a != 0.) {\n            if (holes) {discard;}\n            effect.rgb = (color.rgb)*(effect.a*0.5);\n        } \n\n        gl_FragColor =  pixel + effect * (1.-pixel.a);\n    }\n}\n`;\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterPixelate extends PIXI.filters.PixelateFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.animated = {};\n\t\tthis.sizeX = 5;\n\t\tthis.sizeY = 5;\n\t\tthis.zOrder = 20;\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\thandleTransform() {\n\t\tthis.size.x = this.sizeX * this.targetPlaceable.worldTransform.a;\n\t\tthis.size.y = this.sizeY * this.targetPlaceable.worldTransform.a;\n\t}\n}\n","import { spiderWeb } from '../glsl/fragmentshaders/spiderweb.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterSpiderWeb extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, anchorX, anchorY, color, thickness, div1, div2, tear, amplitude, alphaDiscard } = Object.assign(\n\t\t\t{},\n\t\t\tFilterSpiderWeb.defaults,\n\t\t\tparams\n\t\t);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, spiderWeb);\n\n\t\tthis.uniforms.anchor = new Float32Array([0.5, -1.0]);\n\t\tthis.uniforms.color = new Float32Array([0.75, 0.75, 0.75]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tanchorX,\n\t\t\tanchorY,\n\t\t\tcolor,\n\t\t\tthickness,\n\t\t\tdiv1,\n\t\t\tdiv2,\n\t\t\ttear,\n\t\t\tamplitude,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 260;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget anchorX() {\n\t\treturn this.uniforms.anchor[0];\n\t}\n\n\tset anchorX(value) {\n\t\tthis.uniforms.anchor[0] = 0.5;\n\t}\n\n\tget anchorY() {\n\t\treturn this.uniforms.anchor[1];\n\t}\n\n\tset anchorY(value) {\n\t\tthis.uniforms.anchor[1] = 0.5;\n\t}\n\n\tget thickness() {\n\t\treturn this.uniforms.thickness;\n\t}\n\n\tset thickness(value) {\n\t\tthis.uniforms.thickness = value;\n\t}\n\n\tget tear() {\n\t\treturn this.uniforms.tear;\n\t}\n\n\tset tear(value) {\n\t\tthis.uniforms.tear = value;\n\t}\n\n\tget amplitude() {\n\t\treturn this.uniforms.amplitude;\n\t}\n\n\tset amplitude(value) {\n\t\tthis.uniforms.amplitude = value;\n\t}\n\n\tget div1() {\n\t\treturn this.uniforms.div1;\n\t}\n\n\tset div1(value) {\n\t\tthis.uniforms.div1 = value;\n\t}\n\n\tget div2() {\n\t\treturn this.uniforms.div2;\n\t}\n\n\tset div2(value) {\n\t\tthis.uniforms.div2 = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n}\n\nFilterSpiderWeb.defaults = {\n\ttime: 0.0,\n\tanchorX: 0.5,\n\tanchorY: 0.5,\n\tcolor: 0xbbbbbb,\n\tthickness: 1,\n\tdiv1: 10,\n\tdiv2: 10,\n\ttear: 0.54,\n\tamplitude: 0.8,\n\talphaDiscard: false,\n};\n","export const spiderWeb = `\nprecision mediump float;\n\nuniform float time;\nuniform float thickness;\nuniform float div1;\nuniform float div2;\nuniform float tear;\nuniform float amplitude;\nuniform bool alphaDiscard;\nuniform vec2 anchor;\nuniform vec3 color;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265358;\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0., 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < 2; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 spiderweb()\n{\n    vec2 coord = vFilterCoord.xy + anchor;\n\n    float t = floor(time * 0.01) * 7.3962;\n\n    vec2 sc = (coord.xy - 1.) * 0.5;\n    float phi = atan(sc.y, sc.x + 1e-6);\n    vec2 pc = vec2(fract(phi / (PI * 2.)), length(sc));\n    \n    float h_divnum = div1;\n    float s_divnum = div2;\n    \n    float ddth = fbm(vec2(pc.x*h_divnum,pc.x*20.*pow(length(sc*0.5),2.))*3.);\n    \n    float h_rand = 0.3+0.0895*(0.1*cos(time)+010.9)*tear;\n    float s_rand = .355*(0.2*cos(time)+1.);\n    \n    float l = pc.y+ cos(ddth*0.5) * (h_rand - 0.4) + ddth*(s_rand - 0.5)*0.2;\n    \n    float ts = 0.05;\n    float a = smoothstep(abs(sin(( pc.x*PI*2.  )  * s_divnum) ),-.1,thickness * ts );\n    float b = smoothstep(abs(sin(( pc.y*PI*2. + h_rand + l)  * h_divnum ) ),-.1,thickness * ts );\n    float s = a*b*2.;\n    float m = alphaDiscard ? 1. : 2.25;\n    return vec4(color.rgb*m,2.)-vec4(s,s,s,1.);\n}\n\nvoid main() \n{\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n    vec4 result = max(spiderweb(),pixel)*pixel.a;\n    if (alphaDiscard && result.rgb == vec3(0.)) discard;\n    gl_FragColor = result;\n}\n`;\n","import { solarRipples } from '../glsl/fragmentshaders/ripples.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterSolarRipples extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, amplitude, intensity, alphaDiscard, _octaves } = Object.assign(\n\t\t\t{},\n\t\t\tFilterSolarRipples.defaults,\n\t\t\tparams\n\t\t);\n\n\t\tif (typeof _octaves !== 'number') _octaves = FilterSolarRipples.defaults._octave;\n\t\tlet fragment = solarRipples.replace(`#define OCTAVES 3`, `#define OCTAVES ${_octaves}`);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, fragment);\n\n\t\tthis.uniforms.color = new Float32Array([0.75, 0.75, 0.75]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tamplitude,\n\t\t\tintensity,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 250;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget amplitude() {\n\t\treturn this.uniforms.amplitude;\n\t}\n\n\tset amplitude(value) {\n\t\tthis.uniforms.amplitude = value;\n\t}\n\n\tget intensity() {\n\t\treturn this.uniforms.intensity;\n\t}\n\n\tset intensity(value) {\n\t\tthis.uniforms.intensity = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n}\n\nFilterSolarRipples.defaults = {\n\ttime: 0.0,\n\tcolor: 0xbbbbbb,\n\tamplitude: 1,\n\tintensity: 0.001,\n\talphaDiscard: false,\n\t_octave: 3,\n};\n","export const solarRipples = `\nprecision mediump float;\nprecision mediump int;\n\nuniform vec3 color;\nuniform float time;\nuniform float amplitude;\nuniform float intensity;\nuniform bool alphaDiscard;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\nuniform sampler2D uSampler;\n\n#define PI 3.14159265\n#define OCTAVES 3\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat bornedCos(float minimum, float maximum)\n{\n    return (maximum-minimum)*(cos(2.*PI*time*0.05 + 1.)*0.5)+minimum;\n}\n\nfloat bornedSin(float minimum, float maximum)\n{\n    return (maximum-minimum)*(sin(2.*PI*time*0.05 + 1.)*0.5)+minimum;\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < OCTAVES; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec4 ripples(vec2 suv) \n{\n    suv.x += time*0.5;\n    vec3 c1 = color*intensity;\n    vec3 c2 = vec3(0.);\n    vec3 c3 = vec3(c1);\n    vec3 c4 = vec3(color.r*3.333, color.g*3.333, color.b*3.333);\n    vec3 c5 = vec3(c3);\n    vec3 c6 = vec3(c1);\n    vec2 p = suv;\n    float q = 2. * fbm(p + time * 2.);\n    vec2 r = vec2(fbm(p + q + ( time  ) - p.x - p.y), fbm(p + p + ( time )));\n    r.x += bornedCos(-0.3,-0.2);\n    r.y += 200.*bornedSin(-1.9,1.9);\n    \n    vec3 c = color * (\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\n    );\n    return vec4(c,1.);\n}\n\nvoid main() {\n\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec4 result = max(ripples(15.* vFilterCoord),pixel);\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.40)))) discard;\n    gl_FragColor = result*pixel.a;\n}\n`;\n","import { globes } from '../glsl/fragmentshaders/globes.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterGlobes extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, color, scale, distortion, alphaDiscard } = Object.assign({}, FilterGlobes.defaults, params);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, globes);\n\n\t\tthis.uniforms.color = new Float32Array([0.75, 0.75, 0.75]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tscale,\n\t\t\tdistortion,\n\t\t\talphaDiscard,\n\t\t});\n\n\t\tthis.zOrder = 270;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget scale() {\n\t\treturn this.uniforms.scale;\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale = value;\n\t}\n\n\tget distortion() {\n\t\treturn this.uniforms.distortion;\n\t}\n\n\tset distortion(value) {\n\t\tthis.uniforms.distortion = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n}\n\nFilterGlobes.defaults = {\n\ttime: 0.0,\n\tcolor: 0xaa3050,\n\tscale: 20,\n\tdistortion: 0.25,\n\talphaDiscard: false,\n};\n","export const globes = `\nprecision mediump float;\n\nuniform float time;\nuniform float scale;\nuniform float distortion;\nuniform bool alphaDiscard;\nuniform vec3 color;\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.14159265358;\n\nfloat rand(vec2 c)\n{\n\treturn fract( sin( dot( c.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\n}\n\nvec2 rand2(vec2 st)\n{\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(cos(st)*43758.5453123);\n}\n\nvec3 toGray(vec3 color)\n{\n  float average = (color.r + color.g + color.b)*0.3333333;\n  return vec3(average, average, average);\n}\n\nvec3 colorize(vec3 grayscale, vec3 color)\n{\n    return (grayscale * color);\n}\n\nfloat noise (vec2 st) \n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( rand2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( rand2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( rand2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( rand2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat circle(vec2 pos, float radius, float glow)\n{\n    float sdf = length(pos);\n    sdf = smoothstep(radius-0.700,radius,sdf);\n    float circles = 1.0 - smoothstep(0.0,1.0,sdf*1.280);\n    float glows = exp(-sdf*4.496) * glow * (3.0 - circles);\n    return circles+glows;\n}\n\nvec4 globes()\n{\n    vec2 st = (vFilterCoord - 0.5);\n    st *= scale;\n    vec2 uv = st;\n    float noisest = noise(vec2(uv.x - time,uv.y - time));\n    uv += noisest*distortion;\n    uv -= vec2( noise(vec2(time)*0.2)*4.0,-time*0.01);\n    \n    vec3 color = vec3(0.);\n    \n    \n    vec2 pos = fract(uv)-0.5;\n    vec2 id = floor(uv);\n\n    \n    for(int y = -1; y <= 1; y++){\n        for(int x = -1; x <= 1; x++){\n            vec2 neighbour = vec2(x,y);\n            vec2 rand2 = rand2(id+neighbour);\n            float a = noise(rand2+time*2.8);\n            vec2 offset = 0.5*(sin(time + rand2*5.28))*2.2;\n            float size = rand(id+neighbour)*0.75 + a*0.15;\n            color += circle(pos-neighbour+offset,size,size*1.400)*0.143 * vec3(rand2.x*7.884,7.2,rand2.y*6.832);\n        }\n    }\n    \n    return vec4(color,1.0);\n}\n\nvoid main() {\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n\n    vec4 tinyGlobes = vec4(colorize(toGray(globes().rgb*1.5),color*1.5),1.);\n\n    bool belowThreshold = all(lessThanEqual(tinyGlobes.rgb,vec3(0.6)));\n    if (alphaDiscard && belowThreshold) discard;\n    else if (belowThreshold) tinyGlobes = pixel;\n\n    gl_FragColor = max(tinyGlobes,pixel)*pixel.a;\n}\n`;\n","import { matrix } from '../glsl/fragmentshaders/matrix.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterTransform extends CustomFilter {\n\tconstructor(params) {\n\t\tlet {\n\t\t\trotation,\n\t\t\ttwRadiusPercent,\n\t\t\ttwAngle,\n\t\t\ttwRotation,\n\t\t\tbpRadiusPercent,\n\t\t\tbpStrength,\n\t\t\tscale,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\tpivotX,\n\t\t\tpivotY,\n\t\t\ttranslationX,\n\t\t\ttranslationY,\n\t\t} = Object.assign({}, FilterTransform.defaults, params);\n\n\t\tsuper(customVertex2D, matrix);\n\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\n\t\tthis.uniforms.pivot = new Float32Array([0.5, 0.5]);\n\t\tthis.uniforms.translation = new Float32Array([0.0, 0.0]);\n\n\t\tObject.assign(this, {\n\t\t\trotation,\n\t\t\ttwRadiusPercent,\n\t\t\ttwAngle,\n\t\t\ttwRotation,\n\t\t\tbpRadiusPercent,\n\t\t\tbpStrength,\n\t\t\tscale,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\tpivotX,\n\t\t\tpivotY,\n\t\t\ttranslationX,\n\t\t\ttranslationY,\n\t\t});\n\n\t\tthis.zOrder = 1000;\n\t\tthis.autoFit = false;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget rotation() {\n\t\treturn this.uniforms.rotation;\n\t}\n\n\tset rotation(value) {\n\t\tthis.uniforms.rotation = value;\n\t}\n\n\tget twRadiusPercent() {\n\t\treturn this.uniforms.twRadius * 200;\n\t}\n\n\tset twRadiusPercent(value) {\n\t\tthis.uniforms.twRadius = value / 200;\n\t}\n\n\tget twAngle() {\n\t\treturn this.uniforms.twAngle;\n\t}\n\n\tset twAngle(value) {\n\t\tthis.uniforms.twAngle = value;\n\t}\n\n\tget twRotation() {\n\t\treturn this.uniforms.twAngle * (180 / Math.PI);\n\t}\n\n\tset twRotation(value) {\n\t\tthis.uniforms.twAngle = value * (Math.PI / 180);\n\t}\n\n\tget bpRadiusPercent() {\n\t\treturn this.uniforms.bpRadius * 200;\n\t}\n\n\tset bpRadiusPercent(value) {\n\t\tthis.uniforms.bpRadius = value / 200;\n\t}\n\n\tget bpStrength() {\n\t\treturn this.uniforms.bpStrength;\n\t}\n\n\tset bpStrength(value) {\n\t\tthis.uniforms.bpStrength = value;\n\t}\n\n\tget scale() {\n\t\t// a little hack (we get only x)\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale[1] = this.uniforms.scale[0] = value;\n\t}\n\n\tget scaleX() {\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset scaleX(value) {\n\t\tthis.uniforms.scale[0] = value;\n\t}\n\n\tget scaleY() {\n\t\treturn this.uniforms.scale[1];\n\t}\n\n\tset scaleY(value) {\n\t\tthis.uniforms.scale[1] = value;\n\t}\n\n\tget pivotX() {\n\t\treturn this.uniforms.pivot[0];\n\t}\n\n\tset pivotX(value) {\n\t\tthis.uniforms.pivot[0] = value;\n\t}\n\n\tget pivotY() {\n\t\treturn this.uniforms.pivot[1];\n\t}\n\n\tset pivotY(value) {\n\t\tthis.uniforms.pivot[1] = value;\n\t}\n\n\tget translationX() {\n\t\treturn this.uniforms.translation[0];\n\t}\n\n\tset translationX(value) {\n\t\tthis.uniforms.translation[0] = value;\n\t}\n\n\tget translationY() {\n\t\treturn this.uniforms.translation[1];\n\t}\n\n\tset translationY(value) {\n\t\tthis.uniforms.translation[1] = value;\n\t}\n}\n\nFilterTransform.defaults = {\n\trotation: 0.0,\n\ttwRadiusPercent: 0,\n\ttwAngle: 0,\n\tbpRadiusPercent: 0,\n\tbpStrength: 0,\n\tscaleX: 1,\n\tscaleY: 1,\n\tpivotX: 0.5,\n\tpivotY: 0.5,\n\ttranslationX: 0,\n\ttranslationY: 0,\n};\n","export const matrix = `\nprecision mediump float;\n\nuniform float rotation;\nuniform float twRadius;\nuniform float twAngle;\nuniform float bpRadius;\nuniform float bpStrength;\nuniform vec2 scale;\nuniform vec2 translation;\nuniform vec2 pivot;\nuniform vec4 inputClamp;\nuniform sampler2D uSampler;\nuniform mat3 filterMatrixInverse;\n\nvarying vec2 vFilterCoord;\n\nconst float PI = 3.1415927;\n\nvec2 morphing(in vec2 uv) {\n    float dist = length(uv);\n\n    // twist effect\n    if (dist < twRadius) {\n        float ratioDist = (twRadius - dist) / twRadius;\n        float angleMod = ratioDist * ratioDist * twAngle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    }\n\n    // bulge pinch effect\n    if (dist < bpRadius) {\n        float percent = dist / bpRadius;\n        if (bpStrength > 0.) {\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\n        } else {\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\n        }\n    }\n\n    return uv;\n}\n\nvec2 transform(in vec2 uv) {\n    float angle = -(PI * rotation * 0.005555555555);\n    uv -= pivot;\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv *= mat2(scale.x, 0.0, 0.0, scale.y);\n    uv = morphing(uv);\n    uv += pivot;\n\n    return uv;\n}\n\nvoid main() {\n    vec2 uv = vFilterCoord + translation;\n    uv = transform(uv);\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\n    vec4 pixel = texture2D(uSampler,clamp(mappedCoord, inputClamp.xy, inputClamp.zw));\n    gl_FragColor = pixel;\n}\n`;\n","import { splash } from '../glsl/fragmentshaders/splash.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterSplash extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { time, seed, spread, splashFactor, color, dimX, dimY, blend, cut, textureAlphaBlend, anchorX, anchorY } =\n\t\t\tObject.assign({}, FilterSplash.defaults, params);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, splash);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.05, 0.05]);\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\n\t\tthis.uniforms.anchor = new Float32Array([0.0, 0.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tseed,\n\t\t\tspread,\n\t\t\tsplashFactor,\n\t\t\tcolor,\n\t\t\tdimX,\n\t\t\tdimY,\n\t\t\tblend,\n\t\t\tcut,\n\t\t\ttextureAlphaBlend,\n\t\t\tanchorX,\n\t\t\tanchorY,\n\t\t});\n\n\t\tthis.zOrder = 5;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget seed() {\n\t\treturn this.uniforms.seed;\n\t}\n\n\tset seed(value) {\n\t\tthis.uniforms.seed = value;\n\t}\n\n\tget spread() {\n\t\treturn this.uniforms.spread;\n\t}\n\n\tset spread(value) {\n\t\tthis.uniforms.spread = value;\n\t}\n\n\tget splashFactor() {\n\t\treturn this.uniforms.splashFactor;\n\t}\n\n\tset splashFactor(value) {\n\t\tthis.uniforms.splashFactor = value;\n\t}\n\n\tget dimX() {\n\t\treturn this.uniforms.dimensions[0];\n\t}\n\n\tset dimX(value) {\n\t\tthis.uniforms.dimensions[0] = value;\n\t}\n\n\tget dimY() {\n\t\treturn this.uniforms.dimensions[1];\n\t}\n\n\tset dimY(value) {\n\t\tthis.uniforms.dimensions[1] = value;\n\t}\n\n\tget anchorY() {\n\t\treturn this.uniforms.anchor[1] + 0.5;\n\t}\n\n\tset anchorY(value) {\n\t\tthis.uniforms.anchor[1] = value - 0.5;\n\t}\n\n\tget anchorX() {\n\t\treturn this.uniforms.anchor[0] + 0.5;\n\t}\n\n\tset anchorX(value) {\n\t\tthis.uniforms.anchor[0] = value - 0.5;\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget cut() {\n\t\treturn this.uniforms.cut;\n\t}\n\n\tset cut(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.cut = value;\n\t\t}\n\t}\n\n\tget textureAlphaBlend() {\n\t\treturn this.uniforms.textureAlphaBlend;\n\t}\n\n\tset textureAlphaBlend(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.textureAlphaBlend = value;\n\t\t}\n\t}\n}\n\nFilterSplash.defaults = {\n\ttime: Math.random() * 2000,\n\tcolor: 0xf00505,\n\tseed: 0.1,\n\tspread: 5,\n\tsplashFactor: 2,\n\tdimX: 1,\n\tdimY: 1,\n\tblend: 8,\n\tcut: false,\n\ttextureAlphaBlend: false,\n\tanchorX: 0.5,\n\tanchorY: 0.5,\n};\n","export const splash = `\nprecision mediump float;\n\nuniform float time;\nuniform float seed;\nuniform float spread;\nuniform float splashFactor;\nuniform int blend;\nuniform vec2 dimensions;\nuniform vec2 anchor;\nuniform vec3 color;\nuniform bool cut;\nuniform bool textureAlphaBlend;\nuniform sampler2D uSampler;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nfloat random(vec2 n) \n{ \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\n{\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\n\n    fCol.a = max(fCol.a,sCol.a);\n    return fCol;\n}\n\nvec3 splash(vec2 g)\n{\n\tvec2 uv = (12.*(2.*g-1.)*.2) / dimensions;\n\n    float a = abs(atan(uv.x,uv.y) * splashFactor);   \n\tvec3 iuv = vec3(uv.x,uv.y,a);\n\n\tfloat cseed = sin(1.+fract(abs(random(vec2(seed*0.9854,seed*0.3541)))));\n    vec3 uvw = iuv;\n\n\tiuv = 1. - abs(1. - mod(uvw - time*0.1, 2.));\n\t\n    float initLen = length(iuv);\n    float nLen = initLen;\n    float tot = 0.;\n    \n    for (int i=0; i < 12; i++) \n\t{\n\t\tiuv = abs(iuv) / (initLen*initLen) - cseed;\n\t\tnLen = length(iuv);\n\t\ttot += abs(nLen-initLen);\n\t\tinitLen = nLen;\n    }\n    \n    float fc = tot + 1.0;\n\tfc = 1.-smoothstep(fc, fc+1.9, spread/dot(uv,uv));\n\t\n\treturn vec3(1.-fc)*color;\n}\n\nvoid main() {\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\n    vec3 splashed = splash(vFilterCoord - anchor);\n\n    if (splashed == vec3(0.0))\n    {\n        if (pixel.a > 0. && !cut)\n        {\n            gl_FragColor = pixel;\n            return;\n        }\n        else if (cut) discard;\n    }\n\n    vec4 splashed4 = vec4(splashed,1.);\n    vec4 blendResult = mix(blender(blend, pixel, splashed4),splashed4,1.-pixel.a);\n    gl_FragColor = (textureAlphaBlend ? blendResult * pixel.a : blendResult);\n}\n`;\n","import { polymorph } from '../glsl/fragmentshaders/polymorph.js';\nimport { customVertex2DSampler } from '../glsl/vertexshaders/customvertex2DSampler.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\nimport { fixPath } from '../../module/tokenmagic.js';\n\nexport class FilterPolymorph extends CustomFilter {\n\tconstructor(params) {\n\t\tlet { imagePath, progress, magnify, type } = Object.assign({}, FilterPolymorph.defaults, params);\n\n\t\tconst targetSpriteMatrix = new PIXI.Matrix();\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2DSampler, polymorph);\n\n\t\t// vertex uniforms\n\t\tthis.uniforms.targetUVMatrix = targetSpriteMatrix;\n\n\t\t// fragment uniforms\n\t\tthis.uniforms.inputClampTarget = new Float32Array([0, 0, 0, 0]);\n\n\t\t// to store sprite matrix from the filter manager (and send to vertex)\n\t\tthis.targetSpriteMatrix = targetSpriteMatrix;\n\n\t\tObject.assign(this, {\n\t\t\timagePath: fixPath(imagePath),\n\t\t\tprogress,\n\t\t\tmagnify,\n\t\t\ttype,\n\t\t});\n\n\t\tthis.zOrder = 1;\n\t\tthis.autoFit = false;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tsetTMParams(params) {\n\t\tsuper.setTMParams(params);\n\t\tif (!this.dummy && 'imagePath' in params) {\n\t\t\tthis.assignTexture();\n\t\t}\n\t}\n\n\tget progress() {\n\t\treturn this.uniforms.progress * 100;\n\t}\n\n\tset progress(value) {\n\t\tthis.uniforms.progress = Math.min(Math.max(value * 0.01, 0), 1);\n\t}\n\n\tget magnify() {\n\t\treturn this.uniforms.magnify;\n\t}\n\n\tset magnify(value) {\n\t\tthis.uniforms.magnify = Math.min(Math.max(value, 0.1), 100);\n\t}\n\n\tget type() {\n\t\treturn this.uniforms.type;\n\t}\n\n\tset type(value) {\n\t\tthis.uniforms.type = Math.floor(value);\n\t}\n\n\tget uSamplerTarget() {\n\t\treturn this.uniforms.uSamplerTarget;\n\t}\n\n\tset uSamplerTarget(value) {\n\t\tthis.uniforms.uSamplerTarget = value;\n\t}\n\n\t_setTargetSpriteSize() {\n\t\tconst sprite = this.targetSprite;\n\t\tlet ratioW = this.placeableImg._texture.baseTexture.realWidth / sprite.texture.baseTexture.realWidth;\n\t\tsprite.width = sprite.texture.baseTexture.realWidth * ratioW;\n\t\tsprite.height = sprite.texture.baseTexture.realHeight * ratioW;\n\t\tsprite.anchor.set(0.5);\n\t}\n\n\tassignTexture() {\n\t\tif (this.hasOwnProperty('imagePath')) {\n\t\t\tlet tex = PIXI.Texture.from(this.imagePath);\n\t\t\tlet sprite = new PIXI.Sprite(tex);\n\n\t\t\tsprite.renderable = false;\n\t\t\tthis.targetSprite = sprite;\n\n\t\t\t// We may need to wait for the texture to be loaded before accessing it's width and height\n\t\t\t// In such a case register an update listener which should be called when the texture is loaded/becomes valid\n\t\t\tif (tex.valid) {\n\t\t\t\tthis._setTargetSpriteSize();\n\t\t\t} else {\n\t\t\t\ttex.on('update', () => {\n\t\t\t\t\tthis._setTargetSpriteSize();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.uSamplerTarget = sprite._texture;\n\t\t\tthis.placeableImg.addChild(sprite);\n\t\t}\n\t}\n\n\t// override\n\tapply(filterManager, input, output, clear) {\n\t\tconst targetSprite = this.targetSprite;\n\t\tconst tex = targetSprite._texture;\n\n\t\tif (tex.valid) {\n\t\t\tif (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n\t\t\ttex.uvMatrix.update();\n\n\t\t\tthis.uniforms.uSamplerTarget = tex;\n\t\t\tthis.uniforms.targetUVMatrix = filterManager\n\t\t\t\t.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite)\n\t\t\t\t.prepend(tex.uvMatrix.mapCoord);\n\t\t\tthis.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n\t\t}\n\n\t\tsuper.apply(filterManager, input, output, clear);\n\t}\n\n\t// override\n\tdestroy() {\n\t\tsuper.destroy();\n\t\tif (this.placeableImg) this.placeableImg.removeChild(this.targetSprite);\n\t\tthis.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\n\t}\n}\n\nFilterPolymorph.defaults = {\n\tprogress: 0,\n\tmagnify: 1,\n\ttype: 1,\n};\n","export const polymorph = `#version 300 es\nprecision mediump float;\n\nuniform float progress;\nuniform float magnify;\nuniform int type;\nuniform vec4 inputClamp;\nuniform vec4 inputClampTarget;\nuniform sampler2D uSampler;\nuniform sampler2D uSamplerTarget;\nuniform mat3 filterMatrixInverse;\n\nin vec2 vTextureCoord;\nin vec2 vTextureCoordExtra;\nin vec2 vFilterCoord;\n\nout vec4 outputColor;\n\nconst float PI = 3.14159265358;\n\nfloat getClip(vec2 uv) {\n    return step(3.5,\n       step(inputClampTarget.x, uv.x) +\n       step(inputClampTarget.y, uv.y) +\n       step(uv.x, inputClampTarget.z) +\n       step(uv.y, inputClampTarget.w));\n}\n\nvec4 getFromColor(vec2 uv) {\n    return texture(uSampler,clamp(uv,inputClamp.xy,inputClamp.zw));\n}\n\nvec4 getToColor(vec2 uv) {\n    return texture(uSamplerTarget,clamp(uv,inputClampTarget.xy,inputClampTarget.zw))*getClip(uv);\n}\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 offset(float progress, float x, float theta, float str) {\n    float shifty = str*progress*cos(10.0*(progress+x));\n    return vec2(0, shifty);\n}\n\nvec2 roffset(float progress, float x, float theta, float str) {\n    float shifty = (1.-progress)*str*progress*cos(10.0*(progress+x));\n    return vec2(0, shifty);\n}\n\nfloat noise(vec2 co) {\n    float a = 12.9898;\n    float b = 78.233;\n    float c = 43758.5453;\n    float dt= dot(co.xy * progress, vec2(a, b));\n    float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nvec4 morph(vec2 uv, vec2 uvt) {\n    vec4 ca = getFromColor(uv);\n    vec4 cb = getToColor(uvt);\n    vec2 oa = (((ca.rg+ca.b)*0.5)*2.0-1.0);\n    vec2 ob = (((cb.rg+cb.b)*0.5)*2.0-1.0);\n    vec2 oc = mix(oa,ob,0.5)*0.1;\n    float w0 = progress;\n    float w1 = 1.0-w0;\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(vFilterCoord+(oc*0.4)*w0, 1.0)).xy;\n    vec4 fromcol = getFromColor(sourceMappedCoord);\n    vec4 tocol = getToColor(uvt-oc*w1);\n    float a = mix(ca.a, cb.a, progress);\n    return mix(fromcol, tocol, progress)*a;\n}\n\nvec4 waterdrop(vec2 uv, vec2 uvt) {\n    vec2 dirt = uvt - vec2(.5);\n    float distt = length(dirt);\n    if (distt > progress) {\n        return mix(getFromColor(uv), getToColor(uvt), progress);\n    } else {\n        vec2 shiftuvt = dirt * sin(distt * 60. - progress * 20.);\n        vec2 fuv = (filterMatrixInverse * vec3(vFilterCoord + (shiftuvt*(1.-progress)), 1.0)).xy;\n        return mix(getFromColor(fuv), getToColor(uvt + (shiftuvt*(1.-progress))), progress);\n    }\n}\n\nvec4 dreamy(vec2 uv, vec2 uvt) {\n    return mix(getFromColor(uv + offset(progress, uv.x, 0.0, 0.03)), \n               getToColor(uvt + offset(1.0-progress, uvt.x, 3.14, 0.03)), \n               progress);\n}\n\nvec2 swirluv(vec2 uv) {\n    vec2 xy = 2.* uv - 1.;\n    float fdist = length(xy);\n    if (fdist > 1.) return uv;\n    uv -= vec2( 0.5, 0.5 );\n    float dist = length(uv);\n    if ( dist < 1. ) {\n\t    float pct = (1. - dist);\n\t    float a = ( progress <= 0.5 ) ? mix( 0.0, 1.0, progress*2. ) : mix( 1.0, 0.0, (progress-0.5)*2. );\n\t    float t = pct * pct * a * 5.0 * 3.14159;\n\t    float s = sin( t );\n\t    float c = cos( t );\n\t    uv = vec2(dot(uv,vec2(c,-s)),dot(uv,vec2(s,c)));\n    }\n    uv += vec2(0.5,0.5);\n    return uv;\n}\n\nvec4 swirl(vec2 uv, vec2 uvt) {\n    vec2 suvfrom = swirluv(vFilterCoord);\n    vec2 suvto = swirluv(uvt);\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(suvfrom, 1.0)).xy;\n    vec4 fscol = getFromColor(sourceMappedCoord);\n    vec4 ftcol = getToColor(suvto);\n    return mix( fscol, ftcol, progress );\n}\n\nvec4 crosswarp(vec2 uv, vec2 uvt) {\n    float x = progress;\n    x = smoothstep(.0,1.0,(x*2.0+uv.x-1.0));\n    vec4 rawfscol = getFromColor(uv);\n    vec4 fscol = getFromColor((uv-.5)*(1.-x)+.5);\n    vec4 ftcol = getToColor(uvt);\n    return mix(fscol, ftcol, x)*mix(rawfscol.a,ftcol.a,progress);\n}\n\nvec4 tvnoise(vec2 uv, vec2 uvt) {\n    vec4 noise = vec4(vec3(noise(uv)), 1.);\n    vec4 fscol = getFromColor(uv);\n    vec4 ftcol = getToColor(uvt);\n    float alphamix = mix(fscol.a, ftcol.a, pow(clamp(progress,0.,1.), 0.6));\n    if (progress <= 0.30) {\n        return mix(fscol, noise*alphamix, pow(clamp(progress,0.,1.),0.3-progress));\n    } else if (progress >= 0.70) {\n        return mix(noise*alphamix, ftcol, pow(clamp(progress-0.7,0.,1.),1.-progress));\n    } else {\n        return noise*alphamix;\n    }\n}\n\nvec4 hologram(vec2 uv, vec2 uvt) {\n    float cosProg = 0.5*(cos(2.*PI*progress)+1.);\n    vec4 fscol = getFromColor(uv + roffset(progress, uvt.x, 0., 0.12));\n    vec4 ftcol = getToColor(uvt + roffset(progress, uvt.x, 0., 0.6));\n  \n    float scintensity = max(max(fscol.r,fscol.g),fscol.b);\n    float tcintensity = max(max(ftcol.r,ftcol.g),ftcol.b);\n\n    vec4 tscol = vec4(0.,fscol.g*3.,0.,1.)*scintensity;\n    vec4 ttcol = vec4(ftcol.r*3.,0.,0.,1.)*tcintensity;\n    \n    vec4 iscol = vec4(0.,fscol.g*3.,fscol.b*3.,1.)*scintensity;\n    vec4 itcol = vec4(ftcol.r*3.,0.,ftcol.b*3.,1.)*tcintensity;\n    \n    vec4 smix = mix(mix(fscol,tscol,progress),iscol,1.-cosProg);\n    vec4 tmix = mix(mix(ftcol,ttcol,1.-progress),itcol,1.-cosProg);;\n\n    return mix(smix, \n               tmix, \n               progress);\n}\n\nvec4 wind(vec2 uv, vec2 uvt) {\n    float r = rand(vec2(0, uv.y));\n    float m = smoothstep(0.0, -0.25, uv.x*0.75 + 0.25*r - (progress * 1.25));\n    return mix(\n        getFromColor(uv),\n        getToColor(uvt),\n        m\n    );\n}\n\nvec4 transition(vec2 uv, vec2 uvt) {\n    return mix(\n        getFromColor(uv),\n        getToColor(uvt),\n        progress\n    );\n}\n\nvoid main() {\n    vec4 result;\n    float scale = 1./magnify;\n    vec2 uvExtra = vTextureCoordExtra;\n    uvExtra -= vec2(0.5);\n    uvExtra *= mat2(scale,0.,0.,scale);\n    uvExtra += vec2(0.5);\n\n    // shortcut to prevent a lot of computation if progress is equal to 0 or 1\n    if (progress == 1.) {\n        outputColor = getToColor(uvExtra);\n        return;\n    }\n\n    if (progress == 0.) {\n        outputColor = getFromColor(vTextureCoord);\n        return;\n    }\n\n    if (type <= 1 || type >= 10) {\n        result = transition(vTextureCoord, uvExtra);\n    } else if (type == 2) {\n        result = dreamy(vTextureCoord, uvExtra);\n    } else if (type == 3) {\n        result = swirl(vTextureCoord, uvExtra);\n    } else if (type == 4) {\n        result = waterdrop(vTextureCoord, uvExtra);\n    } else if (type == 5) {\n        result = tvnoise(vTextureCoord, uvExtra);\n    } else if (type == 6) {\n        result = morph(vTextureCoord, uvExtra);\n    } else if (type == 7) {\n        result = crosswarp(vTextureCoord, uvExtra);\n    } else if (type == 8) {\n        result = wind(vTextureCoord, uvExtra);\n    } else if (type == 9) {\n        result = hologram(vTextureCoord, uvExtra);\n    } \n   \n    outputColor = result;\n}\n`;\n","// Custom vertex shader with filter matrix to map for additional sampler\n\nexport const customVertex2DSampler = `#version 300 es\nprecision mediump float;\n\nin vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\nuniform mat3 filterMatrix;\nuniform mat3 targetUVMatrix;\n\nout vec2 vTextureCoord;\nout vec2 vTextureCoordExtra;\nout vec2 vFilterCoord;\n\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n}\n\nvec2 filterTextureCoord( void )\n{\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void)\n{\n\tgl_Position = filterVertexPosition();\n\tvTextureCoord = filterTextureCoord();\n\tvTextureCoordExtra = (targetUVMatrix * vec3(vTextureCoord, 1.0)).xy;\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\n}\n`;\n","import { burnXFire } from '../glsl/fragmentshaders/xfire.js';\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterXFire extends CustomFilter {\n\tconstructor(params) {\n\t\tlet {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tcolor1,\n\t\t\tcolor2,\n\t\t\tcolor3,\n\t\t\tcolor4,\n\t\t\tamplitude,\n\t\t\tdispersion,\n\t\t\tblend,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\talphaDiscard,\n\t\t\tdiscardThreshold,\n\t\t\tchromatic,\n\t\t\tinlay,\n\t\t} = Object.assign({}, FilterXFire.defaults, params);\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2D, burnXFire);\n\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.color1 = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.color2 = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.color3 = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.color4 = new Float32Array([1.0, 1.0, 1.0]);\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\n\n\t\tObject.assign(this, {\n\t\t\ttime,\n\t\t\tcolor,\n\t\t\tcolor1,\n\t\t\tcolor2,\n\t\t\tcolor3,\n\t\t\tcolor4,\n\t\t\tamplitude,\n\t\t\tdispersion,\n\t\t\tblend,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\talphaDiscard,\n\t\t\tdiscardThreshold,\n\t\t\tchromatic,\n\t\t\tinlay,\n\t\t});\n\n\t\tthis.zOrder = 145;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget time() {\n\t\treturn this.uniforms.time;\n\t}\n\n\tset time(value) {\n\t\tthis.uniforms.time = value;\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget color1() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color1);\n\t}\n\n\tset color1(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color1);\n\t}\n\n\tget color2() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color2);\n\t}\n\n\tset color2(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color2);\n\t}\n\n\tget color3() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color3);\n\t}\n\n\tset color3(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color3);\n\t}\n\n\tget color4() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color4);\n\t}\n\n\tset color4(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color4);\n\t}\n\n\tget amplitude() {\n\t\treturn this.uniforms.amplitude;\n\t}\n\n\tset amplitude(value) {\n\t\tthis.uniforms.amplitude = value;\n\t}\n\n\tget dispersion() {\n\t\treturn this.uniforms.dispersion;\n\t}\n\n\tset dispersion(value) {\n\t\tthis.uniforms.dispersion = value;\n\t}\n\n\tget blend() {\n\t\treturn this.uniforms.blend;\n\t}\n\n\tset blend(value) {\n\t\tthis.uniforms.blend = Math.floor(value);\n\t}\n\n\tget scaleX() {\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset scaleX(value) {\n\t\tthis.uniforms.scale[0] = value;\n\t}\n\n\tget scaleY() {\n\t\treturn this.uniforms.scale[1];\n\t}\n\n\tset scaleY(value) {\n\t\tthis.uniforms.scale[1] = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n\n\tget discardThreshold() {\n\t\treturn this.uniforms.discardThreshold;\n\t}\n\n\tset discardThreshold(value) {\n\t\tthis.uniforms.discardThreshold = value;\n\t}\n\n\tget chromatic() {\n\t\treturn this.uniforms.chromatic;\n\t}\n\n\tset chromatic(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.chromatic = value;\n\t\t}\n\t}\n\n\tget inlay() {\n\t\treturn this.uniforms.inlay;\n\t}\n\n\tset inlay(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.inlay = value;\n\t\t}\n\t}\n}\n\nFilterXFire.defaults = {\n\ttime: 0,\n\tcolor: 0x000000,\n\tcolor1: 0x250000,\n\tcolor2: 0xb20000,\n\tcolor3: 0x330000,\n\tcolor4: 0xffe500,\n\tamplitude: 1,\n\tdispersion: 0.25,\n\tblend: 2,\n\tscaleX: 1,\n\tscaleY: 1,\n\tdiscardThreshold: 0.1,\n\talphaDiscard: false,\n\tchromatic: false,\n\tinlay: false,\n};\n","export const burnXFire = `\nprecision mediump float;\n\nuniform float time;\nuniform float amplitude;\nuniform float dispersion;\nuniform float discardThreshold;\nuniform int blend;\nuniform bool alphaDiscard;\nuniform bool chromatic;\nuniform bool inlay;\nuniform vec2 scale;\nuniform vec3 color;\nuniform vec3 color1;\nuniform vec3 color2;\nuniform vec3 color3;\nuniform vec3 color4;\n\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nconst float MU_3 = 0.333333333334;\n\nfloat rand(vec2 n) { \n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat maxRgbIntensity(vec3 col) {\n    return max(max(col.r,col.g),col.b);\n}\n\nfloat colorIntensity(vec3 col) {\n    return clamp((col.r + col.g + col.b)*MU_3,0.,1.);\n}\n\nvec3 blendLinearDual(vec3 base, vec3 blend, float intensity) {\n    if (intensity < dispersion) {\n        return mix(base,blend,pow(abs((1.-dispersion)),clamp(10.*dispersion,1.,3.)));\n    } \n    return mix(blend,mix(blend,base,1.-pow(intensity*dispersion,0.5)),1.-pow(intensity,4.));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float intensity) {\n    return vec3(1.)\n            -((1.-base*(intensity+dispersion))\n            *(1.-blend*clamp(pow(intensity,dispersion),0.,1.)));\n}\n\nfloat blendScreenPure(float base, float blend) {\n\treturn 1.0-((1.0-base)*(1.0-blend));\n}\n\nvec3 blendScreenPure(vec3 base, vec3 blend) {\n\treturn vec3(blendScreenPure(base.r,blend.r),blendScreenPure(base.g,blend.g),blendScreenPure(base.b,blend.b));\n}\n\nvec3 blendMix(vec3 base, vec3 blend) {\n\treturn mix(blendLinearDual(base, blend, smoothstep(0.35,0.6,1.-colorIntensity(blend))),\n\t           blendScreen(base, blend, smoothstep(0.,1.,1.-colorIntensity(blend))),\n\t           smoothstep(0.,1.,colorIntensity((base+blend)*0.5)));\n}\n\nfloat blendColorBurn(float base, float blend) {\n\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\n}\n\nfloat blendColorDodge(float base, float blend) {\n\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\n}\n\nfloat blendVividLight(float base, float blend) {\n\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\n}\n\nvec4 blender(int blend, vec3 scol, vec3 tcol) {\n    if (blend <= 1) {\n        scol = mix(scol, tcol, smoothstep(dispersion, 1., maxRgbIntensity(tcol)));\n    } else if (blend == 2) {\n        scol = blendLinearDual(scol, tcol, maxRgbIntensity(tcol));\n    } else if (blend == 3) {\n        scol = blendLinearDual(scol, tcol, colorIntensity(tcol));\n    } else if (blend == 4) {\n        scol = blendScreen(scol, tcol, maxRgbIntensity(tcol));\n    } else if (blend == 5) {\n        scol = blendScreen(scol, tcol, colorIntensity(tcol));\n    } else if (blend == 6) {\n        scol = blendVividLight(scol,tcol);\n    } else if (blend == 7) {\n        scol = blendColorDodge(scol,tcol);\n    } else if (blend == 8) {\n        scol = blendColorBurn(scol,tcol);\n    } else if (blend == 9) {\n        scol = blendScreen(scol, blendVividLight(scol,tcol), colorIntensity(tcol));\n    } else if (blend == 10) {\n        scol = blendScreen(scol, blendColorDodge(scol,tcol), colorIntensity(tcol));\n    } else if (blend == 11) {\n        scol = blendLinearDual(blendVividLight(scol,tcol), tcol, maxRgbIntensity(tcol));\n    } else if (blend == 12) {\n        scol = blendMix(scol,tcol);\n    } else if (blend == 13) {\n        scol = blendScreenPure(scol,tcol);\n    } else if (blend >= 14) {\n        scol = blendScreenPure(scol,tcol*0.5);\n    }\n\n    return vec4(scol,1.);\n}\n\nfloat noise(vec2 n) {\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) {\n\tfloat total = 0.0, amp = amplitude;\n\tfor (int i = 0; i < 5; i++) {\n\t\ttotal += noise(n) * amp;\n\t\tn += n;\n\t\tamp *= 0.5;\n\t}\n\treturn total;\n}\n\nvec3 fire(in vec4 pixel) {\n    vec3 c1,c2,c3,c4;\n\n    if (chromatic) {\n        c1 = vec3(0.00, 0.50, 0.50);\n    \tc2 = vec3(0.60, 0.35, 0.70);\n    \tc3 = vec3(0.20, 0.90, 1.00);\n    \tc4 = vec3(0.90, 1.00, 0.60); \n    } else if ( any(greaterThan(color,vec3(0.))) ) {\n        c1 = vec3(0.10*color);\n    \tc2 = vec3(0.85*color);\n    \tc3 = vec3(0.35*color);\n    \tc4 = vec3(color);\n    } else {\n        c1 = color1;\n        c2 = color2;\n        c3 = color3;\n        c4 = color4;\n    }\n\n\tconst vec3 c5 = vec3(0.1);\n\tconst vec3 c6 = vec3(0.9);\n\tconst vec2 pivot = vec2(0.5);\n\t\n    vec2 uv = vFilterCoord;\n    uv -= pivot;\n\tvec2 p = uv * mat2(8.*scale.x,0.0,0.0,8.*scale.y);\n\tuv += pivot;\n\n    vec2 r;\n\tvec3 c;\n\tfloat t = time*0.1;\n\tfloat q = fbm(p - t);\n\n\tif (inlay) {\n\t    float sat = pixel.r + pixel.g + pixel.b;\n\t    float sat4 = sat*4.;\n\t    r = vec2(fbm(p + q + t - p.x - p.y - sat), fbm(p + q - t + sat4));\n\t    c = mix(c1, c2, fbm(p + r + sat4)) + mix(c3, c4, 1.4-pixel.rgb) - mix(c5, c6, r.y);\n\t} else {\n\t    r = vec2(fbm(p + q + time - p.x - p.y), fbm(p + q - t));\n\t    c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n\t}\n\t\n\treturn clamp(c,0.,1.);\n}\n\nvoid main() {\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\n    if (pixel.a==0.) {\n       gl_FragColor = pixel;\n       return;\n    }\n\n    vec3 fire = fire(pixel);\n    if (alphaDiscard && all(lessThanEqual(fire,vec3(discardThreshold))))  {\n        discard;\n    }\n\n    vec4 result = blender(blend, pixel.rgb, fire);\n\n\tgl_FragColor = result*pixel.a;\n}\n`;\n","import { sprite } from '../glsl/fragmentshaders/sprite.js';\nimport { customVertex2DSampler } from '../glsl/vertexshaders/customvertex2DSampler.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\nimport { fixPath } from '../../module/tokenmagic.js';\n\nexport class FilterSprite extends CustomFilter {\n\ttex = null;\n\n\tconstructor(params) {\n\t\tlet {\n\t\t\timagePath,\n\t\t\tcolor,\n\t\t\tcolorize,\n\t\t\tinverse,\n\t\t\talpha,\n\t\t\talphaDiscard,\n\t\t\trepeat,\n\t\t\ttop,\n\t\t\trotation,\n\t\t\ttwRadiusPercent,\n\t\t\ttwAngle,\n\t\t\ttwRotation,\n\t\t\tbpRadiusPercent,\n\t\t\tbpStrength,\n\t\t\tscale,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\ttranslationX,\n\t\t\ttranslationY,\n\t\t\tplay,\n\t\t\tloop,\n\t\t\tmaintainAspectRatio,\n\t\t\tmaintainScale,\n\t\t} = Object.assign({}, FilterSprite.defaults, params);\n\n\t\tconst targetSpriteMatrix = new PIXI.Matrix();\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2DSampler, sprite);\n\n\t\t// vertex uniforms\n\t\tthis.uniforms.targetUVMatrix = targetSpriteMatrix;\n\n\t\t// fragment uniforms\n\t\tthis.uniforms.inputClampTarget = new Float32Array([0, 0, 0, 0]);\n\t\tthis.uniforms.color = new Float32Array([0.0, 0.0, 0.0]);\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\n\t\tthis.uniforms.translation = new Float32Array([0.0, 0.0]);\n\n\t\t// to store sprite matrix from the filter manager (and send to vertex)\n\t\tthis.targetSpriteMatrix = targetSpriteMatrix;\n\n\t\tObject.assign(this, {\n\t\t\timagePath: fixPath(imagePath),\n\t\t\tcolor,\n\t\t\tcolorize,\n\t\t\tinverse,\n\t\t\talpha,\n\t\t\talphaDiscard,\n\t\t\trepeat,\n\t\t\ttop,\n\t\t\trotation,\n\t\t\ttwRadiusPercent,\n\t\t\ttwAngle,\n\t\t\ttwRotation,\n\t\t\tbpRadiusPercent,\n\t\t\tbpStrength,\n\t\t\tscale,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\ttranslationX,\n\t\t\ttranslationY,\n\t\t\tplay,\n\t\t\tloop,\n\t\t\tmaintainAspectRatio,\n\t\t\tmaintainScale,\n\t\t});\n\n\t\tthis.zOrder = 0;\n\t\tthis.autoFit = false;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tsetTMParams(params) {\n\t\tsuper.setTMParams(params);\n\t\tif (!this.dummy && 'imagePath' in params) {\n\t\t\tthis.assignTexture();\n\t\t}\n\t}\n\n\t_play = true;\n\t_loop = true;\n\t_maintainAspectRatio = false;\n\t_maintainScale = false;\n\n\tget play() {\n\t\treturn this._play;\n\t}\n\n\tset play(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._play = value;\n\t\t\tthis._playVideo(this._play);\n\t\t}\n\t}\n\n\tget loop() {\n\t\treturn this._loop;\n\t}\n\n\tset loop(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._loop = value;\n\t\t\tthis._playVideo(this._play);\n\t\t}\n\t}\n\n\tget maintainAspectRatio() {\n\t\treturn this._maintainAspectRatio;\n\t}\n\n\tset maintainAspectRatio(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._maintainAspectRatio = value;\n\t\t}\n\t}\n\n\tget maintainScale() {\n\t\treturn this._maintainScale;\n\t}\n\n\tset maintainScale(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._maintainScale = value;\n\t\t}\n\t}\n\n\tget color() {\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\n\t}\n\n\tset color(value) {\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\n\t}\n\n\tget colorize() {\n\t\treturn this.uniforms.colorize;\n\t}\n\n\tset colorize(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.colorize = value;\n\t\t}\n\t}\n\n\tget inverse() {\n\t\treturn this.uniforms.inverse;\n\t}\n\n\tset inverse(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.inverse = value;\n\t\t}\n\t}\n\n\tget alpha() {\n\t\treturn this.uniforms.alpha;\n\t}\n\n\tset alpha(value) {\n\t\tthis.uniforms.alpha = value;\n\t}\n\n\tget alphaDiscard() {\n\t\treturn this.uniforms.alphaDiscard;\n\t}\n\n\tset alphaDiscard(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.alphaDiscard = value;\n\t\t}\n\t}\n\n\tget repeat() {\n\t\treturn this.uniforms.repeat;\n\t}\n\n\tset repeat(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.repeat = value;\n\t\t}\n\t}\n\n\tget top() {\n\t\treturn this.uniforms.top;\n\t}\n\n\tset top(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.top = value;\n\t\t}\n\t}\n\n\tget rotation() {\n\t\treturn this.uniforms.rotation;\n\t}\n\n\tset rotation(value) {\n\t\tthis.uniforms.rotation = value;\n\t}\n\n\tget twRadiusPercent() {\n\t\treturn this.uniforms.twRadius * 200;\n\t}\n\n\tset twRadiusPercent(value) {\n\t\tthis.uniforms.twRadius = value / 200;\n\t}\n\n\tget twAngle() {\n\t\treturn this.uniforms.twAngle;\n\t}\n\n\tset twAngle(value) {\n\t\tthis.uniforms.twAngle = value;\n\t}\n\n\tget twRotation() {\n\t\treturn this.uniforms.twAngle * (180 / Math.PI);\n\t}\n\n\tset twRotation(value) {\n\t\tthis.uniforms.twAngle = value * (Math.PI / 180);\n\t}\n\n\tget bpRadiusPercent() {\n\t\treturn this.uniforms.bpRadius * 200;\n\t}\n\n\tset bpRadiusPercent(value) {\n\t\tthis.uniforms.bpRadius = value / 200;\n\t}\n\n\tget bpStrength() {\n\t\treturn this.uniforms.bpStrength;\n\t}\n\n\tset bpStrength(value) {\n\t\tthis.uniforms.bpStrength = value;\n\t}\n\n\tget scale() {\n\t\t// a little hack (we get only x)\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale[1] = this.uniforms.scale[0] = value;\n\t}\n\n\tget scaleX() {\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset scaleX(value) {\n\t\tthis.uniforms.scale[0] = value;\n\t}\n\n\tget scaleY() {\n\t\treturn this.uniforms.scale[1];\n\t}\n\n\tset scaleY(value) {\n\t\tthis.uniforms.scale[1] = value;\n\t}\n\n\tget translationX() {\n\t\treturn this.uniforms.translation[0];\n\t}\n\n\tset translationX(value) {\n\t\tthis.uniforms.translation[0] = value;\n\t}\n\n\tget translationY() {\n\t\treturn this.uniforms.translation[1];\n\t}\n\n\tset translationY(value) {\n\t\tthis.uniforms.translation[1] = value;\n\t}\n\n\tget uSamplerTarget() {\n\t\treturn this.uniforms.uSamplerTarget;\n\t}\n\n\tset uSamplerTarget(value) {\n\t\tthis.uniforms.uSamplerTarget = value;\n\t}\n\n\tasync _playVideo(value) {\n\t\t// Play if baseTexture resource is a video\n\t\tif (this.tex) {\n\t\t\tconst source = getProperty(this.tex, 'baseTexture.resource.source');\n\t\t\tif (source && source.tagName === 'VIDEO') {\n\t\t\t\tif (isNaN(source.duration)) {\n\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\tsource.onloadedmetadata = () => resolve();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (value) game.video.play(source, { loop: this._loop, volume: 0 });\n\t\t\t\telse game.video.stop(source);\n\t\t\t}\n\t\t}\n\t}\n\n\tassignTexture() {\n\t\tif (this.hasOwnProperty('imagePath')) {\n\t\t\t// Destroy the previous sprite\n\t\t\tif (this.targetSprite && !this.targetSprite.destroyed)\n\t\t\t\tthis.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\n\t\t\tthis.tex = PIXI.Texture.from(this.imagePath);\n\n\t\t\tlet sprite = new PIXI.Sprite(this.tex);\n\n\t\t\tsprite.renderable = false;\n\t\t\tif (this.placeableImg._texture) {\n\t\t\t\tsprite.width = this.placeableImg._texture.baseTexture.realWidth;\n\t\t\t\tsprite.height = this.placeableImg._texture.baseTexture.realHeight;\n\t\t\t\tsprite.anchor.set(0.5);\n\t\t\t} else {\n\t\t\t\tsprite.width = this.placeableImg.width;\n\t\t\t\tsprite.height = this.placeableImg.height;\n\t\t\t}\n\n\t\t\tthis.targetSprite = sprite;\n\t\t\tthis.uSamplerTarget = sprite._texture;\n\t\t\tthis.placeableImg.addChild(sprite);\n\n\t\t\tthis._playVideo(this._play);\n\t\t}\n\t}\n\n\t// override\n\tapply(filterManager, input, output, clear) {\n\t\tconst targetSprite = this.targetSprite;\n\t\tconst tex = targetSprite._texture;\n\n\t\tif (tex.valid) {\n\t\t\tif (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n\t\t\ttex.uvMatrix.update();\n\n\t\t\tthis.uniforms.uSamplerTarget = tex;\n\t\t\tif (this.maintainScale) {\n\t\t\t\tlet pScale = targetSprite.parent.scale;\n\t\t\t\ttargetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\n\t\t\t}\n\n\t\t\tlet w = targetSprite.worldTransform;\n\t\t\tif (this.maintainAspectRatio) {\n\t\t\t\tlet scale = Math.min(w.a, w.d);\n\t\t\t\tw.set(scale, w.b, w.c, scale, w.tx, w.ty);\n\t\t\t}\n\n\t\t\tthis.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\n\t\t\tthis.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n\t\t}\n\n\t\tsuper.apply(filterManager, input, output, clear);\n\t}\n\n\t// override\n\tdestroy() {\n\t\tsuper.destroy();\n\t\tif (!this.targetSprite.destroyed) this.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\n\t}\n}\n\nFilterSprite.defaults = {\n\tcolor: 0x000000,\n\tcolorize: false,\n\tinverse: false,\n\talpha: 1,\n\talphaDiscard: false,\n\trepeat: false,\n\ttop: false,\n\trotation: 0.0,\n\ttwRadiusPercent: 0,\n\ttwAngle: 0,\n\tbpRadiusPercent: 0,\n\tbpStrength: 0,\n\tscaleX: 1,\n\tscaleY: 1,\n\ttranslationX: 0,\n\ttranslationY: 0,\n\tplay: true,\n\tloop: true,\n\tmaintainAspectRatio: false,\n\tmaintainScale: false,\n};\n","export const sprite = `#version 300 es\nprecision mediump float;\n\nuniform float rotation;\nuniform float twRadius;\nuniform float twAngle;\nuniform float bpRadius;\nuniform float bpStrength;\nuniform float alpha;\nuniform bool alphaDiscard;\n\nuniform bool inverse;\nuniform bool top;\nuniform bool colorize;\nuniform bool repeat;\n\nuniform vec2 scale;\nuniform vec2 translation;\n\nuniform vec3 color;\n\nuniform vec4 inputClamp;\nuniform vec4 inputClampTarget;\n\nuniform sampler2D uSampler;\nuniform sampler2D uSamplerTarget;\n\nin vec2 vTextureCoord;\nin vec2 vTextureCoordExtra;\nin vec2 vFilterCoord;\nin mat3 vTargetUVMatrix;\n\nout vec4 outputColor;\n\nconst float PI = 3.14159265358;\n\nfloat getClip(in vec2 uv) {\n    return step(3.5,\n       step(inputClampTarget.x, uv.x) +\n       step(inputClampTarget.y, uv.y) +\n       step(uv.x, inputClampTarget.z) +\n       step(uv.y, inputClampTarget.w));\n}\n\nvec2 morphing(in vec2 uv) {\n    float dist = length(uv);\n\n    // twist effect\n    if (dist < twRadius) {\n        float ratioDist = (twRadius - dist) / twRadius;\n        float angleMod = ratioDist * ratioDist * twAngle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    }\n\n    // bulge pinch effect\n    if (dist < bpRadius) {\n        float percent = dist / bpRadius;\n        if (bpStrength > 0.) {\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\n        } else {\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\n        }\n    }\n\n    return uv;\n}\n\nvec4 colorization(in vec4 col) {\n    vec3 wcol = col.rgb;\n    if (inverse) {\n        wcol = (vec3(1.0) - wcol) * col.a;\n    }\n    float avg = (wcol.r + wcol.g + wcol.b) / 3.0;\n    return vec4(vec3(color * avg), col.a);\n}\n\nvec2 transform(in vec2 uv) {\n    float angle = -(PI * rotation * 0.005555555555);\n    uv -= 0.5;\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\n    uv = morphing(uv);\n    uv += 0.5;\n\n    return uv;\n}\n\nvec4 getFromColor(in vec2 uv) {\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\n}\n\nvec4 getToColor(in vec2 uv) {\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\n}\n\nvec4 getToColorFract(in vec2 uv) {\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\n}\n\nvoid main() {\n\n    // UV transformations\n    vec2 uvTex = transform(vTextureCoordExtra);\n\n    // get samplers color\n    vec4 icolor = getFromColor(vTextureCoord);\n\n    vec4 tcolor;\n    if(repeat) {\n        tcolor = getToColorFract(uvTex + translation);\n    } else {\n        tcolor = getToColor(uvTex + translation);\n    }\n\n    tcolor.a *= alpha;\n    if(alphaDiscard) tcolor = mix(tcolor, icolor, 1.0 - icolor.a);\n\n    // colorize if necessary\n    if (colorize) {\n        tcolor = colorization(tcolor);\n    }\n\n    vec3 fcolor = tcolor.rgb;\n    if(top && icolor.a > 0.) fcolor = mix(tcolor.rgb, icolor.rgb, 1.0 - tcolor.a);\n    else if(!top) fcolor = mix(icolor.rgb, tcolor.rgb, 1.0 - icolor.a);\n   \n    outputColor = vec4(fcolor, max(tcolor.a, icolor.a));\n}\n`;\n","import { spritemask } from '../glsl/fragmentshaders/spritemask.js';\nimport { customVertex2DSampler } from '../glsl/vertexshaders/customvertex2DSampler.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\nimport { fixPath } from '../../module/tokenmagic.js';\n\nexport class FilterSpriteMask extends CustomFilter {\n\ttex = null;\n\n\tconstructor(params) {\n\t\tlet {\n\t\t\timagePath,\n\t\t\talpha,\n\t\t\trepeat,\n\t\t\trotation,\n\t\t\ttwRadiusPercent,\n\t\t\ttwAngle,\n\t\t\ttwRotation,\n\t\t\tbpRadiusPercent,\n\t\t\tbpStrength,\n\t\t\tscale,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\ttranslationX,\n\t\t\ttranslationY,\n\t\t\tplay,\n\t\t\tloop,\n\t\t\tmaintainAspectRatio,\n\t\t\tmaintainScale,\n\t\t} = Object.assign({}, FilterSpriteMask.defaults, params);\n\n\t\tconst targetSpriteMatrix = new PIXI.Matrix();\n\n\t\t// using specific vertex shader and fragment shader\n\t\tsuper(customVertex2DSampler, spritemask);\n\n\t\t// vertex uniforms\n\t\tthis.uniforms.targetUVMatrix = targetSpriteMatrix;\n\n\t\t// fragment uniforms\n\t\tthis.uniforms.inputClampTarget = new Float32Array([0, 0, 0, 0]);\n\t\tthis.uniforms.color = new Float32Array([0.0, 0.0, 0.0]);\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\n\t\tthis.uniforms.translation = new Float32Array([0.0, 0.0]);\n\n\t\t// to store sprite matrix from the filter manager (and send to vertex)\n\t\tthis.targetSpriteMatrix = targetSpriteMatrix;\n\n\t\tObject.assign(this, {\n\t\t\timagePath: fixPath(imagePath),\n\t\t\talpha,\n\t\t\trepeat,\n\t\t\trotation,\n\t\t\ttwRadiusPercent,\n\t\t\ttwAngle,\n\t\t\ttwRotation,\n\t\t\tbpRadiusPercent,\n\t\t\tbpStrength,\n\t\t\tscale,\n\t\t\tscaleX,\n\t\t\tscaleY,\n\t\t\ttranslationX,\n\t\t\ttranslationY,\n\t\t\tplay,\n\t\t\tloop,\n\t\t\tmaintainAspectRatio,\n\t\t\tmaintainScale,\n\t\t});\n\n\t\tthis.zOrder = 0;\n\t\tthis.autoFit = false;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tsetTMParams(params) {\n\t\tsuper.setTMParams(params);\n\t\tif (!this.dummy && 'imagePath' in params) {\n\t\t\tthis.assignTexture();\n\t\t}\n\t}\n\n\t_play = true;\n\t_loop = true;\n\t_maintainAspectRatio = false;\n\t_maintainScale = false;\n\n\tget play() {\n\t\treturn this._play;\n\t}\n\n\tset play(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._play = value;\n\t\t\tthis._playVideo(this._play);\n\t\t}\n\t}\n\n\tget loop() {\n\t\treturn this._loop;\n\t}\n\n\tset loop(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._loop = value;\n\t\t\tthis._playVideo(this._play);\n\t\t}\n\t}\n\n\tget maintainAspectRatio() {\n\t\treturn this._maintainAspectRatio;\n\t}\n\n\tset maintainAspectRatio(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._maintainAspectRatio = value;\n\t\t}\n\t}\n\n\tget maintainScale() {\n\t\treturn this._maintainScale;\n\t}\n\n\tset maintainScale(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis._maintainScale = value;\n\t\t}\n\t}\n\n\tget alpha() {\n\t\treturn this.uniforms.alpha;\n\t}\n\n\tset alpha(value) {\n\t\tthis.uniforms.alpha = value;\n\t}\n\n\tget repeat() {\n\t\treturn this.uniforms.repeat;\n\t}\n\n\tset repeat(value) {\n\t\tif (!(value == null) && typeof value === 'boolean') {\n\t\t\tthis.uniforms.repeat = value;\n\t\t}\n\t}\n\n\tget rotation() {\n\t\treturn this.uniforms.rotation;\n\t}\n\n\tset rotation(value) {\n\t\tthis.uniforms.rotation = value;\n\t}\n\n\tget twRadiusPercent() {\n\t\treturn this.uniforms.twRadius * 200;\n\t}\n\n\tset twRadiusPercent(value) {\n\t\tthis.uniforms.twRadius = value / 200;\n\t}\n\n\tget twAngle() {\n\t\treturn this.uniforms.twAngle;\n\t}\n\n\tset twAngle(value) {\n\t\tthis.uniforms.twAngle = value;\n\t}\n\n\tget twRotation() {\n\t\treturn this.uniforms.twAngle * (180 / Math.PI);\n\t}\n\n\tset twRotation(value) {\n\t\tthis.uniforms.twAngle = value * (Math.PI / 180);\n\t}\n\n\tget bpRadiusPercent() {\n\t\treturn this.uniforms.bpRadius * 200;\n\t}\n\n\tset bpRadiusPercent(value) {\n\t\tthis.uniforms.bpRadius = value / 200;\n\t}\n\n\tget bpStrength() {\n\t\treturn this.uniforms.bpStrength;\n\t}\n\n\tset bpStrength(value) {\n\t\tthis.uniforms.bpStrength = value;\n\t}\n\n\tget scale() {\n\t\t// a little hack (we get only x)\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale[1] = this.uniforms.scale[0] = value;\n\t}\n\n\tget scaleX() {\n\t\treturn this.uniforms.scale[0];\n\t}\n\n\tset scaleX(value) {\n\t\tthis.uniforms.scale[0] = value;\n\t}\n\n\tget scaleY() {\n\t\treturn this.uniforms.scale[1];\n\t}\n\n\tset scaleY(value) {\n\t\tthis.uniforms.scale[1] = value;\n\t}\n\n\tget translationX() {\n\t\treturn this.uniforms.translation[0];\n\t}\n\n\tset translationX(value) {\n\t\tthis.uniforms.translation[0] = value;\n\t}\n\n\tget translationY() {\n\t\treturn this.uniforms.translation[1];\n\t}\n\n\tset translationY(value) {\n\t\tthis.uniforms.translation[1] = value;\n\t}\n\n\tget uSamplerTarget() {\n\t\treturn this.uniforms.uSamplerTarget;\n\t}\n\n\tset uSamplerTarget(value) {\n\t\tthis.uniforms.uSamplerTarget = value;\n\t}\n\n\tasync _playVideo(value) {\n\t\t// Play if baseTexture resource is a video\n\t\tif (this.tex) {\n\t\t\tconst source = getProperty(this.tex, 'baseTexture.resource.source');\n\t\t\tif (source && source.tagName === 'VIDEO') {\n\t\t\t\tif (isNaN(source.duration)) {\n\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\tsource.onloadedmetadata = () => resolve();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (value) game.video.play(source, { loop: this._loop, volume: 0 });\n\t\t\t\telse game.video.stop(source);\n\t\t\t}\n\t\t}\n\t}\n\n\tassignTexture() {\n\t\tif (this.hasOwnProperty('imagePath')) {\n\t\t\t// Destroy the previous sprite\n\t\t\tif (this.targetSprite && !this.targetSprite.destroyed)\n\t\t\t\tthis.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\n\t\t\tthis.tex = PIXI.Texture.from(this.imagePath);\n\n\t\t\tlet sprite = new PIXI.Sprite(this.tex);\n\n\t\t\tsprite.renderable = false;\n\t\t\tif (this.placeableImg._texture) {\n\t\t\t\tsprite.width = this.placeableImg._texture.baseTexture.realWidth;\n\t\t\t\tsprite.height = this.placeableImg._texture.baseTexture.realHeight;\n\t\t\t\tsprite.anchor.set(0.5);\n\t\t\t} else {\n\t\t\t\tsprite.width = this.placeableImg.width;\n\t\t\t\tsprite.height = this.placeableImg.height;\n\t\t\t}\n\n\t\t\tthis.targetSprite = sprite;\n\t\t\tthis.uSamplerTarget = sprite._texture;\n\t\t\tthis.placeableImg.addChild(sprite);\n\n\t\t\tthis._playVideo(this._play);\n\t\t}\n\t}\n\n\t// override\n\tapply(filterManager, input, output, clear) {\n\t\tconst targetSprite = this.targetSprite;\n\t\tconst tex = targetSprite._texture;\n\n\t\tif (tex.valid) {\n\t\t\tif (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n\t\t\ttex.uvMatrix.update();\n\n\t\t\tthis.uniforms.uSamplerTarget = tex;\n\t\t\tif (this.maintainScale) {\n\t\t\t\tlet pScale = targetSprite.parent.scale;\n\t\t\t\ttargetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\n\t\t\t}\n\n\t\t\tlet w = targetSprite.worldTransform;\n\t\t\tif (this.maintainAspectRatio) {\n\t\t\t\tlet scale = Math.min(w.a, w.d);\n\t\t\t\tw.set(scale, w.b, w.c, scale, w.tx, w.ty);\n\t\t\t}\n\n\t\t\tthis.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\n\t\t\tthis.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n\t\t}\n\n\t\tsuper.apply(filterManager, input, output, clear);\n\t}\n\n\t// override\n\tdestroy() {\n\t\tsuper.destroy();\n\t\tif (!this.targetSprite.destroyed) this.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\n\t}\n}\n\nFilterSpriteMask.defaults = {\n\talpha: 1,\n\trepeat: false,\n\trotation: 0.0,\n\ttwRadiusPercent: 0,\n\ttwAngle: 0,\n\tbpRadiusPercent: 0,\n\tbpStrength: 0,\n\tscaleX: 1,\n\tscaleY: 1,\n\ttranslationX: 0,\n\ttranslationY: 0,\n\tplay: true,\n\tloop: true,\n\tmaintainAspectRatio: false,\n\tmaintainScale: false,\n};\n","export const spritemask = `#version 300 es\nprecision mediump float;\n\nuniform float rotation;\nuniform float twRadius;\nuniform float twAngle;\nuniform float bpRadius;\nuniform float bpStrength;\nuniform float alpha;\n\nuniform bool repeat;\n\nuniform vec2 scale;\nuniform vec2 translation;\n\nuniform vec4 inputClamp;\nuniform vec4 inputClampTarget;\n\nuniform sampler2D uSampler;\nuniform sampler2D uSamplerTarget;\n\nin vec2 vTextureCoord;\nin vec2 vTextureCoordExtra;\nin vec2 vFilterCoord;\nin mat3 vTargetUVMatrix;\n\nout vec4 outputColor;\n\nconst float PI = 3.14159265358;\n\nfloat getClip(in vec2 uv) {\n    return step(3.5,\n       step(inputClampTarget.x, uv.x) +\n       step(inputClampTarget.y, uv.y) +\n       step(uv.x, inputClampTarget.z) +\n       step(uv.y, inputClampTarget.w));\n}\n\nvec2 morphing(in vec2 uv) {\n    float dist = length(uv);\n\n    // twist effect\n    if (dist < twRadius) {\n        float ratioDist = (twRadius - dist) / twRadius;\n        float angleMod = ratioDist * ratioDist * twAngle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    }\n\n    // bulge pinch effect\n    if (dist < bpRadius) {\n        float percent = dist / bpRadius;\n        if (bpStrength > 0.) {\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\n        } else {\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\n        }\n    }\n\n    return uv;\n}\n\nvec2 transform(in vec2 uv) {\n    float angle = -(PI * rotation * 0.005555555555);\n    uv -= 0.5;\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\n    uv = morphing(uv);\n    uv += 0.5;\n\n    return uv;\n}\n\nvec4 getFromColor(in vec2 uv) {\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\n}\n\nvec4 getToColor(in vec2 uv) {\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\n}\n\nvec4 getToColorFract(in vec2 uv) {\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\n}\n\nvoid main() {\n\n    // UV transformations\n    vec2 uvTex = transform(vTextureCoordExtra);\n\n    // get samplers color\n    vec4 icolor = getFromColor(vTextureCoord);\n\n    vec4 tcolor;\n    if(repeat) tcolor = getToColorFract(uvTex + translation);\n    else tcolor = getToColor(uvTex + translation);\n\n    outputColor = icolor * (tcolor.a * alpha);\n}\n`;\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterReplaceColor extends PIXI.filters.ColorReplaceFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.originalColor = [1, 0, 0];\n\t\tthis.newColor = [0, 1, 0];\n\t\tthis.epsilon = 0.7;\n\t\tthis.zOrder = 100;\n\t\tthis.animating = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\nimport { CustomFilter } from './CustomFilter.js';\nimport { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\nimport { ddTint } from '../glsl/fragmentshaders/ddtint.js';\n\nexport class FilterDDTint extends CustomFilter {\n\tconstructor(params) {\n\t\tsuper(customVertex2D, ddTint);\n\t\tthis.tint = [1, 0, 0];\n\t\tthis.zOrder = 100;\n\t\tthis.animating = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget tint() {\n\t\treturn this.uniforms.tint;\n\t}\n\n\tset tint(value) {\n\t\tthis.uniforms.tint = value;\n\t}\n}\n","export const ddTint = `\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec3 tint;\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    float lesser = min(color.g,color.b);\n    float bigger = max(color.g,color.b);\n    if ((bigger - lesser < 0.1) && (color.r > 1.5 * bigger)) {\n        float primary = color.r;\n        float range = primary - lesser;\n        color.r = lesser + range * tint.r;\n        color.g = lesser + range * tint.g;\n        color.b = lesser + range * tint.b;\n    }\n    gl_FragColor = color;\n}`;\n","export const PresetsLibrary = {\n\tMAIN: 'tmfx-main',\n\tTEMPLATE: 'tmfx-template',\n};\n\nexport var presets = [];\n\nlet params = [\n\t{\n\t\tfilterType: 'bevel',\n\t\tfilterId: 'bevel',\n\t\trotation: 0,\n\t\tthickness: 5,\n\t\tlightColor: 0xff0000,\n\t\tlightAlpha: 0.8,\n\t\tshadowColor: 0x00ff00,\n\t\tshadowAlpha: 0.5,\n\t\tanimated: {\n\t\t\trotation: {\n\t\t\t\tactive: true,\n\t\t\t\tclockWise: true,\n\t\t\t\tloopDuration: 1600,\n\t\t\t\tanimType: 'syncRotation',\n\t\t\t},\n\t\t},\n\t},\n];\n\nvar presetObject = {};\npresetObject.name = 'bevel';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'adjustment',\n\t\tfilterId: 'adjustment',\n\t\tsaturation: 1.5,\n\t\tbrightness: 1.5,\n\t\tcontrast: 2,\n\t\tgamma: 2,\n\t\tred: 4,\n\t\tgreen: 0.25,\n\t\tblue: 0.25,\n\t\talpha: 1,\n\t\tanimated: {\n\t\t\talpha: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 5000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 0.15,\n\t\t\t\tval2: 1,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'adjustment';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'shadow',\n\t\tfilterId: 'dropshadow',\n\t\trotation: 35,\n\t\tblur: 2,\n\t\tquality: 5,\n\t\tdistance: 20,\n\t\talpha: 0.7,\n\t\tpadding: 10,\n\t\tshadowOnly: false,\n\t\tcolor: 0x000000,\n\t\tanimated: {\n\t\t\tblur: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 1500,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 3,\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 150,\n\t\t\t\tanimType: 'syncSinOscillation',\n\t\t\t\tval1: 33,\n\t\t\t\tval2: 35,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'dropshadow';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'outline',\n\t\tfilterId: 'outline',\n\t\tpadding: 10,\n\t\tcolor: 0xee6035,\n\t\tthickness: 1,\n\t\tquality: 5,\n\t\tanimated: {\n\t\t\tthickness: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 800,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 6,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'outline';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'glow',\n\t\tfilterId: 'glow',\n\t\touterStrength: 7,\n\t\tinnerStrength: 0,\n\t\tcolor: 0x006000,\n\t\tquality: 0.5,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\tcolor: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'colorOscillation',\n\t\t\t\tval1: 0x003000,\n\t\t\t\tval2: 0x00ff00,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'glow';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xbloom',\n\t\tfilterId: 'bloom',\n\t\tthreshold: 0.35,\n\t\tbloomScale: 0,\n\t\tbrightness: 1,\n\t\tblur: 0.1,\n\t\tpadding: 10,\n\t\tquality: 15,\n\t\tblendMode: 0,\n\t\tanimated: {\n\t\t\tbloomScale: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 2000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 2.1,\n\t\t\t},\n\t\t\tthreshold: {\n\t\t\t\tactive: false,\n\t\t\t\tloopDuration: 1000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 0.0,\n\t\t\t\tval2: 1.9,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'bloom';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'distortion',\n\t\tfilterId: 'distortion',\n\t\tmaskPath: 'modules/tokenmagic/fx/assets/distortion-1.png',\n\t\tmaskSpriteScaleX: 5,\n\t\tmaskSpriteScaleY: 5,\n\t\tpadding: 20,\n\t\tanimated: {\n\t\t\tmaskSpriteX: { active: true, speed: 0.05, animType: 'move' },\n\t\t\tmaskSpriteY: { active: true, speed: 0.07, animType: 'move' },\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'distortion';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'oldfilm',\n\t\tfilterId: 'oldfilm',\n\t\tsepia: 0.6,\n\t\tnoise: 0.2,\n\t\tnoiseSize: 1.0,\n\t\tscratch: 0.8,\n\t\tscratchDensity: 0.5,\n\t\tscratchWidth: 1.2,\n\t\tvignetting: 0.9,\n\t\tvignettingAlpha: 0.6,\n\t\tvignettingBlur: 0.2,\n\t\tanimated: {\n\t\t\tseed: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'randomNumber',\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 1,\n\t\t\t},\n\t\t\tvignetting: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 2000,\n\t\t\t\tval1: 0.2,\n\t\t\t\tval2: 0.4,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'outline',\n\t\tfilterId: 'oldfilm',\n\t\tcolor: 0x000000,\n\t\tthickness: 0,\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'oldfilm';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'twist',\n\t\tfilterId: 'twist',\n\t\tradiusPercent: 120,\n\t\tangle: 0,\n\t\tanimated: {\n\t\t\tangle: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'sinOscillation',\n\t\t\t\tloopDuration: 10000,\n\t\t\t\tval1: -0.6 * Math.PI,\n\t\t\t\tval2: +0.6 * Math.PI,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'twist';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'bulgepinch',\n\t\tfilterId: 'bulge',\n\t\tpadding: 150,\n\t\tstrength: 0,\n\t\tzIndex: 2,\n\t\tradiusPercent: 200,\n\t\tanimated: {\n\t\t\tstrength: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 2000,\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 0.45,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'bulge';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'blur',\n\t\tfilterId: 'blur',\n\t\tpadding: 10,\n\t\tquality: 4.0,\n\t\tblur: 0,\n\t\tblurX: 0,\n\t\tblurY: 0,\n\t\tanimated: {\n\t\t\tblurX: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 500,\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 6,\n\t\t\t},\n\t\t\tblurY: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 750,\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 6,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'blur';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'zoomblur',\n\t\tfilterId: 'zoomblur',\n\t\tstrength: 0.15,\n\t\tinnerRadiusPercent: 65,\n\t\tradiusPercent: 100,\n\t\tpadding: 30,\n\t\tanimated: {\n\t\t\tinnerRadiusPercent: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'sinOscillation',\n\t\t\t\tloopDuration: 500,\n\t\t\t\tval1: 65,\n\t\t\t\tval2: 75,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'zoomblur';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'shockwave',\n\t\tfilterId: 'shockwave',\n\t\ttime: 0,\n\t\tamplitude: 8,\n\t\twavelength: 75,\n\t\tradius: 500,\n\t\tbrightness: 1.5,\n\t\tspeed: 25,\n\t\tpadding: 0,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 1800,\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 10,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'shockwave';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'zapshadow',\n\t\tfilterId: 'zapshadow',\n\t\talphaTolerance: 0.45,\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'zapshadow';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'ray',\n\t\tfilterId: 'rays',\n\t\ttime: 0,\n\t\tcolor: 0xcf8000,\n\t\talpha: 0.5,\n\t\tdivisor: 32,\n\t\tanchorX: 0,\n\t\tanchorY: 0,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0005,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'rays';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'fog',\n\t\tfilterId: 'fog',\n\t\tcolor: 0x000000,\n\t\tdensity: 0.65,\n\t\ttime: 0,\n\t\tdimX: 1,\n\t\tdimY: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 2.2,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'fog';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'fumes',\n\t\tfilterId: 'fumes',\n\t\tcolor: 0x808080,\n\t\ttime: 0,\n\t\tblend: 8,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'fumes';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'electric',\n\t\tfilterId: 'electric',\n\t\tcolor: 0xffffff,\n\t\ttime: 0,\n\t\tblend: 1,\n\t\tintensity: 5,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.002,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'electric';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'fire',\n\t\tfilterId: 'fire',\n\t\tintensity: 1,\n\t\tcolor: 0xffffff,\n\t\tamplitude: 1,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tfireBlend: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.0024,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tintensity: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 15000,\n\t\t\t\tval1: 0.8,\n\t\t\t\tval2: 2,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t},\n\t\t\tamplitude: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 4400,\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 1.4,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'fire';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'wave',\n\t\tfilterId: 'waves',\n\t\ttime: 0,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tstrength: 0.015,\n\t\tfrequency: 120,\n\t\tcolor: 0xffffff,\n\t\tmaxIntensity: 2.5,\n\t\tminIntensity: 0.9,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0085,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tanchorX: {\n\t\t\t\tactive: false,\n\t\t\t\tval1: 0.15,\n\t\t\t\tval2: 0.85,\n\t\t\t\tanimType: 'syncChaoticOscillation',\n\t\t\t\tloopDuration: 20000,\n\t\t\t},\n\t\t\tanchorY: {\n\t\t\t\tactive: false,\n\t\t\t\tval1: 0.15,\n\t\t\t\tval2: 0.85,\n\t\t\t\tanimType: 'syncSinOscillation',\n\t\t\t\tloopDuration: 20000,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'waves';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'flood',\n\t\tfilterId: 'flood',\n\t\ttime: 0,\n\t\tcolor: 0x0020bb,\n\t\tbillowy: 0.43,\n\t\ttintIntensity: 0.72,\n\t\tglint: 0.31,\n\t\tscale: 70,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0006,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'flood';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'smoke',\n\t\tfilterId: 'smoke',\n\t\tcolor: 0x5099dd,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tdimX: 0.1,\n\t\tdimY: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.009,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'smoke';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'images',\n\t\tfilterId: 'images',\n\t\ttime: 0,\n\t\tnbImage: 4,\n\t\talphaImg: 1.0,\n\t\talphaChr: 0.0,\n\t\tblend: 4,\n\t\tampX: 0.1,\n\t\tampY: 0.1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'images';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'images',\n\t\tfilterId: 'chaos-images',\n\t\ttime: 0,\n\t\tnbImage: 4,\n\t\talphaImg: 1.0,\n\t\talphaChr: 0.0,\n\t\tblend: 4,\n\t\tampX: 0.1,\n\t\tampY: 0.1,\n\t\tpadding: 80,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tampX: {\n\t\t\t\tactive: true,\n\t\t\t\tval1: 0.0,\n\t\t\t\tval2: 0.3,\n\t\t\t\tchaosFactor: 0.03,\n\t\t\t\tanimType: 'syncChaoticOscillation',\n\t\t\t\tloopDuration: 2000,\n\t\t\t},\n\t\t\tampY: {\n\t\t\t\tactive: true,\n\t\t\t\tval1: 0.0,\n\t\t\t\tval2: 0.3,\n\t\t\t\tchaosFactor: 0.04,\n\t\t\t\tanimType: 'syncChaoticOscillation',\n\t\t\t\tloopDuration: 1650,\n\t\t\t},\n\t\t\talphaChr: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'randomNumberPerLoop',\n\t\t\t\tval1: 0.0,\n\t\t\t\tval2: 1,\n\t\t\t\tloopDuration: 250,\n\t\t\t},\n\t\t\talphaImg: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'randomNumberPerLoop',\n\t\t\t\tval1: 0.8,\n\t\t\t\tval2: 1,\n\t\t\t\tloopDuration: 250,\n\t\t\t},\n\t\t\tnbImage: {\n\t\t\t\tactive: true,\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 9,\n\t\t\t\tanimType: 'syncSinOscillation',\n\t\t\t\tloopDuration: 1400,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'chaos-images';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'images',\n\t\tfilterId: 'spectral-images',\n\t\ttime: 0,\n\t\tblend: 4,\n\t\tnbImage: 4,\n\t\tpadding: 100,\n\t\talphaImg: 0.5,\n\t\talphaChr: 0.0,\n\t\tampX: 0.1,\n\t\tampY: 0.1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tampX: {\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 0.22,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 2500,\n\t\t\t},\n\t\t\tampY: {\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 0.24,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 2500,\n\t\t\t\tpauseBetweenDuration: 2500,\n\t\t\t},\n\t\t\talphaChr: {\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 0,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 2500,\n\t\t\t},\n\t\t\talphaImg: {\n\t\t\t\tval1: 0.2,\n\t\t\t\tval2: 0.8,\n\t\t\t\tanimType: 'syncSinOscillation',\n\t\t\t\tloopDuration: 2500,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'spectral-images';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'hexa-field',\n\t\tshieldType: 2,\n\t\tgridPadding: 1.5,\n\t\tcolor: 0xcc00cc,\n\t\ttime: 0,\n\t\tblend: 3,\n\t\tintensity: 1,\n\t\tlightAlpha: 0.5,\n\t\tlightSize: 0.5,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'hexa-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'fire-field',\n\t\tshieldType: 1,\n\t\tgridPadding: 2,\n\t\tcolor: 0xe58550,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tintensity: 1.15,\n\t\tlightAlpha: 2,\n\t\tlightSize: 0.7,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'fire-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'smoke-field',\n\t\tshieldType: 3,\n\t\tgridPadding: 1.5,\n\t\tcolor: 0x60cc70,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tintensity: 0.9,\n\t\tlightAlpha: 1,\n\t\tlightSize: 0.7,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'smoke-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'earth-field',\n\t\tshieldType: 4,\n\t\tgridPadding: 2,\n\t\tcolor: 0xbb9070,\n\t\ttime: 0,\n\t\tblend: 1,\n\t\tintensity: 1.25,\n\t\tlightAlpha: 1,\n\t\tlightSize: 0.7,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'earth-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'earth-field-top',\n\t\tshieldType: 5,\n\t\tgridPadding: 3,\n\t\tcolor: 0xaaaaaa,\n\t\ttime: 0,\n\t\tblend: 5,\n\t\tintensity: 1.9,\n\t\tlightAlpha: 1,\n\t\tlightSize: 0.7,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tzIndex: 5,\n\t\tchromatic: true,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'earth-field-top';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'air-field',\n\t\tshieldType: 6,\n\t\tgridPadding: 1.2,\n\t\tcolor: 0x7090aa,\n\t\ttime: 0,\n\t\tblend: 14,\n\t\tintensity: 1,\n\t\tlightAlpha: 1,\n\t\tlightSize: 0.7,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'air-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'magic-field',\n\t\tshieldType: 7,\n\t\tgridPadding: 1,\n\t\tcolor: 0xffffff,\n\t\ttime: 0,\n\t\tblend: 10,\n\t\tintensity: 0.8,\n\t\tlightAlpha: 1,\n\t\tlightSize: 0.45,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'magic-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'chromatic-field',\n\t\tshieldType: 8,\n\t\tgridPadding: 2,\n\t\tcolor: 0xaaaaaa,\n\t\ttime: 0,\n\t\tblend: 0,\n\t\tintensity: 1,\n\t\tlightAlpha: 0,\n\t\tlightSize: 0,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: true,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0045,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'chromatic-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'water-field',\n\t\tshieldType: 9,\n\t\tgridPadding: 1.2,\n\t\tcolor: 0x20bbee,\n\t\ttime: 0,\n\t\tblend: 4,\n\t\tintensity: 1,\n\t\tlightAlpha: 0.7,\n\t\tlightSize: 0.5,\n\t\tscale: 0.6,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'water-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'evil-field',\n\t\tshieldType: 9,\n\t\tgridPadding: 2,\n\t\tcolor: 0xff3010,\n\t\ttime: 0,\n\t\tblend: 5,\n\t\tintensity: 1,\n\t\tlightAlpha: 4,\n\t\tlightSize: 0.8,\n\t\tscale: 0.5,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0012,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tlightSize: {\n\t\t\t\tval1: 0.4,\n\t\t\t\tval2: 1.5,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 5000,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'evil-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'grid-field',\n\t\tshieldType: 11,\n\t\tgridPadding: 2,\n\t\tcolor: 0x00cccc,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tintensity: 1,\n\t\tlightAlpha: 1,\n\t\tlightSize: 0.3,\n\t\tscale: 0.5,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0009,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'grid-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'warp-field',\n\t\tshieldType: 12,\n\t\tgridPadding: 2,\n\t\tcolor: 0xffffff,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tintensity: 1,\n\t\tlightAlpha: 0.8,\n\t\tlightSize: 0.5,\n\t\tscale: 0.9,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0009,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'warp-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'field',\n\t\tfilterId: 'color-field',\n\t\tshieldType: 13,\n\t\tgridPadding: 2,\n\t\tcolor: 0x00cc00,\n\t\ttime: 0,\n\t\tblend: 14,\n\t\tintensity: 1,\n\t\tlightAlpha: 0,\n\t\tlightSize: 0,\n\t\tscale: 1,\n\t\tradius: 1,\n\t\tchromatic: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0009,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'color-field';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xray',\n\t\tfilterId: 'sunburst',\n\t\ttime: 0,\n\t\tcolor: 0xffbb00,\n\t\tblend: 9,\n\t\tdimX: 1,\n\t\tdimY: 1,\n\t\tanchorX: 0,\n\t\tanchorY: 0,\n\t\tdivisor: 36,\n\t\tintensity: 4,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0012,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tanchorX: {\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 6000,\n\t\t\t\tval1: 0.4,\n\t\t\t\tval2: 0.6,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'sunburst';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xray',\n\t\tfilterId: 'clover',\n\t\ttime: 0,\n\t\tcolor: 0x00ff00,\n\t\tblend: 9,\n\t\tdimX: 0.05,\n\t\tdimY: 0.05,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tdivisor: 4,\n\t\tintensity: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0012,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tanchorX: {\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 6000,\n\t\t\t\tval1: 0.4,\n\t\t\t\tval2: 0.6,\n\t\t\t},\n\t\t\tanchorY: {\n\t\t\t\tanimType: 'syncSinOscillation',\n\t\t\t\tloopDuration: 6000,\n\t\t\t\tval1: 0.4,\n\t\t\t\tval2: 0.6,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'clover';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xray',\n\t\tfilterId: 'scan',\n\t\ttime: 0,\n\t\tcolor: 0xffffff,\n\t\tblend: 5,\n\t\tdimX: 20,\n\t\tdimY: 20,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0,\n\t\tdivisor: 8,\n\t\tintensity: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0005,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'scan';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xray',\n\t\tfilterId: 'blue-rays',\n\t\ttime: 0,\n\t\tcolor: 0x1030ff,\n\t\tblend: 9,\n\t\tdimX: 1,\n\t\tdimY: 1,\n\t\tanchorX: 0,\n\t\tanchorY: 0,\n\t\tdivisor: 24,\n\t\tintensity: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0002,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tanchorX: {\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 18000,\n\t\t\t\tval1: 0.05,\n\t\t\t\tval2: 0.95,\n\t\t\t},\n\t\t\tanchorY: {\n\t\t\t\tanimType: 'syncSinOscillation',\n\t\t\t\tloopDuration: 18000,\n\t\t\t\tval1: 0.05,\n\t\t\t\tval2: 0.95,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'blue-rays';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'spectral-body',\n\t\tcolor: 0x20aaee,\n\t\ttime: 0,\n\t\tblend: 8,\n\t\tintensity: 4,\n\t\tspectral: true,\n\t\tscale: 0.9,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 6000,\n\t\t\t\tanimType: 'colorOscillation',\n\t\t\t\tval1: 0xffffff,\n\t\t\t\tval2: 0x00aaff,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'spectral-body';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'mantle-of-madness',\n\t\tcolor: 0x0090ff,\n\t\ttime: 0,\n\t\tblend: 5,\n\t\tintensity: 0.0001,\n\t\tspectral: false,\n\t\tscale: 7,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tintensity: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 30000,\n\t\t\t\tval1: 0.0001,\n\t\t\t\tval2: 4,\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 30000,\n\t\t\t\tval1: 7,\n\t\t\t\tval2: 1,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'mantle-of-madness';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'wave',\n\t\tfilterId: 'drift-in-plans',\n\t\ttime: 0,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tstrength: 0.035,\n\t\tfrequency: 80,\n\t\tcolor: 0xffffff,\n\t\tmaxIntensity: 1.5,\n\t\tminIntensity: 0.5,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0085,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tanchorX: {\n\t\t\t\tactive: true,\n\t\t\t\tval1: 0.35,\n\t\t\t\tval2: 0.65,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 10000,\n\t\t\t},\n\t\t\tanchorY: {\n\t\t\t\tactive: true,\n\t\t\t\tval1: 0.35,\n\t\t\t\tval2: 0.65,\n\t\t\t\tanimType: 'syncSinOscillation',\n\t\t\t\tloopDuration: 10000,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'drift-in-plans',\n\t\tcolor: 0xff0000,\n\t\ttime: 0,\n\t\tblend: 6,\n\t\tintensity: 5,\n\t\tspectral: false,\n\t\tscale: 2.5,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0018,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 9000,\n\t\t\t\tanimType: 'colorOscillation',\n\t\t\t\tval1: 0xff0000,\n\t\t\t\tval2: 0xffffff,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'drift-in-plans';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'zapshadow',\n\t\tfilterId: 'fire-aura',\n\t\talphaTolerance: 0.5,\n\t},\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'fire-aura',\n\t\tauraType: 2,\n\t\tcolor: 0x903010,\n\t\tthickness: 9.8,\n\t\tscale: 4,\n\t\ttime: 0,\n\t\tauraIntensity: 2,\n\t\tsubAuraIntensity: 1.5,\n\t\tthreshold: 0.4,\n\t\tdiscard: true,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0027,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 5,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'fire-aura';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'zapshadow',\n\t\tfilterId: 'glacial-aura',\n\t\talphaTolerance: 0.5,\n\t},\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'glacial-aura',\n\t\tauraType: 1,\n\t\tcolor: 0x5099dd,\n\t\tthickness: 4.5,\n\t\tscale: 3,\n\t\ttime: 0,\n\t\tauraIntensity: 0.8,\n\t\tsubAuraIntensity: 0.25,\n\t\tthreshold: 0.5,\n\t\tdiscard: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0018,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 4.7,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t\tsubAuraIntensity: {\n\t\t\t\tval1: 0.45,\n\t\t\t\tval2: 0.65,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 6000,\n\t\t\t},\n\t\t\tauraIntensity: {\n\t\t\t\tval1: 0.9,\n\t\t\t\tval2: 2.2,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'glacial-aura';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'zapshadow',\n\t\tfilterId: 'anti-aura',\n\t\talphaTolerance: 0.5,\n\t},\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'anti-aura',\n\t\tauraType: 2,\n\t\tcolor: 0x050505,\n\t\tthickness: 2.7,\n\t\tscale: 7,\n\t\ttime: 0,\n\t\tauraIntensity: 5,\n\t\tsubAuraIntensity: 2,\n\t\tthreshold: 0.08,\n\t\tdiscard: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0012,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tauraIntensity: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 5,\n\t\t\t\tval2: 0,\n\t\t\t},\n\t\t\tsubAuraIntensity: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 0,\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 6000,\n\t\t\t\tanimType: 'syncColorOscillation',\n\t\t\t\tval1: 0x050505,\n\t\t\t\tval2: 0x200000,\n\t\t\t},\n\t\t\tthreshold: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 1500,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 0.02,\n\t\t\t\tval2: 0.5,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'anti-aura';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'fire',\n\t\tfilterId: 'pure-fire-aura',\n\t\tintensity: 1,\n\t\tcolor: 0xffffff,\n\t\tamplitude: 1,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tfireBlend: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.0024,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tintensity: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 15000,\n\t\t\t\tval1: 0.8,\n\t\t\t\tval2: 2,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t},\n\t\t\tamplitude: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 4400,\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 1.4,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'zapshadow',\n\t\tfilterId: 'pure-fire-aura',\n\t\talphaTolerance: 0.5,\n\t},\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'pure-fire-aura',\n\t\tauraType: 2,\n\t\tcolor: 0x903010,\n\t\tthickness: 9.8,\n\t\tscale: 4,\n\t\ttime: 0,\n\t\tauraIntensity: 2,\n\t\tsubAuraIntensity: 1.5,\n\t\tthreshold: 0.4,\n\t\tdiscard: true,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0027,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 5,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'pure-fire-aura';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'zapshadow',\n\t\tfilterId: 'pure-fire-aura-2',\n\t\talphaTolerance: 0.5,\n\t},\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'pure-fire-aura-2',\n\t\tauraType: 2,\n\t\tcolor: 0x903010,\n\t\tthickness: 9.8,\n\t\tscale: 4,\n\t\ttime: 0,\n\t\tauraIntensity: 1,\n\t\tsubAuraIntensity: 0.3,\n\t\tthreshold: 0.5,\n\t\tdiscard: true,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0027,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 3.6,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'fire',\n\t\tfilterId: 'pure-fire-aura-2',\n\t\tintensity: 1,\n\t\tcolor: 0xffffff,\n\t\tamplitude: 1,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tfireBlend: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.0024,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tintensity: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 15000,\n\t\t\t\tval1: 0.8,\n\t\t\t\tval2: 3,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t},\n\t\t\tamplitude: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 4400,\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 1.6,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'pure-fire-aura-2';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'zapshadow',\n\t\tfilterId: 'pure-ice-aura',\n\t\talphaTolerance: 0.5,\n\t},\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'pure-ice-aura',\n\t\tauraType: 1,\n\t\tcolor: 0x5099dd,\n\t\tthickness: 4.5,\n\t\tscale: 10,\n\t\ttime: 0,\n\t\tauraIntensity: 0.25,\n\t\tsubAuraIntensity: 1,\n\t\tthreshold: 0.5,\n\t\tdiscard: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0018,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 3.3,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t\tsubAuraIntensity: {\n\t\t\t\tval1: 0.45,\n\t\t\t\tval2: 0.65,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 6000,\n\t\t\t},\n\t\t\tauraIntensity: {\n\t\t\t\tval1: 0.9,\n\t\t\t\tval2: 2.2,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'smoke',\n\t\tfilterId: 'pure-ice-aura',\n\t\tcolor: 0x80ccff,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tdimX: 0.3,\n\t\tdimY: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.006,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tdimX: {\n\t\t\t\tval1: 0.4,\n\t\t\t\tval2: 0.2,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'pure-ice-aura';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'pixel',\n\t\tfilterId: 'pixelate',\n\t\tsizeX: 2.5,\n\t\tsizeY: 2.5,\n\t},\n];\n\npresetObject = new Object();\npresetObject.name = 'pixelate';\npresetObject.library = PresetsLibrary.MAIN;\npresetObject.params = params;\npresets.push(presetObject);\n\nexport var templatePresets = [];\n\n// white : **electric , **waves, ***xrays, **liquid (normal), (clover)\n// black : **liquid (protoplasm), **smoke, **rays, outline, **fumes, **fog, **flood, **fire\n// no texture : **glow, **bulge, **blur, **bloom\n\nparams = [\n\t{\n\t\tfilterType: 'flood',\n\t\tfilterId: 'Watery Surface',\n\t\ttime: 0,\n\t\tcolor: 0x0020bb,\n\t\tbillowy: 0.43,\n\t\ttintIntensity: 0.72,\n\t\tglint: 0.31,\n\t\tscale: 70,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0006,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Watery Surface';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'Protoplasm',\n\t\tcolor: 0x20aaee,\n\t\ttime: 0,\n\t\tblend: 8,\n\t\tintensity: 4,\n\t\tspectral: true,\n\t\tscale: 1.4,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Protoplasm';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'Watery Surface 2',\n\t\tcolor: 0x20aaee,\n\t\ttime: 0,\n\t\tblend: 8,\n\t\tintensity: 4,\n\t\tspectral: false,\n\t\tscale: 1.4,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Watery Surface 2';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'smoke',\n\t\tfilterId: 'Smoky Area',\n\t\tcolor: 0xaaaaaa,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tdimX: 1,\n\t\tdimY: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.002,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Smoky Area';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'electric',\n\t\tfilterId: 'Shock',\n\t\tcolor: 0xffffff,\n\t\ttime: 0,\n\t\tblend: 1,\n\t\tintensity: 5,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.002,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Shock';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xray',\n\t\tfilterId: 'Annihilating Rays',\n\t\ttime: 0,\n\t\tcolor: 0xffbb00,\n\t\tblend: 9,\n\t\tdimX: 1,\n\t\tdimY: 1,\n\t\tanchorX: 0,\n\t\tanchorY: 0,\n\t\tdivisor: 6,\n\t\tintensity: 4,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0012,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Annihilating Rays';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'ray',\n\t\tfilterId: 'Classic Rays',\n\t\ttime: 0,\n\t\tcolor: 0xcf8000,\n\t\talpha: 0.5,\n\t\tdivisor: 32,\n\t\tanchorX: 0,\n\t\tanchorY: 0,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0005,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Classic Rays';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'fumes',\n\t\tfilterId: 'Smoke Filaments',\n\t\tcolor: 0x808080,\n\t\ttime: 0,\n\t\tblend: 8,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.001,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Smoke Filaments';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'fire',\n\t\tfilterId: 'Flames',\n\t\tintensity: 1.5,\n\t\tcolor: 0xffffff,\n\t\tamplitude: 1.3,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tfireBlend: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.0016,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Flames';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xfog',\n\t\tfilterId: 'Thick Fog',\n\t\tautoFit: false,\n\t\tcolor: 0x3090ff,\n\t\ttime: 0,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0006,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Thick Fog';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-vstrong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'glow',\n\t\tfilterId: 'Glowing Outline',\n\t\touterStrength: 5.5,\n\t\tinnerStrength: 0,\n\t\tcolor: 0x006000,\n\t\tquality: 0.5,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\touterStrength: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 5.5,\n\t\t\t\tval2: 1.5,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Glowing Outline';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'wave',\n\t\tfilterId: 'Waves',\n\t\ttime: 0,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tstrength: 0.015,\n\t\tfrequency: 120,\n\t\tcolor: 0xffffff,\n\t\tmaxIntensity: 2.5,\n\t\tminIntensity: 0.9,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0085,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Waves';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'wave',\n\t\tfilterId: 'Waves 2',\n\t\ttime: 0,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tstrength: 0.014,\n\t\tfrequency: 400,\n\t\tcolor: 0xffffff,\n\t\tmaxIntensity: 2.4,\n\t\tminIntensity: 0.8,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0385,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Waves 2';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'wave',\n\t\tfilterId: 'Waves 3',\n\t\ttime: 0,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tstrength: 0.017,\n\t\tfrequency: 35,\n\t\tcolor: 0xffffff,\n\t\tmaxIntensity: 2.6,\n\t\tminIntensity: 0.9,\n\t\tpadding: 20,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0085,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Waves 3';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'Zone : Fire',\n\t\tauraType: 1,\n\t\tcolor: 0x903010,\n\t\tscale: 1.5,\n\t\ttime: 0,\n\t\tauraIntensity: 1.8,\n\t\tsubAuraIntensity: 0.25,\n\t\tthreshold: 0.6,\n\t\tdiscard: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0027,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 5,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'fire',\n\t\tfilterId: 'Zone : Fire',\n\t\tintensity: 1.5,\n\t\tcolor: 0xffffff,\n\t\tamplitude: 1,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tfireBlend: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.0015,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Zone : Fire';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'Zone : Electricity',\n\t\tauraType: 2,\n\t\tcolor: 0x303030,\n\t\tscale: 1.5,\n\t\ttime: 0,\n\t\tauraIntensity: 1,\n\t\tsubAuraIntensity: 0.9,\n\t\tthreshold: 0,\n\t\tdiscard: true,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0027,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 3000,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 2,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'electric',\n\t\tfilterId: 'Zone : Electricity',\n\t\tcolor: 0xffffff,\n\t\ttime: 0,\n\t\tblend: 1,\n\t\tintensity: 5,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.002,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Zone : Electricity';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xglow',\n\t\tfilterId: 'Zone : Blizzard',\n\t\tauraType: 1,\n\t\tcolor: 0x5099dd,\n\t\tthickness: 4.5,\n\t\tscale: 5,\n\t\ttime: 0,\n\t\tauraIntensity: 0.25,\n\t\tsubAuraIntensity: 1,\n\t\tthreshold: 0.5,\n\t\tdiscard: false,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0018,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tval1: 2,\n\t\t\t\tval2: 3.3,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t\tsubAuraIntensity: {\n\t\t\t\tval1: 0.05,\n\t\t\t\tval2: 0.1,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 6000,\n\t\t\t},\n\t\t\tauraIntensity: {\n\t\t\t\tval1: 0.9,\n\t\t\t\tval2: 2.2,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'smoke',\n\t\tfilterId: 'Zone : Blizzard',\n\t\tcolor: 0x80ccff,\n\t\ttime: 0,\n\t\tblend: 2,\n\t\tdimY: 1,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.005,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t\tdimX: {\n\t\t\t\tval1: 0.4,\n\t\t\t\tval2: 0.2,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 3000,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Zone : Blizzard';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'bulgepinch',\n\t\tfilterId: 'Bulging Out',\n\t\tpadding: 150,\n\t\tstrength: 0,\n\t\tradiusPercent: 200,\n\t\tanimated: {\n\t\t\tstrength: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tloopDuration: 2000,\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 0.45,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Bulging Out';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'blur',\n\t\tfilterId: 'Blurred Texture',\n\t\tpadding: 25,\n\t\tquality: 4.0,\n\t\tblur: 0,\n\t\tblurX: 0,\n\t\tblurY: 0,\n\t\tanimated: {\n\t\t\tblurX: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 500,\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 6,\n\t\t\t},\n\t\t\tblurY: {\n\t\t\t\tactive: true,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tloopDuration: 750,\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 6,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Blurred Texture';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'xbloom',\n\t\tfilterId: 'Bloomed Texture',\n\t\tthreshold: 0.35,\n\t\tbloomScale: 0,\n\t\tbrightness: 1,\n\t\tblur: 0.1,\n\t\tpadding: 10,\n\t\tquality: 15,\n\t\tblendMode: 0,\n\t\tanimated: {\n\t\t\tbloomScale: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 2000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 0,\n\t\t\t\tval2: 2.1,\n\t\t\t},\n\t\t\tthreshold: {\n\t\t\t\tactive: false,\n\t\t\t\tloopDuration: 1000,\n\t\t\t\tanimType: 'syncCosOscillation',\n\t\t\t\tval1: 0.0,\n\t\t\t\tval2: 1.9,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Bloomed Texture';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'Wild Magic',\n\t\tcolor: 0xff0000,\n\t\ttime: 0,\n\t\tblend: 6,\n\t\tintensity: 5,\n\t\tspectral: false,\n\t\tscale: 2.5,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0018,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'wave',\n\t\tfilterId: 'Wild Magic',\n\t\ttime: 0,\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tstrength: 0.014,\n\t\tfrequency: 10,\n\t\tcolor: 0xffffff,\n\t\tmaxIntensity: 1.3,\n\t\tminIntensity: 0.6,\n\t\tpadding: 10,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0065,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Wild Magic';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'web',\n\t\tfilterId: 'Spider Web 1',\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tcolor: 0xffffff,\n\t\tthickness: 2,\n\t\tdiv2: 5,\n\t\ttime: 98.8,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tloopDuration: 5000,\n\t\t\t\tanimType: 'cosOscillation',\n\t\t\t\tval1: 98.8,\n\t\t\t\tval2: 99.7,\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Spider Web 1';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'web',\n\t\tfilterId: 'Spider Web 2',\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tcolor: 0xcccccc,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0005,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'Spider Web 2',\n\t\tcolor: 0xff0000,\n\t\ttime: 0,\n\t\tblend: 4,\n\t\tintensity: 8,\n\t\tspectral: false,\n\t\tscale: 0.2,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0005,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Spider Web 2';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nparams = [\n\t{\n\t\tfilterType: 'web',\n\t\tfilterId: 'Spider Web 3',\n\t\tanchorX: 0.5,\n\t\tanchorY: 0.5,\n\t\tcolor: 0xcccccc,\n\t\ttime: 100,\n\t},\n\t{\n\t\tfilterType: 'liquid',\n\t\tfilterId: 'Spider Web 3',\n\t\tcolor: 0xff0000,\n\t\ttime: 0,\n\t\tblend: 1,\n\t\tintensity: 4,\n\t\tspectral: true,\n\t\tscale: 0.2,\n\t\tanimated: {\n\t\t\ttime: {\n\t\t\t\tactive: true,\n\t\t\t\tspeed: 0.0005,\n\t\t\t\tanimType: 'move',\n\t\t\t},\n\t\t},\n\t},\n];\n\npresetObject = {};\npresetObject.name = 'Spider Web 3';\npresetObject.library = PresetsLibrary.TEMPLATE;\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\npresetObject.params = params;\ntemplatePresets.push(presetObject);\n\nexport var allPresets = presets.concat(templatePresets);\n","import { TokenMagic, isTheOne, log, warn, error } from '../module/tokenmagic.js';\nimport { PresetsLibrary, templatePresets } from '../fx/presets/defaultpresets.js';\n\nconst Magic = TokenMagic();\n\n// TODO create a generic function to import JSON by version\n\nexport const DataVersion = {\n\tARCHAIC: '',\n\tV030: '0.3.0',\n\tV040: '0.4.0',\n\tV040b: '0.4.0b',\n\tV041: '0.4.1',\n\tV043: '0.4.3',\n};\n\n// migration function - will evolve constantly\nexport async function tmfxDataMigration() {\n\tif (isTheOne()) {\n\t\tvar dataVersionNow;\n\t\ttry {\n\t\t\tdataVersionNow = game.settings.get('tokenmagic', 'migration');\n\t\t} catch (e) {\n\t\t\tdataVersionNow = DataVersion.ARCHAIC;\n\t\t}\n\t\tif (dataVersionNow < DataVersion.V030) {\n\t\t\tawait updatePresetsV030();\n\t\t}\n\t\tif (dataVersionNow < DataVersion.V040) {\n\t\t\tawait updatePresetsV040();\n\t\t}\n\t\tif (dataVersionNow < DataVersion.V040b) {\n\t\t\tawait updatePresetsV040b();\n\t\t}\n\t\tif (dataVersionNow < DataVersion.V041) {\n\t\t\tawait updatePresetsV041();\n\t\t}\n\t\tif (dataVersionNow < DataVersion.V043) {\n\t\t\tawait updatePresetsV043();\n\t\t}\n\t}\n}\n\n// migrating to the new presets data\nasync function updatePresetsV030() {\n\tvar presets = game.settings.get('tokenmagic', 'presets');\n\n\tif (!(presets == null)) {\n\t\tlog(`Migration 0.3.0 - Launching presets data migration...`);\n\n\t\tlet foundTemplateLibrary = false;\n\n\t\tfor (const preset of presets) {\n\t\t\tif (!preset.hasOwnProperty('library')) {\n\t\t\t\tpreset.library = PresetsLibrary.MAIN;\n\t\t\t\tlog(`Migration 0.3.0 - Adding ${preset.name} to ${PresetsLibrary.MAIN}`);\n\t\t\t} else if (preset.library === PresetsLibrary.TEMPLATE && !foundTemplateLibrary) {\n\t\t\t\tfoundTemplateLibrary = true;\n\t\t\t\tlog(`Migration 0.3.0 - Found template presets. Templates will not be added.`);\n\t\t\t}\n\t\t}\n\n\t\tif (!foundTemplateLibrary) log(`Migration 0.3.0 - Merging templates presets.`);\n\n\t\tlet newPresets = foundTemplateLibrary ? presets : presets.concat(templatePresets);\n\n\t\ttry {\n\t\t\tawait game.settings.set('tokenmagic', 'presets', newPresets);\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V030);\n\t\t\tlog(`Migration 0.3.0 - Migration successful!`);\n\t\t} catch (e) {\n\t\t\terror(`Migration 0.3.0 - Migration failed.`);\n\t\t\terror(e);\n\t\t}\n\t}\n}\n\nasync function updatePresetsV040() {\n\tvar presets = game.settings.get('tokenmagic', 'presets');\n\n\tif (!(presets == null)) {\n\t\tlog(`Migration 0.4.0 - Launching presets data migration...`);\n\n\t\t// Adding zOrder for the template presets only\n\t\t// Does not break visuals\n\t\tfor (const preset of presets) {\n\t\t\tif (preset.library === PresetsLibrary.TEMPLATE) {\n\t\t\t\tlog(`Migration 0.4.0 - Checking template preset ${preset.name}...`);\n\t\t\t\tlet zOrder = 1;\n\t\t\t\tfor (const filter of preset.params) {\n\t\t\t\t\tif (!filter.hasOwnProperty('zOrder')) {\n\t\t\t\t\t\tfilter.zOrder = zOrder;\n\t\t\t\t\t\tlog(`Migration 0.4.0 - Updating ${filter.filterType} in ${preset.name}...`);\n\t\t\t\t\t\tzOrder++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\n\t\t\tlog(`Migration 0.4.0 - Importing new template presets...`);\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v040.json', {\n\t\t\t\toverwrite: false,\n\t\t\t});\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V040);\n\t\t\tlog(`Migration 0.4.0 - Migration successful!`);\n\t\t} catch (e) {\n\t\t\terror(`Migration 0.4.0 - Migration failed.`);\n\t\t\terror(e);\n\t\t}\n\t}\n}\n\nasync function updatePresetsV040b() {\n\tvar presets = game.settings.get('tokenmagic', 'presets');\n\n\tif (!(presets == null)) {\n\t\tlog(`Migration 0.4.0b - Launching presets data migration...`);\n\n\t\ttry {\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\n\t\t\tlog(`Migration 0.4.0b - updating template presets...`);\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v040b.json', {\n\t\t\t\toverwrite: true,\n\t\t\t});\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V040b);\n\t\t\tlog(`Migration 0.4.0b - Migration successful!`);\n\t\t} catch (e) {\n\t\t\terror(`Migration 0.4.0b - Migration failed.`);\n\t\t\terror(e);\n\t\t}\n\t}\n}\n\nasync function updatePresetsV041() {\n\tvar presets = game.settings.get('tokenmagic', 'presets');\n\n\tif (!(presets == null)) {\n\t\tlog(`Migration 0.4.1 - Launching presets data migration...`);\n\n\t\ttry {\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\n\t\t\tlog(`Migration 0.4.1 - updating template presets...`);\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v041.json', {\n\t\t\t\toverwrite: true,\n\t\t\t});\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V041);\n\t\t\tlog(`Migration 0.4.1 - Migration successful!`);\n\t\t} catch (e) {\n\t\t\terror(`Migration 0.4.1 - Migration failed.`);\n\t\t\terror(e);\n\t\t}\n\t}\n}\n\nasync function updatePresetsV043() {\n\tvar presets = game.settings.get('tokenmagic', 'presets');\n\n\tif (!(presets == null)) {\n\t\tlog(`Migration 0.4.3 - Launching presets data migration...`);\n\n\t\ttry {\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\n\t\t\tlog(`Migration 0.4.3 - updating template presets...`);\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v043.json', {\n\t\t\t\toverwrite: true,\n\t\t\t});\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V043);\n\t\t\tlog(`Migration 0.4.3 - Migration successful!`);\n\t\t} catch (e) {\n\t\t\terror(`Migration 0.4.3 - Migration failed.`);\n\t\t\terror(e);\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterCRT extends PIXI.filters.CRTFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.curvature = 1.0;\n\t\tthis.lineWidth = 1.0;\n\t\tthis.lineContrast = 0.25;\n\t\tthis.verticalLine = false;\n\t\tthis.noise = 0.08;\n\t\tthis.noiseSize = 1.0;\n\t\tthis.seed = 0;\n\t\tthis.vignetting = 0;\n\t\tthis.zOrder = 320;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n}\n","import { Anime } from '../Anime.js';\nimport './proto/FilterProto.js';\n\nexport class FilterRGBSplit extends PIXI.filters.RGBSplitFilter {\n\tconstructor(params) {\n\t\tsuper();\n\t\tthis.red = new Float32Array([-10, 0]);\n\t\tthis.green = new Float32Array([0, 10]);\n\t\tthis.blue = new Float32Array([0, 0]);\n\t\tthis.zOrder = 340;\n\t\tthis.animated = {};\n\t\tthis.setTMParams(params);\n\t\tif (!this.dummy) {\n\t\t\tthis.anime = new Anime(this);\n\t\t\tthis.normalizeTMParams();\n\t\t}\n\t}\n\n\tget redX() {\n\t\treturn this.uniforms.red[0];\n\t}\n\n\tset redX(value) {\n\t\tthis.uniforms.red[0] = value;\n\t}\n\n\tget redY() {\n\t\treturn this.uniforms.red[1];\n\t}\n\n\tset redY(value) {\n\t\tthis.uniforms.red[1] = value;\n\t}\n\n\tget greenX() {\n\t\treturn this.uniforms.green[0];\n\t}\n\n\tset greenX(value) {\n\t\tthis.uniforms.green[0] = value;\n\t}\n\n\tget greenY() {\n\t\treturn this.uniforms.green[1];\n\t}\n\n\tset greenY(value) {\n\t\tthis.uniforms.green[1] = value;\n\t}\n\n\tget blueX() {\n\t\treturn this.uniforms.blue[0];\n\t}\n\n\tset blueX(value) {\n\t\tthis.uniforms.blue[0] = value;\n\t}\n\n\tget blueY() {\n\t\treturn this.uniforms.blue[1];\n\t}\n\n\tset blueY(value) {\n\t\tthis.uniforms.blue[1] = value;\n\t}\n}\n","import { presets as defaultPresets, PresetsLibrary } from '../fx/presets/defaultpresets.js';\nimport { DataVersion } from '../migration/migration.js';\nimport { TokenMagic, isVideoDisabled, fixPath } from './tokenmagic.js';\nimport { dnd5eTemplates } from './autoTemplate/dnd5e.js';\nimport { pf2eTemplates } from './autoTemplate/pf2e.js';\nimport { witcherTemplates } from './autoTemplate/TheWitcherTRPG.js';\nimport { defaultOpacity, emptyPreset } from './constants.js';\n\nconst Magic = TokenMagic();\n\nexport class TokenMagicSettings extends FormApplication {\n\tconstructor(object = {}, options) {\n\t\tsuper(object, options);\n\t}\n\n\t/** @override */\n\tstatic get defaultOptions() {\n\t\treturn {\n\t\t\t...super.defaultOptions,\n\t\t\ttemplate: 'modules/tokenmagic/templates/settings/settings.html',\n\t\t\theight: 'auto',\n\t\t\ttitle: game.i18n.localize('TMFX.settings.autoTemplateSettings.dialog.title'),\n\t\t\twidth: 600,\n\t\t\tclasses: ['tokenmagic', 'settings'],\n\t\t\ttabs: [\n\t\t\t\t{\n\t\t\t\t\tnavSelector: '.tabs',\n\t\t\t\t\tcontentSelector: 'form',\n\t\t\t\t\tinitial: 'name',\n\t\t\t\t},\n\t\t\t],\n\t\t\tsubmitOnClose: false,\n\t\t};\n\t}\n\n\tstatic init() {\n\t\tconst menuAutoTemplateSettings = {\n\t\t\tkey: 'autoTemplateSettings',\n\t\t\tconfig: {\n\t\t\t\tname: game.i18n.localize('TMFX.settings.autoTemplateSettings.button.name'),\n\t\t\t\tlabel: game.i18n.localize('TMFX.settings.autoTemplateSettings.button.label'),\n\t\t\t\thint: game.i18n.localize('TMFX.settings.autoTemplateSettings.button.hint'),\n\t\t\t\ttype: TokenMagicSettings,\n\t\t\t\trestricted: true,\n\t\t\t},\n\t\t};\n\n\t\tconst settingAutoTemplateSettings = {\n\t\t\tkey: 'autoTemplateSettings',\n\t\t\tconfig: {\n\t\t\t\tname: game.i18n.localize('TMFX.settings.autoTemplateSettings.name'),\n\t\t\t\thint: game.i18n.localize('TMFX.settings.autoTemplateSettings.hint'),\n\t\t\t\tscope: 'world',\n\t\t\t\tconfig: false,\n\t\t\t\tdefault: {},\n\t\t\t\ttype: Object,\n\t\t\t},\n\t\t};\n\n\t\tconst templates = this.getSystemTemplates();\n\t\tlet hasAutoTemplates = !!templates;\n\t\tif (templates) {\n\t\t\tgame.settings.registerMenu('tokenmagic', menuAutoTemplateSettings.key, menuAutoTemplateSettings.config);\n\t\t\tgame.settings.register(\n\t\t\t\t'tokenmagic',\n\t\t\t\tsettingAutoTemplateSettings.key,\n\t\t\t\tmergeObject(\n\t\t\t\t\tsettingAutoTemplateSettings.config,\n\t\t\t\t\t{\n\t\t\t\t\t\tdefault: templates.constructor.defaultConfiguration,\n\t\t\t\t\t},\n\t\t\t\t\ttrue,\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tgame.settings.register('tokenmagic', 'autoTemplateEnabled', {\n\t\t\tname: game.i18n.localize('TMFX.settings.autoTemplateEnabled.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.autoTemplateEnabled.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: hasAutoTemplates,\n\t\t\tdefault: hasAutoTemplates,\n\t\t\ttype: Boolean,\n\t\t\tonChange: (value) => TokenMagicSettings.configureAutoTemplate(value),\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'defaultTemplateOnHover', {\n\t\t\tname: game.i18n.localize('TMFX.settings.defaultTemplateOnHover.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.defaultTemplateOnHover.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: hasAutoTemplates,\n\t\t\ttype: Boolean,\n\t\t\tonChange: () => window.location.reload(),\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'autohideTemplateElements', {\n\t\t\tname: game.i18n.localize('TMFX.settings.autohideTemplateElements.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.autohideTemplateElements.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t\tonChange: () => window.location.reload(),\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'useAdditivePadding', {\n\t\t\tname: game.i18n.localize('TMFX.settings.useMaxPadding.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.useMaxPadding.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'minPadding', {\n\t\t\tname: game.i18n.localize('TMFX.settings.minPadding.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.minPadding.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: 50,\n\t\t\ttype: Number,\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'fxPlayerPermission', {\n\t\t\tname: game.i18n.localize('TMFX.settings.fxPlayerPermission.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.fxPlayerPermission.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'importOverwrite', {\n\t\t\tname: game.i18n.localize('TMFX.settings.importOverwrite.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.importOverwrite.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'useZOrder', {\n\t\t\tname: game.i18n.localize('TMFX.settings.useZOrder.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.useZOrder.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'disableAnimations', {\n\t\t\tname: game.i18n.localize('TMFX.settings.disableAnimations.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.disableAnimations.hint'),\n\t\t\tscope: 'client',\n\t\t\tconfig: true,\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tonChange: () => window.location.reload(),\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'disableCaching', {\n\t\t\tname: game.i18n.localize('TMFX.settings.disableCaching.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.disableCaching.hint'),\n\t\t\tscope: 'client',\n\t\t\tconfig: true,\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'disableVideo', {\n\t\t\tname: game.i18n.localize('TMFX.settings.disableVideo.name'),\n\t\t\thint: game.i18n.localize('TMFX.settings.disableVideo.hint'),\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tonChange: () => window.location.reload(),\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'presets', {\n\t\t\tname: 'Token Magic FX presets',\n\t\t\thint: 'Token Magic FX presets',\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\tdefault: defaultPresets,\n\t\t\ttype: Object,\n\t\t});\n\n\t\tgame.settings.register('tokenmagic', 'migration', {\n\t\t\tname: 'TMFX Data Version',\n\t\t\thint: 'TMFX Data Version',\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\tdefault: DataVersion.ARCHAIC,\n\t\t\ttype: String,\n\t\t});\n\n\t\tloadTemplates([\n\t\t\t'modules/tokenmagic/templates/settings/settings.html',\n\t\t\t'modules/tokenmagic/templates/settings/dnd5e/categories.html',\n\t\t\t'modules/tokenmagic/templates/settings/dnd5e/overrides.html',\n\t\t\t'modules/tokenmagic/templates/settings/pf2e/categories.html',\n\t\t\t'modules/tokenmagic/templates/settings/pf2e/overrides.html',\n\t\t\t'modules/tokenmagic/templates/settings/TheWitcherTRPG/categories.html',\n\t\t\t'modules/tokenmagic/templates/settings/TheWitcherTRPG/overrides.html',\n\t\t]);\n\t}\n\n\tstatic configureAutoTemplate(enabled = false) {\n\t\tthis.getSystemTemplates()?.configure(enabled);\n\t}\n\n\tstatic getSystemTemplates() {\n\t\tswitch (game.system.id) {\n\t\t\tcase 'dnd5e':\n\t\t\t\treturn dnd5eTemplates;\n\t\t\tcase 'pf2e':\n\t\t\t\treturn pf2eTemplates;\n\t\t\tcase 'TheWitcherTRPG':\n\t\t\t\treturn witcherTemplates;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetSettingsData() {\n\t\tlet settingsData = {\n\t\t\tautoTemplateEnable: game.settings.get('tokenmagic', 'autoTemplateEnabled'),\n\t\t};\n\t\tif (TokenMagicSettings.getSystemTemplates()) {\n\t\t\tsettingsData['autoTemplateSettings'] = game.settings.get('tokenmagic', 'autoTemplateSettings');\n\t\t}\n\t\treturn settingsData;\n\t}\n\n\t/** @override */\n\tgetData() {\n\t\tlet data = super.getData();\n\t\tdata.hasAutoTemplates = false;\n\t\tdata.emptyPreset = emptyPreset;\n\t\tconst templates = TokenMagicSettings.getSystemTemplates();\n\t\tif (templates) {\n\t\t\tmergeObject(data, templates.getData());\n\t\t}\n\n\t\tdata.presets = Magic.getPresets(PresetsLibrary.TEMPLATE).sort(function (a, b) {\n\t\t\tif (a.name < b.name) return -1;\n\t\t\tif (a.name > b.name) return 1;\n\t\t\treturn 0;\n\t\t});\n\t\tdata.system = { id: game.system.id, title: game.system.title };\n\t\tdata.settings = this.getSettingsData();\n\t\tdata.submitText = game.i18n.localize('TMFX.save');\n\t\treturn data;\n\t}\n\n\t/** @override */\n\tasync _updateObject(_, formData) {\n\t\tconst data = expandObject(formData);\n\t\tfor (let [key, value] of Object.entries(data)) {\n\t\t\tif (key === 'autoTemplateSettings' && value.overrides) {\n\t\t\t\tconst compacted = {};\n\t\t\t\tObject.values(value.overrides).forEach((val, idx) => (compacted[idx] = val));\n\t\t\t\tvalue.overrides = compacted;\n\t\t\t}\n\t\t\tawait game.settings.set('tokenmagic', key, value);\n\t\t}\n\t}\n\n\t/** @override */\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\thtml.find('button.add-override').click(this._onAddOverride.bind(this));\n\t\thtml.find('button.remove-override').click(this._onRemoveOverride.bind(this));\n\t}\n\n\tasync _onAddOverride(event) {\n\t\tevent.preventDefault();\n\t\tlet idx = 0;\n\t\tconst entries = event.target.closest('div.tab').querySelectorAll('div.override-entry');\n\t\tconst last = entries[entries.length - 1];\n\t\tif (last) {\n\t\t\tidx = last.dataset.idx + 1;\n\t\t}\n\t\tlet updateData = {};\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.target`] = '';\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.opacity`] = defaultOpacity;\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.tint`] = null;\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.preset`] = emptyPreset;\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.texture`] = null;\n\t\tawait this._onSubmit(event, { updateData: updateData, preventClose: true });\n\t\tthis.render();\n\t}\n\n\tasync _onRemoveOverride(event) {\n\t\tevent.preventDefault();\n\t\tlet idx = event.target.dataset.idx;\n\t\tconst el = event.target.closest(`div[data-idx=\"${idx}\"]`);\n\t\tif (!el) {\n\t\t\treturn true;\n\t\t}\n\t\tel.remove();\n\t\tawait this._onSubmit(event, { preventClose: true });\n\t\tthis.render();\n\t}\n}\n\nHooks.once('init', () => {\n\t// Extracted from https://github.com/leapfrogtechnology/just-handlebars-helpers/\n\tHandlebars.registerHelper('concat', function (...params) {\n\t\t// Ignore the object appended by handlebars.\n\t\tif (typeof params[params.length - 1] === 'object') {\n\t\t\tparams.pop();\n\t\t}\n\n\t\treturn params.join('');\n\t});\n\tTokenMagicSettings.init();\n\tTokenMagicSettings.configureAutoTemplate(game.settings.get('tokenmagic', 'autoTemplateEnabled'));\n\n\tconst wmtdUpdate = async function (wrapped, ...args) {\n\t\tconst [document] = args;\n\t\tlet preset, hasPresetData;\n\n\t\tconst tex = document.texture ?? '';\n\t\tconst hasTexture = !!document.texture;\n\t\tconst opt = document.flags?.tokenmagic?.options ?? null;\n\t\tif (!opt) {\n\t\t\tpreset = document['flags.tokenmagic.templateData.preset'];\n\t\t}\n\t\thasPresetData = !!preset;\n\n\t\t//const hasOpt = data[\"flags.tokenmagic\"]?.options ?? null;\n\n\t\tif (hasTexture) {\n\t\t\tdocument.texture = fixPath(document.texture);\n\t\t}\n\n\t\tif (opt == null) {\n\t\t\tif (hasPresetData && preset !== emptyPreset) {\n\t\t\t\tlet defaultTexture = Magic._getPresetTemplateDefaultTexture(preset);\n\t\t\t\tif (!(defaultTexture == null)) {\n\t\t\t\t\tif (tex === '' || tex.startsWith('modules/tokenmagic/fx/assets/templates/'))\n\t\t\t\t\t\tdocument.texture = defaultTexture;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\thasTexture &&\n\t\t\t\ttex.startsWith('modules/tokenmagic/fx/assets/templates/') &&\n\t\t\t\thasPresetData &&\n\t\t\t\tpreset === emptyPreset\n\t\t\t) {\n\t\t\t\tdocument.texture = '';\n\t\t\t}\n\t\t}\n\n\t\treturn await wrapped(...args);\n\t};\n\n\tconst wmtDraw = async function (wrapped, ...args) {\n\t\tif (this.document.texture) {\n\t\t\tthis.document.texture = fixPath(this.document.texture);\n\t\t}\n\t\tconst retVal = await wrapped(...args);\n\t\tthis.template.alpha = this.document.getFlag('tokenmagic', 'templateData')?.opacity ?? 1;\n\t\treturn retVal;\n\t};\n\n\tlet wmtApplyRenderFlags;\n\tlet wmtApplyRenderFlagsType;\n\n\tlet wmtRefreshTemplate;\n\tlet wmtRefreshTemplateType;\n\n\tif (!isVideoDisabled()) {\n\t\tconst toRadians = Math.toRadians;\n\n\t\twmtApplyRenderFlagsType = 'WRAPPER';\n\n\t\twmtApplyRenderFlags = function (wrapped, ...args) {\n\t\t\tconst [flags] = args;\n\t\t\tif (flags?.refreshShape) flags.refreshShape = this.template && !this.template._destroyed;\n\t\t\treturn wrapped(...args);\n\t\t};\n\n\t\t/* ------------------------------------------------------------------------------------ */\n\n\t\twmtRefreshTemplateType = 'OVERRIDE';\n\n\t\t/**\n\t\t *\n\t\t * @return {wmtRefreshTemplate}\n\t\t */\n\t\twmtRefreshTemplate = function () {\n\t\t\tconst t = this.template.clear();\n\t\t\tif (!this.isVisible) return;\n\n\t\t\t// Draw the Template outline\n\t\t\tt.lineStyle(this._borderThickness, this.borderColor, 0.75).beginFill(0x000000, 0.0);\n\n\t\t\t// Fill Color or Texture\n\t\t\tif (this.texture) {\n\t\t\t\tlet mat = PIXI.Matrix.IDENTITY;\n\t\t\t\t// rectangle\n\t\t\t\tif (this.shape.width && this.shape.height)\n\t\t\t\t\tmat.scale(this.shape.width / this.texture.width, this.shape.height / this.texture.height);\n\t\t\t\telse if (this.shape.radius) {\n\t\t\t\t\tmat.scale((this.shape.radius * 2) / this.texture.height, (this.shape.radius * 2) / this.texture.width);\n\t\t\t\t\t// Circle center is texture start...\n\t\t\t\t\tmat.translate(-this.shape.radius, -this.shape.radius);\n\t\t\t\t} else if (this.document.t === 'ray') {\n\t\t\t\t\tconst d = canvas.dimensions,\n\t\t\t\t\t\theight = (this.document.width * d.size) / d.distance,\n\t\t\t\t\t\twidth = (this.document.distance * d.size) / d.distance;\n\t\t\t\t\tmat.scale(width / this.texture.width, height / this.texture.height);\n\t\t\t\t\tmat.translate(0, -height * 0.5);\n\n\t\t\t\t\tmat.rotate(toRadians(this.document.direction));\n\t\t\t\t} else {\n\t\t\t\t\t// cone\n\t\t\t\t\tconst d = canvas.dimensions;\n\n\t\t\t\t\t// Extract and prepare data\n\t\t\t\t\tlet { direction, distance, angle } = this.document;\n\t\t\t\t\tdistance *= d.size / d.distance;\n\t\t\t\t\tdirection = Math.toRadians(direction);\n\t\t\t\t\tconst width = (this.document.distance * d.size) / d.distance;\n\n\t\t\t\t\tconst angles = [angle / -2, angle / 2];\n\t\t\t\t\tdistance = distance / Math.cos(Math.toRadians(angle / 2));\n\n\t\t\t\t\t// Get the cone shape as a polygon\n\t\t\t\t\tconst rays = angles.map((a) => Ray.fromAngle(0, 0, direction + Math.toRadians(a), distance + 1));\n\t\t\t\t\tconst height = Math.sqrt(\n\t\t\t\t\t\t(rays[0].B.x - rays[1].B.x) * (rays[0].B.x - rays[1].B.x) +\n\t\t\t\t\t\t\t(rays[0].B.y - rays[1].B.y) * (rays[0].B.y - rays[1].B.y)\n\t\t\t\t\t);\n\t\t\t\t\tmat.scale(width / this.texture.width, height / this.texture.height);\n\t\t\t\t\tmat.translate(0, -height / 2);\n\t\t\t\t\tmat.rotate(toRadians(this.document.direction));\n\t\t\t\t}\n\n\t\t\t\tt.beginTextureFill({\n\t\t\t\t\ttexture: this.texture,\n\t\t\t\t\tmatrix: mat,\n\t\t\t\t\talpha: 1.0,\n\t\t\t\t});\n\t\t\t\tconst source = getProperty(this.texture, 'baseTexture.resource.source');\n\t\t\t\tif (source && source.tagName === 'VIDEO') {\n\t\t\t\t\tsource.loop = true;\n\t\t\t\t\tsource.muted = true;\n\t\t\t\t\tgame.video.play(source);\n\t\t\t\t}\n\t\t\t} else t.beginFill(0x000000, 0.0);\n\n\t\t\t// Draw the shape\n\t\t\tt.drawShape(this.shape);\n\n\t\t\t// Draw origin and destination points\n\t\t\tt.lineStyle(this._borderThickness, 0x000000)\n\t\t\t\t.beginFill(0x000000, 0.5)\n\t\t\t\t.drawCircle(0, 0, 6)\n\t\t\t\t.drawCircle(this.ray.dx, this.ray.dy, 6);\n\n\t\t\t// Update visibility\n\t\t\tthis.controlIcon.visible = !!this.layer.active;\n\t\t\tthis.controlIcon.border.visible = !!this.hover;\n\t\t\tconst alpha = this.document.getFlag('tokenmagic', 'templateData')?.opacity ?? 1;\n\t\t\tt.alpha = this.hover ? alpha / 1.25 : alpha;\n\n\t\t\treturn this;\n\t\t};\n\n\t\t/* ------------------------------------------------------------------------------------ */\n\t}\n\n\tif (game.settings.get('tokenmagic', 'autohideTemplateElements')) {\n\t\t/**\n\t\t *\n\t\t * @param wrapped\n\t\t * @param args\n\t\t * @return {*}\n\t\t */\n\t\tconst autohideTemplateElements = function (wrapped, ...args) {\n\t\t\t// Save texture and border thickness\n\t\t\tconst texture = this.texture;\n\t\t\tconst borderThickness = this._borderThickness;\n\n\t\t\t// Hide template texture while moving\n\t\t\tif (this._original || this.parent === canvas.templates.preview) {\n\t\t\t\tthis.texture = null;\n\t\t\t}\n\n\t\t\t// Show border outline only on hover if the template is textured\n\t\t\tif (this.texture && this.texture !== '' && !this._hover) {\n\t\t\t\tthis._borderThickness = 0;\n\t\t\t}\n\n\t\t\tconst retVal = wrapped(...args);\n\n\t\t\t// Restore texture and border thickness\n\t\t\tthis.texture = texture;\n\t\t\tthis._borderThickness = borderThickness;\n\n\t\t\t{\n\t\t\t\t// Show the origin/destination points and ruler text only on hover or while creating but not while moving\n\t\t\t\tconst template = this._original ?? this;\n\t\t\t\tconst show = !this._original && (this._hover || this.parent === canvas.templates.preview);\n\n\t\t\t\tif (!show && template.template?.geometry) {\n\t\t\t\t\t// Hide origin and destination points, i.e., hide everything except the template shape\n\t\t\t\t\tfor (const document of template.template.geometry.graphicsData) {\n\t\t\t\t\t\tif (document.shape !== template.shape) {\n\t\t\t\t\t\t\tdocument.fillStyle.visible = false;\n\t\t\t\t\t\t\tdocument.lineStyle.visible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttemplate.template.geometry.invalidate();\n\t\t\t\t}\n\n\t\t\t\tif (template.ruler) template.ruler.renderable = show;\n\t\t\t\tif (template.controlIcon) template.controlIcon.renderable = template.owner;\n\t\t\t\tif (template.handle) template.handle.renderable = template.owner;\n\t\t\t}\n\t\t\treturn retVal;\n\t\t};\n\n\t\t/* ------------------------------------------------------------------------------------ */\n\n\t\tif (wmtApplyRenderFlags) {\n\t\t\tconst _wmtApplyRenderFlags = wmtApplyRenderFlags;\n\t\t\twmtApplyRenderFlags = function () {\n\t\t\t\treturn autohideTemplateElements.call(this, _wmtApplyRenderFlags.bind(this), ...arguments);\n\t\t\t};\n\t\t} else {\n\t\t\twmtApplyRenderFlagsType = 'WRAPPER';\n\t\t\twmtApplyRenderFlags = autohideTemplateElements;\n\t\t}\n\t}\n\n\tif (game.settings.get('tokenmagic', 'defaultTemplateOnHover')) {\n\t\tHooks.on('canvasReady', () => {\n\t\t\tcanvas.stage.on('mousemove', (event) => {\n\t\t\t\tconst { x: mx, y: my } = event.data.getLocalPosition(canvas.templates);\n\t\t\t\tfor (const template of canvas.templates.placeables) {\n\t\t\t\t\tconst hl = canvas.grid.getHighlightLayer(`MeasuredTemplate.${template.id}`);\n\t\t\t\t\tconst opacity = template.document.getFlag('tokenmagic', 'templateData')?.opacity ?? 1;\n\t\t\t\t\tif (template.texture && template.texture !== '') {\n\t\t\t\t\t\tconst { x: cx, y: cy } = template.center;\n\t\t\t\t\t\tconst mouseover = template.shape?.contains(mx - cx, my - cy);\n\t\t\t\t\t\thl.renderable = mouseover;\n\t\t\t\t\t\ttemplate.template.alpha = (mouseover ? 0.5 : 1.0) * opacity;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thl.renderable = true;\n\t\t\t\t\t\ttemplate.template.alpha = opacity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tif (game.modules.get('lib-wrapper')?.active) {\n\t\tlibWrapper.register('tokenmagic', 'MeasuredTemplateDocument.prototype.update', wmtdUpdate, 'WRAPPER');\n\t\tlibWrapper.register('tokenmagic', 'MeasuredTemplate.prototype._draw', wmtDraw, 'WRAPPER');\n\t\tif (wmtApplyRenderFlags)\n\t\t\tlibWrapper.register(\n\t\t\t\t'tokenmagic',\n\t\t\t\t'MeasuredTemplate.prototype._applyRenderFlags',\n\t\t\t\twmtApplyRenderFlags,\n\t\t\t\twmtApplyRenderFlagsType\n\t\t\t);\n\t\tif (wmtRefreshTemplate)\n\t\t\tlibWrapper.register(\n\t\t\t\t'tokenmagic',\n\t\t\t\t'MeasuredTemplate.prototype._refreshTemplate',\n\t\t\t\twmtRefreshTemplate,\n\t\t\t\twmtRefreshTemplateType\n\t\t\t);\n\t} else {\n\t\tconst cmtdUpdate = MeasuredTemplateDocument.prototype.update;\n\t\tMeasuredTemplateDocument.prototype.update = function () {\n\t\t\treturn wmtdUpdate.call(this, cmtdUpdate.bind(this), ...arguments);\n\t\t};\n\t\tconst cmtDraw = MeasuredTemplate.prototype._draw;\n\t\tMeasuredTemplate.prototype._draw = function () {\n\t\t\treturn wmtDraw.call(this, cmtDraw.bind(this), ...arguments);\n\t\t};\n\n\t\tif (wmtApplyRenderFlags) {\n\t\t\tif (wmtApplyRenderFlagsType && wmtApplyRenderFlagsType !== 'OVERRIDE') {\n\t\t\t\tconst cmtApplyRenderFlags = MeasuredTemplate.prototype._applyRenderFlags;\n\t\t\t\tMeasuredTemplate.prototype._applyRenderFlags = function () {\n\t\t\t\t\treturn wmtApplyRenderFlags.call(this, cmtApplyRenderFlags.bind(this), ...arguments);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tMeasuredTemplate.prototype._applyRenderFlags = wmtApplyRenderFlags;\n\t\t\t}\n\t\t}\n\n\t\tif (wmtRefreshTemplate) {\n\t\t\tif (wmtRefreshTemplateType && wmtRefreshTemplateType !== 'OVERRIDE') {\n\t\t\t\tconst cmtRefreshTemplate = MeasuredTemplate.prototype._refreshTemplate;\n\t\t\t\tMeasuredTemplate.prototype._refreshTemplate = function () {\n\t\t\t\t\treturn wmtRefreshTemplate.call(this, cmtRefreshTemplate.bind(this), ...arguments);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tMeasuredTemplate.prototype._refreshTemplate = wmtRefreshTemplate;\n\t\t\t}\n\t\t}\n\t}\n});\n","import { defaultOpacity, emptyPreset } from '../constants.js';\n\nexport class AutoTemplateDND5E {\n\tstatic get defaultConfiguration() {\n\t\tconst defaultConfig = {\n\t\t\tcategories: {},\n\t\t\toverrides: {\n\t\t\t\t0: {\n\t\t\t\t\ttarget: 'Stinking Cloud',\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t\ttint: '#00a80b',\n\t\t\t\t\tpreset: 'Smoky Area',\n\t\t\t\t\ttexture: null,\n\t\t\t\t},\n\t\t\t\t1: {\n\t\t\t\t\ttarget: 'Web',\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t\ttint: '#808080',\n\t\t\t\t\tpreset: 'Spider Web 2',\n\t\t\t\t\ttexture: null,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tObject.keys(CONFIG.DND5E.damageTypes).forEach((dmgType) => {\n\t\t\tif (defaultConfig.categories[dmgType] == undefined) {\n\t\t\t\tconst config = { opacity: defaultOpacity, tint: null };\n\t\t\t\tswitch (dmgType.toLowerCase()) {\n\t\t\t\t\tcase 'acid':\n\t\t\t\t\t\tconfig.tint = '#2d8000';\n\t\t\t\t\t\tconfig.opacity = 0.6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cold':\n\t\t\t\t\t\tconfig.tint = '#47b3ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'necrotic':\n\t\t\t\t\t\tconfig.tint = '#502673';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'poison':\n\t\t\t\t\t\tconfig.tint = '#00a80b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'psychic':\n\t\t\t\t\t\tconfig.tint = '#8000ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'thunder':\n\t\t\t\t\t\tconfig.tint = '#0060ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefaultConfig.categories[dmgType] = config;\n\t\t\t}\n\t\t\tObject.keys(CONFIG.MeasuredTemplate.types).forEach((tplType) => {\n\t\t\t\tconst config = { preset: emptyPreset, texture: null };\n\t\t\t\tswitch (dmgType.toLowerCase()) {\n\t\t\t\t\tcase 'acid':\n\t\t\t\t\t\tconfig.preset = 'Watery Surface 2';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cold':\n\t\t\t\t\t\tconfig.preset = 'Thick Fog';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'fire':\n\t\t\t\t\t\tconfig.preset = 'Flames';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'force':\n\t\t\t\t\t\tconfig.preset = 'Waves 3';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'lightning':\n\t\t\t\t\t\tconfig.preset = 'Shock';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'necrotic':\n\t\t\t\t\t\tconfig.preset = 'Smoke Filaments';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'poison':\n\t\t\t\t\t\tconfig.preset = 'Smoky Area';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'psychic':\n\t\t\t\t\t\tconfig.preset = 'Classic Rays';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'radiant':\n\t\t\t\t\t\tconfig.preset = 'Annihilating Rays';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'thunder':\n\t\t\t\t\t\tconfig.preset = 'Waves';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefaultConfig.categories[dmgType][tplType] = config;\n\t\t\t});\n\t\t});\n\n\t\treturn defaultConfig;\n\t}\n\n\tconstructor() {\n\t\tthis._enabled = false;\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tconfigure(enabled = false) {\n\t\tif (game.system.id !== 'dnd5e') return;\n\n\t\tif (!enabled) {\n\t\t\tif (this._enabled) {\n\t\t\t\tif (game.modules.get('lib-wrapper')?.active) {\n\t\t\t\t\tlibWrapper.unregister('tokenmagic', 'game.dnd5e.canvas.AbilityTemplate.fromItem');\n\t\t\t\t} else {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._enabled) {\n\t\t\t\tif (game.modules.get('lib-wrapper')?.active) {\n\t\t\t\t\tlibWrapper.register('tokenmagic', 'game.dnd5e.canvas.AbilityTemplate.fromItem', fromItem, 'WRAPPER');\n\t\t\t\t} else {\n\t\t\t\t\tconst origFromItem = game.dnd5e.canvas.AbilityTemplate.fromItem;\n\t\t\t\t\tgame.dnd5e.canvas.AbilityTemplate.fromItem = function () {\n\t\t\t\t\t\treturn fromItem.call(this, origFromItem.bind(this), ...arguments);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._enabled = enabled;\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\thasAutoTemplates: true,\n\t\t\tdmgTypes: CONFIG.DND5E.damageTypes,\n\t\t\ttemplateTypes: CONFIG.MeasuredTemplate.types,\n\t\t};\n\t}\n}\n\nfunction fromConfig(config, template) {\n\tconst o = { tokenmagic: { options: {} } };\n\tif (config.preset && config.preset !== '' && config.preset !== emptyPreset) {\n\t\to.tokenmagic.options.tmfxPreset = config.preset;\n\t}\n\tif (config.texture && config.texture !== '') {\n\t\to.tokenmagic.options.tmfxTexture = config.texture;\n\t}\n\tif (config.tint && config.tint !== '') {\n\t\to.tokenmagic.options.tmfxTint = config.tint;\n\t}\n\to.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n\ttemplate.document.updateSource({ flags: { tokenmagic: o.tokenmagic } });\n}\n\nfunction fromOverrides(overrides = [], item, template) {\n\tlet configs = overrides.filter((el) => el.target.toLowerCase() === item.name.toLowerCase());\n\tif (configs.length === 0) {\n\t\treturn false;\n\t}\n\t// if there are multiple overrides for the same item, the random one is chosen\n\tlet config = configs[Math.floor(Math.random() * configs.length)];\n\tfromConfig(config, template);\n\treturn true;\n}\n\nfunction fromCategories(categories = {}, item, template) {\n\tif (!item.hasDamage) {\n\t\treturn false;\n\t}\n\n\tlet config, dmgSettings;\n\n\t// some items/spells have multiple damage types\n\t// this loop looks over all the types until it finds one with a valid fx preset\n\tfor (const [_, dmgType] of item.system.damage.parts) {\n\t\tdmgSettings = categories[dmgType] || {};\n\t\tconfig = dmgSettings[template.document.t];\n\n\t\tif (config && config.preset !== emptyPreset) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!config) {\n\t\treturn false;\n\t}\n\tfromConfig(mergeObject(config, { opacity: dmgSettings.opacity, tint: dmgSettings.tint }, true, true), template);\n\treturn true;\n}\n\nfunction fromItem(wrapped, ...args) {\n\tconst [item] = args;\n\tconst template = wrapped(...args);\n\tif (!template) {\n\t\treturn template;\n\t}\n\tlet hasPreset = template.hasOwnProperty('tmfxPreset');\n\tif (hasPreset) {\n\t\treturn template;\n\t}\n\tconst settings = game.settings.get('tokenmagic', 'autoTemplateSettings');\n\tlet updated = settings.overrides ? fromOverrides(Object.values(settings.overrides), item, template) : false;\n\tif (!updated) {\n\t\tfromCategories(settings.categories, item, template);\n\t}\n\treturn template;\n}\n\nexport const dnd5eTemplates = new AutoTemplateDND5E();\n","import { defaultOpacity, emptyPreset } from '../constants.js';\n\nexport class AutoTemplatePF2E {\n\tstatic get defaultConfiguration() {\n\t\tconst defaultConfig = {\n\t\t\tcategories: {},\n\t\t\toverrides: {\n\t\t\t\t0: {\n\t\t\t\t\ttarget: 'Stinking Cloud',\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t\ttint: '#00a80b',\n\t\t\t\t\tpreset: 'Smoky Area',\n\t\t\t\t\ttexture: null,\n\t\t\t\t},\n\t\t\t\t1: {\n\t\t\t\t\ttarget: 'Sanguine Mist',\n\t\t\t\t\topacity: 0.6,\n\t\t\t\t\ttint: '#c41212',\n\t\t\t\t\tpreset: 'Smoky Area',\n\t\t\t\t},\n\t\t\t\t2: {\n\t\t\t\t\ttarget: 'Web',\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t\ttint: '#808080',\n\t\t\t\t\tpreset: 'Spider Web 2',\n\t\t\t\t\ttexture: null,\n\t\t\t\t},\n\t\t\t\t3: {\n\t\t\t\t\ttarget: 'Incendiary Aura',\n\t\t\t\t\topacity: 0.2,\n\t\t\t\t\ttint: '#b12910',\n\t\t\t\t\tpreset: 'Smoke Filaments',\n\t\t\t\t\ttexture: null,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tObject.keys(CONFIG.PF2E.damageTraits).forEach((dmgType) => {\n\t\t\tif (defaultConfig.categories[dmgType] == undefined) {\n\t\t\t\tconst config = { opacity: defaultOpacity, tint: null };\n\t\t\t\tswitch (dmgType.toLowerCase()) {\n\t\t\t\t\tcase 'acid':\n\t\t\t\t\t\tconfig.tint = '#2d8000';\n\t\t\t\t\t\tconfig.opacity = 0.6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cold':\n\t\t\t\t\t\tconfig.tint = '#47b3ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'electricity':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'fire':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'force':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mental':\n\t\t\t\t\t\tconfig.tint = '#8000ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'negative':\n\t\t\t\t\t\tconfig.tint = '#502673';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'poison':\n\t\t\t\t\t\tconfig.tint = '#00a80b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'positive':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'sonic':\n\t\t\t\t\t\tconfig.tint = '#0060ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefaultConfig.categories[dmgType] = config;\n\t\t\t}\n\t\t\tObject.keys(CONFIG.MeasuredTemplate.types).forEach((tplType) => {\n\t\t\t\tconst config = { preset: emptyPreset, texture: null };\n\t\t\t\tswitch (dmgType.toLowerCase()) {\n\t\t\t\t\tcase 'acid':\n\t\t\t\t\t\tconfig.preset = 'Watery Surface 2';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cold':\n\t\t\t\t\t\tconfig.preset = 'Thick Fog';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'electricity':\n\t\t\t\t\t\tconfig.preset = 'Shock';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'fire':\n\t\t\t\t\t\tconfig.preset = 'Flames';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'force':\n\t\t\t\t\t\tconfig.preset = 'Waves 3';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mental':\n\t\t\t\t\t\tconfig.preset = 'Classic Rays';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'negative':\n\t\t\t\t\t\tconfig.preset = 'Smoke Filaments';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'poison':\n\t\t\t\t\t\tconfig.preset = 'Smoky Area';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'positive':\n\t\t\t\t\t\tconfig.preset = 'Annihilating Rays';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'sonic':\n\t\t\t\t\t\tconfig.preset = 'Waves';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefaultConfig.categories[dmgType][tplType] = config;\n\t\t\t});\n\t\t});\n\n\t\treturn defaultConfig;\n\t}\n\n\tconstructor() {\n\t\tthis._enabled = false;\n\t}\n\n\tconfigure(enabled = false) {\n\t\tif (game.system.id !== 'pf2e') return;\n\t\tthis._enabled = enabled;\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(value) {}\n\n\tgetData() {\n\t\treturn {\n\t\t\thasAutoTemplates: true,\n\t\t\tdmgTypes: CONFIG.PF2E.damageTraits,\n\t\t\ttemplateTypes: CONFIG.MeasuredTemplate.types,\n\t\t};\n\t}\n\n\tpreCreateMeasuredTemplate(template) {\n\t\tlet hasPreset = template.hasOwnProperty('tmfxPreset');\n\t\tif (hasPreset) {\n\t\t\treturn template;\n\t\t}\n\n\t\tconst origin = template.flags?.pf2e?.origin;\n\t\tconst settings = game.settings.get('tokenmagic', 'autoTemplateSettings');\n\t\tlet updated = settings.overrides ? fromOverrides(Object.values(settings.overrides), origin, template) : false;\n\t\tif (!updated) {\n\t\t\tfromCategories(settings.categories, origin, template);\n\t\t}\n\t\treturn template;\n\t}\n}\n\nfunction fromConfig(config, template) {\n\tconst o = { tokenmagic: { options: {} } };\n\tif (config.preset && config.preset !== '' && config.preset !== emptyPreset) {\n\t\to.tokenmagic.options.tmfxPreset = config.preset;\n\t}\n\tif (config.texture && config.texture !== '') {\n\t\to.tokenmagic.options.tmfxTexture = config.texture;\n\t}\n\tif (config.tint && config.tint !== '') {\n\t\to.tokenmagic.options.tmfxTint = config.tint;\n\t}\n\to.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n\ttemplate.updateSource({ flags: { tokenmagic: o.tokenmagic } });\n}\n\nfunction fromOverrides(overrides = [], origin, template) {\n\tconst { name, slug } = origin;\n\n\tlet configs = overrides.filter((el) => el.target.toLowerCase() === name?.toLowerCase());\n\tif (configs.length === 0) {\n\t\treturn false;\n\t}\n\t// if there are multiple overrides for the same item, the random one is chosen\n\tlet config = configs[Math.floor(Math.random() * configs.length)];\n\tfromConfig(config, template);\n\treturn true;\n}\n\nfunction fromCategories(categories = {}, origin, template) {\n\tif (!origin.traits?.length) {\n\t\treturn false;\n\t}\n\n\tlet config, dmgSettings;\n\n\t// some templates may have multiple traits\n\t// this loop looks over all of them until it finds one with a valid fx preset\n\tfor (const trait of origin.traits) {\n\t\tdmgSettings = categories[trait.toLowerCase()] || {};\n\t\tconfig = dmgSettings[template.t];\n\n\t\tif (config && config.preset !== emptyPreset) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!config) {\n\t\treturn false;\n\t}\n\tfromConfig(mergeObject(config, { opacity: dmgSettings.opacity, tint: dmgSettings.tint }, true, true), template);\n\treturn true;\n}\n\nexport const pf2eTemplates = new AutoTemplatePF2E();\n","import { defaultOpacity, emptyPreset } from '../constants.js';\n\nexport class AutoTemplateTheWitcherTRPG {\n\tstatic get defaultConfiguration() {\n\t\tconst defaultConfig = {\n\t\t\tcategories: {},\n\t\t\toverrides: {\n\t\t\t\t0: {\n\t\t\t\t\ttarget: 'Игни',\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t\ttint: '#00a80b',\n\t\t\t\t\tpreset: 'Flames',\n\t\t\t\t\ttexture: null,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tObject.keys(CONFIG.witcher.meleeSkills).forEach((meleeSkillType) => {\n\t\t\tif (defaultConfig.categories[meleeSkillType] == undefined) {\n\t\t\t\tconst config = { opacity: defaultOpacity, tint: null };\n\t\t\t\tswitch (meleeSkillType.toLowerCase()) {\n\t\t\t\t\tcase 'brawling':\n\t\t\t\t\t\tconfig.tint = '#2d8000';\n\t\t\t\t\t\tconfig.opacity = 0.6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'melee':\n\t\t\t\t\t\tconfig.tint = '#47b3ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'small blades':\n\t\t\t\t\t\tconfig.tint = '#502673';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'staff/spear':\n\t\t\t\t\t\tconfig.tint = '#00a80b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'swordsmanship':\n\t\t\t\t\t\tconfig.tint = '#8000ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'athletics':\n\t\t\t\t\t\tconfig.tint = '#0060ff';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefaultConfig.categories[meleeSkillType] = config;\n\t\t\t}\n\t\t\tObject.keys(CONFIG.MeasuredTemplate.types).forEach((tplType) => {\n\t\t\t\tconst config = { preset: emptyPreset, texture: null };\n\t\t\t\tswitch (meleeSkillType.toLowerCase()) {\n\t\t\t\t\tcase 'acid':\n\t\t\t\t\t\tconfig.preset = 'slashing';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cold':\n\t\t\t\t\t\tconfig.preset = 'bludgeoning';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'fire':\n\t\t\t\t\t\tconfig.preset = 'piercing';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'force':\n\t\t\t\t\t\tconfig.preset = 'elemental';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefaultConfig.categories[meleeSkillType][tplType] = config;\n\t\t\t});\n\t\t});\n\n\t\treturn defaultConfig;\n\t}\n\n\tconstructor() {\n\t\tthis._enabled = false;\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tconfigure(enabled = false) {\n\t\tif (game.system.id !== 'TheWitcherTRPG') return;\n\t\tthis._enabled = enabled;\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\thasAutoTemplates: true,\n\t\t\tmeleeSkills: CONFIG.witcher.meleeSkills,\n\t\t\ttemplateTypes: CONFIG.MeasuredTemplate.types,\n\t\t};\n\t}\n\n\tpreCreateMeasuredTemplate(template) {\n\t\tlet hasPreset = template.hasOwnProperty('tmfxPreset');\n\t\tif (hasPreset) {\n\t\t\treturn template;\n\t\t}\n\t\tconst settings = game.settings.get('tokenmagic', 'autoTemplateSettings');\n\t\tlet updated = settings.overrides ? fromOverrides(Object.values(settings.overrides), template) : false;\n\t\tif (!updated) {\n\t\t\tfromCategories(settings.categories, template);\n\t\t}\n\t}\n}\n\nfunction fromConfig(config, templateData) {\n\tconst o = { tokenmagic: { options: {} } };\n\tif (config.preset && config.preset !== '' && config.preset !== emptyPreset) {\n\t\to.tokenmagic.options.tmfxPreset = config.preset;\n\t}\n\tif (config.texture && config.texture !== '') {\n\t\to.tokenmagic.options.tmfxTexture = config.texture;\n\t}\n\tif (config.tint && config.tint !== '') {\n\t\to.tokenmagic.options.tmfxTint = config.tint;\n\t}\n\to.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n\tmergeObject(templateData, { 'flags.tokenmagic': o.tokenmagic });\n}\n\nfunction fromOverrides(overrides = [], templateData) {\n\tconst name = templateData.flags.witcher?.origin?.name;\n\tlet config = overrides.find((el) => el.target.toLowerCase() === name?.toLowerCase());\n\tif (!config) {\n\t\treturn false;\n\t}\n\tfromConfig(config, templateData);\n\treturn true;\n}\n\nfunction fromCategories(categories = {}, templateData) {\n\tconst traits = templateData.flags.witcher?.origin?.traits ?? [];\n\n\tlet config, dmgSettings;\n\tfor (const trait of traits) {\n\t\tdmgSettings = categories[trait] || {};\n\t\tconfig = dmgSettings[templateData.t];\n\n\t\tif (config && config.preset !== emptyPreset) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!config) {\n\t\treturn false;\n\t}\n\n\tfromConfig(mergeObject(config, { opacity: dmgSettings.opacity, tint: dmgSettings.tint }, true, true), templateData);\n\treturn true;\n}\n\nexport const witcherTemplates = new AutoTemplateTheWitcherTRPG();\n"],"names":["$c1844ae22deae2c0$export$b229f242afc35ae9","constructor","puppet","animated","animeId","randomID","frameTime","elapsedTime","loopElapsedTime","loops","internalLoops","ping","pauseBetweenElapsedTime","pauseBetween","shutdown","hasOwnProperty","Object","keys","length","initAnimatedInternals","addAnimation","rgbToValue","r","g","b","valueToRgb","bin","oscillation","elapsed","loopDuration","syncShift","val1","val2","func","isSync","xpi","twoPi","getSynchronizedTime","colOscillation","rgbValue1","rgbValue2","Math","floor","cos","_lastTime","getSynchronizedRotation","getPuppetsByParams","params","puppetArray","_animeMap","forEach","anime","id","placeableId","filterId","filterInternalId","push","set","_resumeAnimation","removeAnimation","delete","size","_suspendAnimation","removeAnimationByFilterId","resetAnimation","Map","_suspended","tick","canvas","app","ticker","lastTime","_frameTime","_prevTime","enabled","placeableImg","preComputation","animate","_activated","$97b1237a45b106ea$export$4876a704e2bf90fb","_detachFromTicker","_attachToTicker","activateAnimation","deactivateAnimation","add","PIXI","UPDATE_PRIORITY","LOW","remove","getAnimeMap","effect","initInternals","hasInternals","active","cycleCheck","animType","persistTerminatedEffect","autoDisableCheck","isPauseBetweenLoop","Infinity","pauseBetweenDuration","animeInfo","filterOwner","game","data","userId","doInit","flag","targetPlaceable","document","getFlag","animeinfo","values","tmFilterId","tmFilterInternalId","tmFilterEffect","tmFilterEffectValue","concat","duplicate","_TMFXsetAnimeFlag","autoDisable","autoDestroy","every","animeEffect","disableOrDestroy","placeable","window","TokenMagic","deleteFilters","filterType","updateFiltersByPlaceable","frametime","pauseBetweenCheck","pauseStart","pauseStartDuration","pauseStartElapsedTime","moveToward","colorOscillation","halfColorOscillation","PI","syncColorOscillation","cosOscillation","halfCosOscillation","sinOscillation","sin","halfSinOscillation","chaoticOscillation","random","chaosFactor","syncCosOscillation","syncSinOscillation","syncChaoticOscillation","rotation","computedRotation","clockWise","syncRotation","randomNumber","wantInteger","randomNumberPerLoop","_ringing","randomColor","randomColorPerLoop","move","speed","$165cdb672a404ae7$export$680af52575be3523","$df3c2368c99a47ef$export$5b94be486bc63144","PlaceableObject","prototype","TMFXaddFilters","paramsArray","replace","$97b1237a45b106ea$export$480e4c19201e4e74","addFilters","TMFXupdateFilters","TMFXaddUpdateFilters","addUpdateFilters","TMFXdeleteFilters","TMFXhasFilterType","hasFilterType","TMFXhasFilterId","hasFilterId","_TMFXsetFlag","$97b1237a45b106ea$export$ae4b89d79d01bd2b","$97b1237a45b106ea$export$24d33a6f4bffea69","$97b1237a45b106ea$export$157d7b8c087faa7b","SET_FLAG","setFlag","SET_ANIME_FLAG","_TMFXunsetFlag","unsetFlag","_TMFXunsetAnimeFlag","_TMFXgetSprite","_TMFXgetPlaceableType","$97b1237a45b106ea$export$f2f6f02affe07ab5","TOKEN","mesh","TILE","bg","TEMPLATE","template","DRAWING","hasText","text","shape","_TMFXgetPlaceablePadding","accPadding","filters","Array","filter","renderer","useMaxPadding","max","padding","_TMFXcheckSprite","_TMFXgetMaxFilterRank","sprite","map","f","rank","_TMFXsetRawFilters","isZOrder","$97b1237a45b106ea$export$222530a21fa4a417","insertFilter","maxRank","sort","a","zOrder","_TMFXunsetRawFilters","includes","embeddedName","NOT_SUPPORTED","Filter","setTMParams","gridPadding","boundsPadding","Point","currentPadding","recalculatePadding","dummy","foundry","utils","mergeObject","apply","filterManager","input","output","clear","applyFilter","rawPadding","originalPadding","$97b1237a45b106ea$export$a3e1d0865041c250","assignPlaceable","activateTransform","defineProperty","get","calculatePadding","getPlaceable","$97b1237a45b106ea$export$5008448b4c27fa2b","placeableType","getPlaceableType","width","height","target","ang","sticky","abs","gridSize","dimensions","x","y","scale","worldTransform","filterTransform","state","handleTransform","arguments","zIndex","normalizeTMParams","undefined","$2fe05231a5671b9f$export$1545cd3bbac349ce","AdjustmentFilter","gamma","saturation","contrast","brightness","red","green","blue","alpha","animating","$f1f93c519987627d$export$1efdcfd4cb16ac29","AsciiFilter","$4d02ab9fc92d64ef$export$e7bbc116d34f17bc","AdvancedBloomFilter","threshold","bloomScale","blur","quality","$a0121c7d42a6541e$export$d75528d01a211954","DotFilter","angle","grayscale","$463c3c68cacec30e$export$2d59c37be5e749a7","DisplacementFilter","displacementSpriteMask","spriteMaskPath","Sprite","from","$97b1237a45b106ea$export$3bebb302ab08af33","maskPath","wrapMode","WRAP_MODES","REPEAT","position","skew","pivot","anchorSet","transition","maskSpriteX","maskSpriteY","maskSpriteScaleX","maskSpriteScaleY","maskSpriteSkewX","maskSpriteSkewY","maskSpriteRotation","anchor","texture","baseTexture","value","maskSpritePivotX","maskSpritePivotY","transform","updateTransform","stage","uniforms","filterMatrix","calculateSpriteMatrix","maskMatrix","maskSprite","wt","c","d","$11a39396e5d8589b$export$2094be6cc744d7bc","OldFilmFilter","vignetting","noise","scratch","scratchDensity","seed","$8224c68d08cc6843$export$3ea2d657d9f1c2fe","GlowFilter","innerStrength","outerStrength","color","distance","$5b47cd38a348aa0c$export$c04494508d798797","OutlineFilter","blendMode","BLEND_MODES","NORMAL","thickness","$e609518cea3498ff$export$bcacf43f99a4009b","BevelFilter","lightColor","lightAlpha","shadowColor","shadowAlpha","$44fa44dcb802915a$var$_tempRect","Rectangle","$44fa44dcb802915a$export$c042bd0ff4d3251b","args","filterMatrixInverse","Matrix","sourceFrame","destinationFrame","activeState","TEMP_MATRIX","localBounds","getLocalBounds","copyFrom","invert","scaleX","hypot","scaleY","pad","tx","ty","prepend","parent","translate","$af3e207060dec559$export$93b7586d956c930e","$15c633ba44c21f75$export$c6eb01d07cc2e1e8","$23cf46a81404e9ef$export$f371526a665ed48","shadowOnly","_distance","_resolution","settings","FILTER_RESOLUTION","_tintFilter","_blurFilter","options","opt","defaults","kernels","resolution","Float32Array","shift","KawaseBlurFilter","_pixelSize","_updateShiftAndScale","getFilterTexture","returnFilterTexture","DEG_TO_RAD","rgb2hex","Color","toRgbArray","pixelSize","$0643f21646f7ec8f$export$f4e603bceef0312b","TwistFilter","radiusPercent","offset","autoFit","radius","$cb3547a2fc8518c6$export$767afdf6d9357594","ZoomBlurFilter","strength","innerRadiusPercent","center","innerRadius","$c669851898d451b5$export$680aca7df3d87905","blurXFilter","blurYFilter","_repeatEdgePixels","kernelSize","$c669851898d451b5$export$7c9ef492c949f871","repeatEdgePixels","clearMode","xStrength","yStrength","renderTarget","CLEAR_MODES","CLEAR","updatePadding","blurX","blurY","horizontal","passes","_quality","$c669851898d451b5$export$7a7fb9d9d09c33af","halfLength","ceil","vertSource","$c669851898d451b5$var$vertTemplate","blurLoop","i","toString","$c669851898d451b5$export$1b0dcf101eb6a1c9","kernel","$c669851898d451b5$var$GAUSSIAN_VALUES","fragSource","flip","flop","blend","bindAndClear","BLIT","uSampler","temp","shader","bind","geometry","draw","$207c96b47058a247$export$985076e41ccfd508","ShockwaveFilter","time","amplitude","wavelength","$cde275935cddb40a$export$c1f4d37fd591fb01","BulgePinchFilter","$95883fdd65c72900$export$1cb17df05ce7da23","$d6a2679398073147$export$228231731d6adde3","alphaTolerance","assign","$bede2880f372c574$export$9d94b322741e1813","$56e6cd37bbebe026$export$1992e0dceaf7be8","divisor","anchorX","anchorY","dimX","dimY","alphaDiscard","$18eb4ad38bd7a0da$export$cfdade87b894d58e","$2a5c150fd96450c6$export$f17580ed76af4408","density","$0ce59d28206e7914$export$562c6f8151c36426","$6ca08fc9db20c2ac$export$da3eec8748131849","$9d3851927d6e6827$export$196e9e3d20e4131","$5a0c0cac6edacb2c$export$22f86bc7a100befc","intensity","shaderFragment","intensityVal","$79b15a82cea589ba$export$9f7639465b88ec7f","$6c6b7c04c1d5fa2e$export$4eeb783ef7c17da8","inward","frequency","minIntensity","maxIntensity","$a6aa0c1b3663277e$export$a47a7c04f1bc8ac","$f77ec43cfcb845eb$export$fd0af22b8dd4eb46","fireBlend","$a8a639be76f4582e$export$73c22863fbcd15d3","$223f1247ddebb00e$export$60b593b6124d1ebc","$0e44befc9eaab3bf$export$9fa5c76e40adf3ca","$a0aac33c68ab6b34$export$bf2c97ada2c2b329","glint","billowy","shiftX","shiftY","tintIntensity","waterColor","$c90d8ed2baf3fb09$export$cc1bb59c1623a9ed","$a08c1e6a648373ca$export$2ba7369b7ae4551b","$98647ce0a9afc699$export$74eae7f690aa2952","$7eae9962e69f7347$export$8353bd967bf6b04d","shieldType","posLightX","posLightY","lightSize","hideRadius","chromatic","discardThreshold","posLight","lightColorAlpha","$1896fe3fb3382f00$export$29635fcc44af7f32","$8d8f4cc819ce08c5$export$7f3e808c6a96411c","alphaImg","alphaChr","nbImage","ampX","ampY","$cf403162ff153641$export$b460b340f858a038","$5b05583cddbffe38$export$a909c602e4f39889","$aa280a975796e7bf$export$28b3a3501a7f949","$34c9aecbf210823d$export$76689802e4398e92","spectral","$c1ccb9766e079f8c$export$7d6ef12f70fa5332","$4130c396ef8a0d82$export$dbf4d88a9f2fd9e6","auraIntensity","subAuraIntensity","discard","auraType","holes","_frame","$9d7a67912a650eb7$export$26c3bdb8b50816cc","PixelateFilter","sizeX","sizeY","$98979de687ff2ca3$export$ee64fcda6bb0a01b","$30e3cacecefea03b$export$be2f10404718dbad","div1","div2","tear","$2f78c4e175cbc874$export$ddb966d307e896d5","$5c475373f35e120f$export$3f7eb987d91438a2","_octaves","_octave","$f4c3c5d7c98dfcd4$export$59ce548d84b541a8","$6fa47e94e013e8e5$export$dd8c8c08b796f015","distortion","$d7e8f36ca079ac30$export$9bdad1ae37d738e0","$5ae15acc2d1ee812$export$e8341be799357874","twRadiusPercent","twAngle","twRotation","bpRadiusPercent","bpStrength","pivotX","pivotY","translationX","translationY","translation","twRadius","bpRadius","$dfbe319118a6cb9c$export$a55475809cca74a","$1737f68aeb781d93$export$df3de41f3315cb09","spread","splashFactor","cut","textureAlphaBlend","$fa5813b787142e29$export$981b7ede7b45eb87","$b20a995bbf43eef6$export$935bdd8d48f63a2e","$6d7cfa7b8cdebcda$export$cf7260b11c6fd85d","imagePath","progress","magnify","type","targetSpriteMatrix","targetUVMatrix","inputClampTarget","assignTexture","min","uSamplerTarget","_setTargetSpriteSize","targetSprite","ratioW","_texture","realWidth","realHeight","tex","Texture","renderable","valid","on","addChild","uvMatrix","TextureMatrix","update","mapCoord","uClampFrame","destroy","removeChild","children","$b43cf367df1e5bdb$export$3d2732364cd434b5","$792ddf9c96904ba5$export$f5292971f4ab78f9","color1","color2","color3","color4","dispersion","inlay","$95d08043b744c79a$export$9f64abe9148df1d","$14ec92966e5a1c8e$export$96f9417ff369e52","colorize","inverse","repeat","top","play","loop","maintainAspectRatio","maintainScale","_play","_loop","_maintainAspectRatio","_maintainScale","_playVideo","source","getProperty","tagName","isNaN","duration","Promise","resolve","onloadedmetadata","video","volume","stop","destroyed","pScale","w","$2b583b7eab61925d$export$3729c40aa34df6ff","$756e6c880a697f93$export$4569ea13832ce134","$66619a9ab494ce98$export$c3ce4d77f1074b4d","ColorReplaceFilter","originalColor","newColor","epsilon","$21b728704648605f$export$711d0b0b05d4a93a","$ff7eec2964ce8415$export$19612c32a2f7f4cd","MAIN","$ff7eec2964ce8415$export$7afd9c1079ecedf7","$ff7eec2964ce8415$var$params","$ff7eec2964ce8415$var$presetObject","name","library","sepia","noiseSize","scratchWidth","vignettingAlpha","vignettingBlur","$ff7eec2964ce8415$export$bfc0b9c61923b5ec","defaultTexture","$ff7eec2964ce8415$export$9381e89181e5b461","$a48a250facc06caa$var$Magic","$97b1237a45b106ea$export$4367b12d875874d3","$a48a250facc06caa$export$df3971f21aaed551","ARCHAIC","V030","V040","V040b","V041","V043","$a48a250facc06caa$export$182eb7a8e7220720","$97b1237a45b106ea$export$485113ed30b22bb8","dataVersionNow","e","$a48a250facc06caa$var$updatePresetsV030","$a48a250facc06caa$var$updatePresetsV040","$a48a250facc06caa$var$updatePresetsV040b","$a48a250facc06caa$var$updatePresetsV041","$a48a250facc06caa$var$updatePresetsV043","presets","$97b1237a45b106ea$export$bef1f36f5486a6a3","foundTemplateLibrary","preset","newPresets","$97b1237a45b106ea$export$a3bc9b8ed74fc","importPresetLibraryFromPath","overwrite","$0213c2d85a9c5b71$export$1ab2366e25c48ed5","CRTFilter","curvature","lineWidth","lineContrast","verticalLine","$1e1fe8af01bced2b$export$767e09686399ca49","RGBSplitFilter","redX","redY","greenX","greenY","blueX","blueY","$8d3e8f4e5d297304$var$fromConfig","config","o","tokenmagic","tmfxPreset","tmfxTexture","tint","tmfxTint","tmfxTextureAlpha","opacity","updateSource","flags","$8d3e8f4e5d297304$var$fromItem","wrapped","item","overrides","$8d3e8f4e5d297304$var$fromOverrides","configs","el","toLowerCase","$8d3e8f4e5d297304$var$fromCategories","categories","dmgSettings","hasDamage","_","dmgType","system","damage","parts","t","$8d3e8f4e5d297304$export$2e33ee4bec8a51fe","defaultConfiguration","defaultConfig","CONFIG","DND5E","damageTypes","MeasuredTemplate","types","tplType","_enabled","configure","modules","libWrapper","register","origFromItem","dnd5e","AbilityTemplate","fromItem","call","unregister","location","reload","getData","hasAutoTemplates","dmgTypes","templateTypes","$1d3b56998084216a$var$fromConfig","$1d3b56998084216a$export$437ce40001ae0212","PF2E","damageTraits","preCreateMeasuredTemplate","origin","pf2e","$1d3b56998084216a$var$fromOverrides","slug","$1d3b56998084216a$var$fromCategories","traits","trait","$0ef7da65087c6087$var$fromConfig","templateData","$0ef7da65087c6087$export$e8d12d88f51888cc","witcher","meleeSkills","meleeSkillType","$0ef7da65087c6087$var$fromOverrides","find","$0ef7da65087c6087$var$fromCategories","$4c34bd360e81b010$var$Magic","$4c34bd360e81b010$export$804072f25096732f","FormApplication","object","defaultOptions","title","i18n","localize","classes","tabs","navSelector","contentSelector","initial","submitOnClose","init","menuAutoTemplateSettings","key","label","hint","restricted","settingAutoTemplateSettings","scope","default","templates","getSystemTemplates","registerMenu","Boolean","onChange","configureAutoTemplate","Number","String","loadTemplates","getSettingsData","settingsData","autoTemplateEnable","emptyPreset","getPresets","submitText","_updateObject","formData","entries","expandObject","compacted","val","idx","activateListeners","html","click","_onAddOverride","_onRemoveOverride","event","preventDefault","closest","querySelectorAll","last","dataset","updateData","_onSubmit","preventClose","render","Hooks","once","wmtApplyRenderFlags","wmtApplyRenderFlagsType","wmtRefreshTemplate","wmtRefreshTemplateType","Handlebars","registerHelper","pop","join","wmtdUpdate","hasPresetData","hasTexture","_getPresetTemplateDefaultTexture","startsWith","wmtDraw","retVal","$97b1237a45b106ea$export$62085f0363fc8c9","toRadians","refreshShape","_destroyed","isVisible","lineStyle","_borderThickness","borderColor","beginFill","mat","IDENTITY","rotate","direction","rays","angles","Ray","fromAngle","sqrt","B","beginTextureFill","matrix","muted","drawShape","drawCircle","ray","dx","dy","controlIcon","visible","layer","border","hover","autohideTemplateElements","borderThickness","_original","preview","_hover","show","graphicsData","fillStyle","invalidate","ruler","owner","handle","_wmtApplyRenderFlags","mx","my","getLocalPosition","placeables","hl","grid","getHighlightLayer","cx","cy","mouseover","contains","cmtdUpdate","MeasuredTemplateDocument","cmtDraw","_draw","cmtApplyRenderFlags","_applyRenderFlags","cmtRefreshTemplate","_refreshTemplate","$97b1237a45b106ea$var$moduleTM","$97b1237a45b106ea$export$c67e46de1ec7dfa6","adjustment","ascii","dot","crt","oldfilm","glow","outline","bevel","xbloom","shadow","devicePixelRatio","twist","zoomblur","strengthX","strengthY","bulgepinch","zapshadow","fog","xfog","electric","wave","shockwave","fire","fumes","smoke","flood","images","field","xray","liquid","xglow","pixel","web","ripples","globes","splash","polymorph","xfire","spriteMask","replaceColor","ddTint","rgbSplit","Token","Tile","Drawing","$97b1237a45b106ea$var$i18n","$97b1237a45b106ea$var$exportObjectAsJson","exportObj","exportName","jsonStr","JSON","stringify","createElement","file","Blob","href","URL","createObjectURL","download","revokeObjectURL","socketAction","tmAction","tmPlaceableId","tmPlaceableType","tmFlag","tmViewedScene","user","viewedScene","socket","emit","resp","$97b1237a45b106ea$export$73ccc1811a23c47","moduleName","has","$97b1237a45b106ea$export$db02b1003f6b14db","$97b1237a45b106ea$export$4d149f3fface3da5","theOne","users","isGM","$97b1237a45b106ea$export$2bf9d1af56f0b37d","console","log","$97b1237a45b106ea$export$c106dd0671a0fc2d","warn","error","path","base","url","prefix","ROUTE_PREFIX","pathname","err","slice","$97b1237a45b106ea$export$674b9bd489502778","authorizedLayers","tokens","tiles","drawings","some","activeLayer","p","controlled","$97b1237a45b106ea$export$c0c03469ba031852","isTargeted","findPlaceable","rplaceable","n","$97b1237a45b106ea$var$randomizeParams","params1","randomized","param","opts","rVal","isArray","list","step","isInteger","setProperty","link","$97b1237a45b106ea$export$45dd0c4934db71d0","sources","s_val","t_val","_cachedContainer","Container","addFiltersOnSelected","getPreset","addUpdateFiltersOnSelected","addUpdateFiltersOnTargeted","targeted","token","addFiltersOnTargeted","actualFlags","newFlags","updateId","tmFilters","tmFilterType","tmFilterOwner","tmParams","updateParams","workingFlags","deleteFiltersOnTargeted","deleteFiltersOnSelected","isApplicableUser","hasUser","arr","include","exclude","_checkFilterId","found","_assignFilters","bulkLoading","animeInfos","filterInfo","_loadPersistedValues","_assignFilter","workingFilterInfo","setFilter","_singleLoadFilters","loadingRequest","_importPresetContent","content","check","element","replaceLibrary","pst","it","index","indexOf","_importTemplateSettingsContent","response","fetch","json","message","importTemplateSettingsFromPath","presetName","pName","pLibrary","argIsObj","adjustmentProp","filterProp","filterPropVal","deepClone","updateFilters","placeableIdSet","Set","animations","updateFiltersOnSelected","updateFiltersOnTargeted","importTemplateSettings","FilePicker","current","callback","browse","exportTemplateSettings","exportPresetLibrary","importPresetLibrary","importPresetLibraryFromURL","$","getJSON","resetPresetLibrary","confirm","ui","notifications","info","libraryName","addPreset","silent","pDefaultTexture","presetObject","deletePreset","splice","getControlledPlaceables","getTargetedTokens","getPlaceableById","filterTypes","_loadFilters","reverse","_clearImgFiltersByPlaceable","filterById","destroyClearedFilters","theFilters","filterTheFiltering","_getAnimeMap","_updateFilters","_id","foundFilter","filterFlag","puppets","_fxPseudoEqual","flagObject","filterObject","isObject","flagKey","flagValue","filterValue","areObjects","_updateTemplateData","presetLibrary","$97b1237a45b106ea$var$compilingShaders","tmpRenderTexture","RenderTexture","create","renderTexture","$97b1237a45b106ea$var$requestLoadFilters","startTimeout","reqTimer","setTimeout","clearTimeout","launchRequest","$97b1237a45b106ea$var$getAnchor","shapeType","dirRad","angleRad","cosRa1","rsinRa1","cosRa2","rsinRa2","$97b1237a45b106ea$var$onMeasuredTemplateConfig","querySelector","tmTemplate","isNewerVersion","version","currentPreset","tmfxTemplateData","hex2string","tmfxValues","selected","divPreset","htmlForm","after","css","$97b1237a45b106ea$var$initSocketListener","updateFlags","targetFlag","scene","scenes","updateEmbeddedDocuments","canvas1","document1","k","src","overhead","measuredTemplateInstance","templateTint","presetUpdate","tintUpdate","directionUpdate","angleUpdate","typeUpdate","valueOf","templateFX","presetOptions","Levels3DPreview","_active","hasFlags","hasPreset","hasTint","hasOpacity","hasFlagsNoOptions","newFilters","tmfxFiltersData","pstSearch","defaultTex","persist","tmfxFlags","FilterType","PlaceableType","SocketAction","broadcast","isActiveModule","getMinPadding","isAdditivePaddingConfig","isFilterCachingDisabled","isVideoDisabled","isTheOne","mustBroadCast","autosetPaddingMode","isZOrderConfig","isAnimationDisabled","fixPath","objectAssign","Magic"],"version":3,"file":"tokenmagicBundle.js.map"}